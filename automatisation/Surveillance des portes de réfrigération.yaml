alias: Surveillance des portes de rÃ©frigÃ©ration
description: >-
  Surveille l'ouverture des portes du frigo et congÃ©lateurs. DÃ©clenche des
  notifications vocales et Ulanzi si une porte reste ouverte plus d'1 minute
  quand on est prÃ©sent et en journÃ©e. RÃ©pÃ¨te toutes les 5 minutes jusqu'Ã 
  fermeture.
triggers:
  - entity_id:
      - binary_sensor.ouvportfrig_contact
      - binary_sensor.ouvportcong_contact
      - binary_sensor.ouvportcong2_contact
    to: "on"
    trigger: state
conditions:
  - condition: state
    entity_id: sensor.etat_canabang_et_device_tracker
    state: home
  - condition: state
    entity_id: input_text.jour_nuit
    state: jour
actions:
  - delay:
      hours: 0
      minutes: 0
      seconds: 20
      milliseconds: 0
  - condition: template
    value_template: |-
      {{ is_state('binary_sensor.ouvportfrig_contact', 'on') or 
         is_state('binary_sensor.ouvportcong_contact', 'on') or 
         is_state('binary_sensor.ouvportcong2_contact', 'on') }}
  - repeat:
      until:
        - condition: template
          value_template: |-
            {{ is_state('binary_sensor.ouvportfrig_contact', 'off') and 
               is_state('binary_sensor.ouvportcong_contact', 'off') and 
               is_state('binary_sensor.ouvportcong2_contact', 'off') }}
      sequence:
        - variables:
            portes_info: >-
              {% set portes = [] %} {% if
              is_state('binary_sensor.ouvportfrig_contact', 'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportfrig_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set portes = portes + [{'nom': 'frigo', 'duree': duree}] %}
              {% endif %} {% if is_state('binary_sensor.ouvportcong_contact',
              'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportcong_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set portes = portes + [{'nom': 'congÃ©lateur', 'duree': duree}] %}
              {% endif %} {% if is_state('binary_sensor.ouvportcong2_contact',
              'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportcong2_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set portes = portes + [{'nom': 'petit congÃ©lateur', 'duree': duree}] %}
              {% endif %} {{ portes }}
            duree_max: >-
              {% set durees = [] %} {% if
              is_state('binary_sensor.ouvportfrig_contact', 'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportfrig_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set durees = durees + [duree] %}
              {% endif %} {% if is_state('binary_sensor.ouvportcong_contact',
              'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportcong_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set durees = durees + [duree] %}
              {% endif %} {% if is_state('binary_sensor.ouvportcong2_contact',
              'on') %}
                {% set duree = ((now() - states.binary_sensor.ouvportcong2_contact.last_changed).total_seconds() / 60) | round(0) %}
                {% set durees = durees + [duree] %}
              {% endif %} {{ durees | max if durees | length > 0 else 0 }}
        - action: google_generative_ai_conversation.generate_content
          data:
            prompt: >-
              {% set nb_portes = portes_info | length %} {% set est_rappel =
              duree_max > 2 %}

              {% if est_rappel %}
                {% if nb_portes > 1 %}
                  GÃ©nÃ¨re un message vocal de rappel pour prÃ©venir que plusieurs portes sont ouvertes depuis diffÃ©rentes durÃ©es :
                  {% for porte in portes_info %}
                  - {{ porte.nom }} : {{ porte.duree }} minute{{ 's' if porte.duree > 1 }}
                  {% endfor %}
                  Le ton doit Ãªtre plus insistant mais toujours avec l'humour sarcastique d'un droÃ¯de K-2SO.
                  Mentionne les durÃ©es spÃ©cifiques de chaque porte si c'est pertinent.
                  Exemples :
                  Â« Rappel : frigo ouvert depuis 6 minutes, congÃ©lateur depuis 3. Performance remarquable. Â»
                  Â« Persistance notable : plusieurs portes ouvertes simultanÃ©ment. Record en cours ? Â»
                {% else %}
                  GÃ©nÃ¨re un message vocal de rappel pour prÃ©venir que {{ portes_info[0].nom }} est encore ouverte depuis {{ portes_info[0].duree }} minute{{ 's' if portes_info[0].duree > 1 }}.
                  Le ton doit Ãªtre plus insistant mais toujours avec l'humour sarcastique d'un droÃ¯de K-2SO.
                  Exemples :
                  Â« Rappel : {{ portes_info[0].nom }} toujours ouverte. {{ portes_info[0].duree }} minutes et je compte... Â»
                  Â« Persistance remarquable : {{ portes_info[0].nom }} ouverte depuis {{ portes_info[0].duree }} minutes. Â»
                  Â« Nouveau record ? {{ portes_info[0].duree }} minutes d'ouverture continue. Fascinant. Â»
                {% endif %}
              {% else %}
                {% if nb_portes > 1 %}
                  GÃ©nÃ¨re un message vocal pour prÃ©venir que plusieurs portes sont ouvertes :
                  {% for porte in portes_info %}
                  - {{ porte.nom }} : {{ porte.duree }} minute{{ 's' if porte.duree > 1 }}
                  {% endfor %}
                  Le ton doit Ãªtre court, factuel, avec une touche d'humour ou de sarcasme
                  lÃ©ger, dans le style d'un droÃ¯de reprogrammÃ© faÃ§on K-2SO (Star Wars).
                  Tu peux mentionner les durÃ©es diffÃ©rentes si c'est pertinent.
                  Exemples :
                  Â« DÃ©tection : frigo et congÃ©lateur ouverts. EfficacitÃ© Ã©nergÃ©tique en option ? Â»
                  Â« Multiples anomalies thermiques dÃ©tectÃ©es. StratÃ©gie intÃ©ressante. Â»
                  Â« Portes ouvertes simultanÃ©ment. Les bactÃ©ries organisent une fÃªte. Â»
                {% else %}
                  GÃ©nÃ¨re un message vocal pour prÃ©venir que {{ portes_info[0].nom }} est ouverte depuis {{ portes_info[0].duree }} minute{{ 's' if portes_info[0].duree > 1 }}.
                  Le ton doit Ãªtre court, factuel, avec une touche d'humour ou de sarcasme
                  lÃ©ger, dans le style d'un droÃ¯de reprogrammÃ© faÃ§on K-2SO (Star Wars).
                  Exemples :
                  Â« Porte ouverte dÃ©tectÃ©e. L'efficacitÃ© Ã©nergÃ©tique n'est visiblement pas votre fort. Â»
                  Â« {{ portes_info[0].nom }} ouverte. Les bactÃ©ries apprÃ©cient votre gÃ©nÃ©rositÃ©. Â»
                  Â« DÃ©tection d'une anomalie thermique. Dois-je calculer le gaspillage ? Â»
                {% endif %}
              {% endif %}

              GÃ©nÃ¨re uniquement la phrase, sans explications, sans balises, sans
              mÃ©tadonnÃ©es.
          response_variable: generated_message
        - parallel:
            - action: script.1717220445110
              data:
                message: "{{ generated_message.text }}"
            - action: script.awtrix_dynamique_customapp_dupliquer
              data:
                message: "{{ generated_message.text }}"
                icone: "{{ 'alert' if duree_max > 5 else 'snowflake' }}"
                color: "{{ '#FF4444' if duree_max > 5 else '#FF6B6B' }}"
                rainbow: "false"
                scrollspeed: "{{ 70 if duree_max > 5 else 60 }}"
                duree: "35"
            - action: script.notification_discord
              data:
                nom: ðŸ¥¶ Surveillance Frigo/CongÃ©lateur
                description: "{{ generated_message.text }}"
                image_url: https://i.ibb.co/3pYRvp4/Frigo-open.png
        - condition: template
          value_template: |-
            {{ is_state('binary_sensor.ouvportfrig_contact', 'on') or 
               is_state('binary_sensor.ouvportcong_contact', 'on') or 
               is_state('binary_sensor.ouvportcong2_contact', 'on') }}
        - delay:
            hours: 0
            minutes: 2
            seconds: 0
            milliseconds: 0
mode: restart
