views:
  - type: sections
    max_columns: 3
    title: Home
    path: home
    sections:
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
          - type: custom:bubble-card
            card_type: button
            button_type: state
            entity: input_text.travail_status
            icon: m3o:work
            sub_button:
              - entity: input_datetime.start_travail
                show_state: true
                show_background: false
                name: Début
                show_name: true
                visibility:
                  - condition: state
                    entity: input_datetime.start_travail
                    state_not: '1970-01-01 00:00:00'
              - entity: input_datetime.end_travail
                show_background: false
                show_last_changed: false
                show_state: true
                name: Fin
                show_name: true
                visibility:
                  - condition: state
                    entity: input_datetime.end_travail
                    state_not: '1970-01-01 00:00:00'
            card_layout: large-2-rows
            name: Demain ?
            tap_action:
              action: perform-action
              target:
                entity_id: automation.planning
              data:
                skip_condition: true
              perform_action: automation.trigger
        column_span: 1
      - type: grid
        cards: []
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.lumieres_allumees
                icon: phu:bulb-sultan-v2
                styles: >
                  .bubble-icon {
                      color: ${hass.states['sensor.lumieres_allumees'].state > '0' ? 'yellow' : ''} !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['sensor.lumieres_allumees'].state > 0 ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: '#lumieres'
                card_layout: large-2-rows
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.nombre_volets
                icon: ''
                styles: >
                  .bubble-icon {
                      color: ${hass.states['sensor.nombre_volets'].state > '0' ? 'seagreen' : ''} !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['sensor.nombre_volets'].state > 0 ?
                  'mdi:window-shutter-open' : 'mdi:window-shutter')}
                name: Volets ouverts
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: '#volets'
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.nombre_fenetres
                icon: ''
                styles: >
                  .bubble-icon {
                      color: ${hass.states['sensor.nombre_fenetres'].state > '0' ? 'seagreen' : ''} !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['sensor.nombre_fenetres'].state > 0 ?
                  'mdi:window-open-variant' : 'mdi:window-closed-variant')}
                name: Fenêtres ouvertes
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.nombre_portes
                icon: ''
                styles: >
                  .bubble-icon {
                      color: ${hass.states['sensor.nombre_portes'].state > '0' ? 'seagreen' : ''} !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['sensor.nombre_portes'].state > 0 ?
                  'mdi:door-open' : 'mdi:door')}
                name: Portes ouvertes
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.nombre_prises
                icon: ''
                styles: >
                  .bubble-icon {
                      color: ${hass.states['sensor.nombre_prises'].state > '0' ? 'seagreen' : ''} !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['sensor.nombre_prises'].state > 0 ?
                  'mdi:power-socket-eu' : 'mdi:power-socket-eu')}
                name: Prises allumées
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: '#prises'
            columns: 2
            grid_options:
              columns: 12
              rows: 3
      - type: grid
        cards:
          - type: media-control
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_salon
                state: playing
            entity: media_player.plex_plex_for_android_tv_salon
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: left; /* Centers content horizontally */
                  text-align: left; /* Centers text horizontally */
                  --ha-card-border-radius: 50px;
                }
            grid_options:
              columns: 12
              rows: 4
          - type: media-control
            visibility:
              - condition: state
                entity: media_player.kodi_salon
                state: playing
            entity: media_player.kodi_salon
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: left; /* Centers content horizontally */
                  text-align: left; /* Centers text horizontally */
                  --ha-card-border-radius: 50px;
                }
            grid_options:
              columns: 12
              rows: 4
          - type: entities
            entities:
              - type: custom:mini-media-player
                entity: media_player.spotifyplus_gael
                artwork: full-cover
                artwork_border: true
                power_color: true
                show_source: true
                group: false
                source: full
                info: scroll
                hide:
                  power: false
                  repeat: false
                  runtime: false
                  shuffle: false
                  source: false
                  volume: false
            state_color: false
            visibility:
              - condition: state
                entity: media_player.spotifyplus_gael
                state: playing
            show_header_toggle: false
            grid_options:
              columns: 12
              rows: 8
      - type: grid
        cards:
          - type: custom:bubble-card
            style:
              left: 4.25%
              top: 22%
              width: 8.5%
              height: 5%
            card_type: button
            button_type: state
            entity: weather.pompey
            styles: |-
              .bubble-icon {
                color: ${hass.states['weather.pompey'].state === 'partlycloudy' ? 'skyblue'
                  : hass.states['weather.pompey'].state === 'clear-night' ? 'purple'
                  : hass.states['weather.pompey'].state === 'cloudy' ? 'skyblue'
                  : hass.states['weather.pompey'].state === 'rainy' ? 'blue'
                  : hass.states['weather.pompey'].state === 'pouring' ? 'red'
                  : hass.states['weather.pompey'].state === 'sunny' ? 'yellow'
                  : hass.states['weather.pompey'].state === 'lightning' ? 'yellow'
                  : hass.states['weather.pompey'].state === 'windy' ? 'red'
                  : hass.states['weather.pompey'].state === 'snow' ? 'white'
                  : hass.states['weather.pompey'].state === 'hail' ? 'red'
                  : hass.states['weather.pompey'].state === 'fog' ? 'grey'
                  : 'white'} !important;
                animation: ${hass.states['weather.pompey'].state === 'partlycloudy' ? 'cloudy 10s ease-in-out infinite, sun 2s infinite' 
                  : hass.states['weather.pompey'].state === 'clear-night' ? 'moon 10s linear infinite, stars 5s linear infinite'
                  : hass.states['weather.pompey'].state === 'cloudy' ? 'cloudy 10s ease-in-out infinite'
                  : hass.states['weather.pompey'].state === 'rainy' ? 'cloudy 10s ease-in-out infinite, rain 1.5s infinite'
                  : hass.states['weather.pompey'].state === 'pouring' ? 'cloudy 10s ease-in-out infinite, pouring 1.5s infinite'
                  : hass.states['weather.pompey'].state === 'sunny' ? 'sunny 8s ease-in-out infinite alternate'
                  : hass.states['weather.pompey'].state === 'lightning' ? 'cloudy 10s ease-in-out infinite, lightning 4s infinite'
                  : hass.states['weather.pompey'].state === 'windy' ? 'windy 10s ease-in-out infinite'
                  : hass.states['weather.pompey'].state === 'snow' ? 'cloudy 10s ease-in-out infinite, snow 4s infinite'
                  : hass.states['weather.pompey'].state === 'hail' ? 'cloudy 10s ease-in-out infinite, hail 2s infinite'
                  : hass.states['weather.pompey'].state === 'fog' ? 'cloudy 10s ease-in-out infinite, fog 4s infinite'
                  : 'sun 2s infinite'} ;
                  }
                  @keyframes sunny { 
                      70% { transform: rotate(360deg) scale(1); }
                      80% { transform: scale(1); }
                      90% { transform: scale(1.15); }
                      100% { transform: scale(1); }
                  }
                  @keyframes cloudy {
                      0%, 100% { transform: translateX(3px); }
                      30% { transform: translateX(-1px); }
                      45% { transform: translateX(1.5px); }
                      75% { transform: translateX(-3.2px); }
                  } 
                  @keyframes rain {
                      50% { clip-path: polygon(0 0, 100% 0, 100% 73%, 71% 73%, 50% 39%, 29% 73%, 0 73%); }
                  }
                  @keyframes pouring {
                      0%, 50%, 100% { clip-path: inset(0 0 0 0); }
                      25% { clip-path: polygon(0 0, 100% 0, 100% 83%, 54% 83%, 62% 47%, 47% 46%, 38% 83%, 0 83%); }
                      75%  { clip-path: polygon(0 0, 100% 0, 100% 70%, 75% 70%, 80% 48%, 63% 48%, 54% 94%, 32% 94%, 46% 46%, 30% 46%, 23% 72%, 0 72%); }
                  }
                  @keyframes lightning {
                      10%, 15% { clip-path: polygon(0 0, 100% 0, 100% 100%, 47% 100%, 69% 55%, 66% 40%, 48% 39%, 24% 100%, 0 100%); transform: scale(1.1); }
                      10.1%, 15.1% { clip-path: inset(0 0 0 0); transform: scale(1); }
                  }
                  @keyframes moon {
                      0%, 100% { transform: rotate(12deg); }
                      30% { transform: rotate(-6deg); }
                      45% { transform: rotate(8deg); }
                      75% { transform: rotate(-10deg); }
                  }
                  @keyframes stars {
                      0%, 3.1%, 14.1% { clip-path: inset(0 0 0 0); }
                      3% { clip-path: polygon(1% 1%, 0% 99%, 99% 100%, 99% 62%, 68% 62%, 62% 44%, 76% 34%, 100% 34%, 99% 0%); }
                      14% { clip-path: polygon(1% 1%, 0% 99%, 99% 100%, 100% 25%, 51% 45%, 38% 34%, 36% 0); }
                  }
                  @keyframes windy {
                      0%, 100% { transform: scaleX(1.2); }
                      30% { transform: scaleX(0.9); }
                      45% { transform: scaleX(1.1); }
                      75% { transform: scaleX(0.8); }
                  }
                  @keyframes snow {
                      50% { clip-path: polygon(0 0, 100% 0, 100% 100%, 65% 100%, 76% 73%, 57% 49%, 34% 56%, 26% 79%, 37% 100%, 0 100%); }
                      51% { clip-path: inset(0 0 0 0); }
                  }
                  @keyframes hail {
                      0%, 26%, 51%, 76%, 100% { clip-path: inset(0 0 0 0); }
                      25% { clip-path: polygon(0 0, 100% 0, 100% 100%, 62% 100%, 47% 69%, 56% 55%, 43% 43%, 31% 58%, 48% 68%, 63% 100%, 0 100%); }
                      50%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 62% 100%, 61% 86%, 74% 74%, 61% 60%, 46% 69%, 60% 87%, 63% 100%, 0 100%); }
                      75%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 47% 100%, 56% 83%, 42% 68%, 27% 81%, 37% 100%, 0 100%); }
                  }
                  @keyframes fog {
                      0%, 26%, 76%, 100% { clip-path: inset(0 0 0 0); }
                      25% { clip-path: polygon(0 0, 100% 0, 100% 59%, 60% 59%, 60% 74%, 100% 74%, 100% 100%, 0 100%); }
                      75%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 26% 100%, 26% 76%, 0 76%); }
                  }
                  @keyframes sun {
                      50% { clip-path: polygon(0 67%, 18% 55%, 16% 31%, 41% 12%, 67% 24%, 77% 59%, 100% 64%, 100% 100%, 0 100%); }
                  }
              .bubble-button-card-container {
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                  color: ${hass.states['sensor.pompey_temperature'].state > 23 ? 'red'
                        : hass.states['sensor.pompey_temperature'].state > 19 ? 'seagreen' : 'deepskyblue' } !important;
                }
            force_icon: true
            show_last_changed: false
            show_attribute: false
            name: Meteo
            button_action: {}
            scrolling_effect: false
            sub_button:
              - entity: weather.pompey
                show_attribute: true
                attribute: temperature
                icon: mdi:thermometer
                show_background: false
                name: Temperature
              - entity: sensor.pompey_snow_chance
                show_background: false
                show_state: true
                visibility:
                  - condition: numeric_state
                    entity: sensor.pompey_snow_chance
                    above: 0
                name: Neige
              - entity: sensor.pompey_wind_speed
                name: Vent
                icon: fas:wind
                show_background: false
                show_state: true
                visibility:
                  - condition: numeric_state
                    entity: sensor.pompey_wind_speed
                    above: 0
              - entity: sensor.pompey_freeze_chance
                name: Gelé
                show_background: false
                show_state: true
                visibility:
                  - condition: numeric_state
                    entity: sensor.pompey_freeze_chance
                    above: 0
            card_layout: large-2-rows
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lumieres'
                show_header: false
                close_on_click: true
                card_layout: normal
                margin_top_desktop: calc(100vh - 600px)
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_salon
                name: Salon
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_salon_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_salon'].state === 'on' ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                icon: phu:bulb-flood
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sam
                name: Salle à Manger
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_sam_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon", hass.states['light.hue_sam'].state
                  === 'on' ? 'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_cuisine
                name: Cuisine
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_cuisine_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_cuisine'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.ledplancui_cct
                name: Plan de Travail
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button: []
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.ledplancui_cct'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_chambre
                name: Chambre
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_chambre_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_chambre'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sdb
                name: Salle de Bain
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_sdb_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                  - entity: scene.hue_sdb_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                  - entity: scene.hue_sdb_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                  - entity: scene.hue_sdb_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                styles: >-
                  ${icon.setAttribute("icon", hass.states['light.hue_sdb'].state
                  === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
            grid_options:
              rows: 3
              columns: 9
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#volets'
                close_on_click: true
                show_header: false
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsal
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsal
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: Salon
                icon_open: mdi:window-shutter
                icon_close: shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsal'].state === 'open' ? 'seagreen' : ''} !important;
                      }

                  ${icon.setAttribute("icon", hass.states['cover.volsal'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsam
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsam
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                show_icon: true
                show_name: true
                card_layout: large
                name: Salle à Manger
                icon_open: ''
                icon_up: m3of:keyboard-arrow-up
                icon_down: m3of:keyboard-arrow-down
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsam'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsam'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volcui
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volcui
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: Cuisine
                icon_open: mdi:window-shutter
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volcui'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volcui'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsdb
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsdb
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: SdB
                icon_open: mdi:window-shutter-open
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsdb'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsdb'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volets
                card_layout: large
            grid_options:
              columns: 9
              rows: 3
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/468a7538ce1a7001cbb7bcca80027267/original
    cards: []
    badges:
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        color: ''
        entity: person.canabang
        show_entity_picture: true
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_maison'') | round(2) }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_maison') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_maison
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    subview: true
  - title: Séjour
    badges:
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  m3o:person-apron
                {% else %}
                  m3o:person-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.presence_salon
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_salon_movement') %}  
                {% if state == 'on' %}
                  mdi:motion-sensor
                {% else %}
                  mdi:motion-sensor-off
                {% endif %}
        color: |-
          {% set state = states('binary_sensor.esp_salon_movement') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_salon_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.sejour'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.sejour') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.sejour
        tap_action:
          action: navigate
          navigation_path: '#temperature'
      - type: custom:mushroom-template-badge
        content: '{{ states(''sensor.humidite_sejour'') }} %'
        icon: m3r:humidity-percentage
        color: blue
        entity: sensor.humidite_sejour
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        color: ''
        entity: sensor.lux_sejour
        icon: mdi:brightness-7
        tap_action:
          action: navigate
          navigation_path: '#lux'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    sections:
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: empty-column
            card_layout: large
            grid_options:
              columns: 6
              rows: 1
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
        column_span: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Fenêtres
                icon: mdi:window-closed-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.ouvfenetsal_contact
                scrolling_effect: false
                show_state: true
                name: salon
                card_layout: large
                sub_button:
                  - entity: sensor.ouvfenetsal_battery
                    show_state: true
                    state_background: false
                    show_background: false
                    name: battery
                    icon: mdi:battery
                    show_attribute: true
                show_attribute: false
                icon: mdi:window-closed-variant
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? '' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvfenetsal_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvfenetsal_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsal_battery'].state > '30' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsal_battery'].state > '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvfenetsal_contact'].state ===
                  'on' ? 'mdi:window-open-variant' :
                  'mdi:window-closed-variant')}
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.ouvfenetsam_contact
                scrolling_effect: false
                show_state: true
                name: Salle à Manger
                card_layout: large
                sub_button:
                  - entity: sensor.ouvfenetsam_battery
                    show_background: false
                    show_state: true
                show_attribute: false
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? '' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvfenetsam_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvfenetsam_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsam_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsam_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvfenetsam_contact'].state ===
                  'on' ? 'mdi:window-open-variant' :
                  'mdi:window-closed-variant')}
                icon: mdi:window-closed-variant
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Portes
                icon: phu:panel-door-close
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: binary_sensor.ouvportent_contact
                name: Entrée
                icon: ''
                show_state: true
                show_attribute: false
                attribute: battery
                card_layout: large
                sub_button:
                  - entity: sensor.ouvportent_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvportent_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvportent_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvportent_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvportent_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvportent_contact'].state === 'on'
                  ? 'phu:panel-door-open' : 'phu:panel-door-close')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Lumières
                icon: phu:bulb-group
                card_layout: normal
                grid_options:
                  columns: 12
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_salon
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: Salon
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_salon'].state === 'on' ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                sub_button:
                  - entity: light.hue_salon
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                    visibility:
                      - condition: state
                        entity: light.hue_salon
                        state: 'on'
                  - entity: light.hue_salon
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                    visibility:
                      - condition: state
                        entity: light.hue_salon
                        state: 'on'
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                icon: phu:bulb-flood
                tap_action:
                  action: navigate
                  navigation_path: '#scene-salon'
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sam
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: Salle à Manger
                styles: >-
                  .bubble-sub-button-1 {
                    display: ${hass.states['light.hue_sam'].state === 'on' ? '' : 'none'} !important;
                  }

                  .bubble-sub-button-2 {
                    display: ${hass.states['light.hue_sam'].state === 'on' ? '' : 'none'} !important;
                  }

                  ${icon.setAttribute("icon", hass.states['light.hue_sam'].state
                  === 'on' ? 'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                sub_button:
                  - entity: light.hue_sam
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                  - entity: light.hue_sam
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                icon: phu:bulb-flood
                tap_action:
                  action: navigate
                  navigation_path: '#scene-sam'
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Volets
                icon: shutter
                card_layout: normal
                grid_options:
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsal
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsal
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: normal
                force_icon: false
                name: Salon
                icon_open: mdi:window-shutter
                icon_close: shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsal'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsal'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsam
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsam
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                show_icon: true
                show_name: true
                card_layout: normal
                name: Salle à Manger
                icon_open: ''
                icon_up: m3of:keyboard-arrow-up
                icon_down: m3of:keyboard-arrow-down
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsam'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsam'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.awtrix_salon_matrix
                name: Horloge
                scrolling_effect: false
                use_accent_color: true
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: sensor.awtrix_salon_current_app
                    show_name: false
                    show_state: true
                    show_background: false
                    show_attribute: false
                  - show_attribute: true
                    attribute: brightness
                    show_background: false
                    light_background: false
                    icon: mdi:brightness-percent
                force_icon: false
                attribute: brightness
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
              - type: custom:bubble-card
                card_type: button
                entity: switch.pris_tel_sal
                icon: mdi:power-socket-fr
                name: Telephone
                scrolling_effect: false
                show_state: false
                card_layout: large-2-rows
                sub_button:
                  - entity: sensor.redmi_note_8_pro_battery_level
                    show_state: true
                    state_background: false
                    show_background: false
                    show_icon: true
                  - entity: sensor.pris_tel_sal_power
                    state_background: false
                    show_background: false
                    show_icon: true
                    show_state: true
                    visibility:
                      - condition: state
                        entity: binary_sensor.redmi_note_8_pro_is_charging
                        state: 'on'
                      - condition: state
                        entity: switch.pris_tel_sal
                        state: 'on'
                force_icon: true
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                            color: ${hass.states['switch.pris_tel_sal'].state === 'on' ? 'seagreen' : ''} !important;
                          }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }
              - type: custom:bubble-card
                card_type: button
                entity: input_boolean.switch_tv_2
                name: Tv
                scrolling_effect: false
                show_state: false
                card_layout: large
                show_name: true
                force_icon: false
                show_last_changed: false
                sub_button:
                  - entity: media_player.partout_2
                    show_background: false
                    show_icon: true
                    show_attribute: true
                    attribute: media_title
                    visibility:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: media_player.partout_2
                            state: playing
                          - condition: state
                            entity: input_boolean.switch_tv_2
                            state: 'on'
                  - show_background: false
                    show_attribute: true
                    visibility:
                      - condition: and
                        conditions:
                          - condition: state
                            entity: media_player.kodi_salon
                            state: playing
                          - condition: state
                            entity: input_boolean.switch_tv_2
                            state: 'on'
                    show_state: false
                    entity: media_player.kodi_salon
                    attribute: media_title
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                    color: ${hass.states['input_boolean.switch_tv_2'].state === 'on' ? 'seagreen' : ''} !important;
                   }
              - type: custom:bubble-card
                card_type: button
                button_type: switch
                entity: light.esp_va_salon_lcd_backlight
                name: va salon
                icon: mdi:led-off
                scrolling_effect: false
                show_attribute: false
                attribute: supported_features
                grid_options:
                  columns: 6
                  rows: 1
                button_action:
                  tap_action:
                    action: assist
                use_accent_color: false
                show_state: false
                card_layout: large
                sub_button:
                  - entity: assist_satellite.esp_va_salon_satellite_assist
                    show_icon: true
                    state_background: false
                    show_background: false
                    icon: mdi:account-voice
                    show_state: true
                tap_action:
                  action: toggle
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
              - type: conditional
                conditions:
                  - condition: state
                    entity: media_player.cube
                    state: playing
                card:
                  type: custom:bubble-card
                  card_type: select
                  entity: media_player.cube
                  show_attribute: false
                  attribute: source
                  show_state: false
                  show_last_changed: false
                  button_type: state
                  select_attribute: source_list
                  scrolling_effect: false
            columns: 2
            grid_options:
              columns: 12
              rows: 4
      - type: grid
        cards:
          - type: media-control
            entity: media_player.plex_plex_for_android_tv_salon
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_salon
                state: playing
            grid_options:
              columns: 12
              rows: 4
          - type: media-control
            entity: media_player.kodi_salon
            visibility:
              - condition: state
                entity: media_player.kodi_salon
                state: playing
            grid_options:
              columns: 12
              rows: 4
          - type: entities
            entities:
              - type: custom:mini-media-player
                entity: media_player.spotifyplus_gael
                artwork: full-cover
                artwork_border: true
                power_color: true
                show_source: true
                group: false
                source: full
                info: scroll
                hide:
                  power: false
                  repeat: false
                  runtime: false
                  shuffle: false
                  source: false
                  volume: false
                sound_mode: icon
            state_color: false
            visibility:
              - condition: state
                entity: media_player.spotifyplus_gael
                state: playing
            show_header_toggle: false
            grid_options:
              columns: 12
              rows: 8
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Thermostat
                icon: phu:thermostat-v2
                grid_options:
                  columns: 12
                  rows: 1
              - type: custom:bubble-card
                card_type: climate
                entity: climate.therm_sejour
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                    show_icon: true
                    show_background: false
                    show_attribute: false
                    show_last_changed: false
                    show_state: false
                show_icon: true
                scrolling_effect: false
                force_icon: false
                show_name: false
                show_state: false
                show_attribute: true
                attribute: preset_mode
                state_color: false
                grid_options:
                  columns: 12
                  rows: 1
                visibility:
                  - condition: state
                    entity: climate.therm_sejour
                    state: heat
                card_layout: large
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'off' ? '' : 'sienna'} !important;
                    }
                  .bubble-icon {
                      color: ${hass.states['climate.therm_sejour'].attributes.hvac_action === 'heating' ? 'sienna' : 'grey'} !important;
                    }
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.radsal_l1
                    icon: mdi:radiator
                    name: Salon
                    show_state: false
                    card_layout: large
                    force_icon: false
                    scrolling_effect: false
                    show_attribute: true
                    styles: >
                      .bubble-button-background {
                          opacity: 1 !important;
                          background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : 'sienna'} !important;
                        }
                      .bubble-icon {
                          color: ${hass.states['switch.radsal_l1'].state === 'on' ? 'grey' : 'sienna'} !important;
                        }
                      ${icon.setAttribute("icon",
                      hass.states['switch.radcui_l1'].state === 'off' ?
                      'mdi:radiator' : 'mdi:radiator-off')}
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.radcui_l1
                    icon: mdi:radiator
                    name: Cuisine
                    show_state: false
                    card_layout: large
                    force_icon: false
                    scrolling_effect: false
                    show_attribute: false
                    styles: >
                      .bubble-button-background {
                          opacity: 1 !important;
                          background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : 'sienna'} !important;
                        }
                      .bubble-icon {
                          color: ${hass.states['switch.radcui_l1'].state === 'on' ? 'grey' : 'sienna'} !important;
                        }
                      ${icon.setAttribute("icon",
                      hass.states['switch.radcui_l1'].state === 'off' ?
                      'mdi:radiator' : 'mdi:radiator-off')}
                columns: 2
            columns: 1
            grid_options:
              columns: 12
              rows: 3
            visibility:
              - condition: state
                entity: climate.therm_sejour
                state: heat
      - type: grid
        cards: []
        column_span: 1
      - type: grid
        cards: []
        visibility:
          - condition: state
            entity: climate.therm_sejour
            state: heat
      - type: grid
        cards: []
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature'
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.sejour
                    name: ''
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.sejour'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.sejour'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    sub_button: []
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    name: Fenetre cuisine
                    scrolling_effect: false
                    show_state: true
                    entity: sensor.capfencui_temperature
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capfencui_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.capfencui_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }

                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.capfencui_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.capfencui_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.capfencui_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    sub_button:
                      - entity: sensor.capfencui_battery
                        show_background: false
                        show_name: false
                        show_state: true
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.capfensal_temperature
                    name: Fenetre salon
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capfensal_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.capfensal_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }

                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.capfensal_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.capfensal_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.capfensal_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    sub_button:
                      - entity: sensor.capfensal_battery
                        show_background: false
                        show_state: true
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_cuisine_temperature
                    name: Esp cuisine
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.esp_cuisine_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.esp_cuisine_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.capsal_temperature
                    name: Salon
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capsal_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.capsal_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.capsal_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.capsal_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.capsal_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    card_layout: large
                    sub_button:
                      - entity: sensor.capsal_battery
                        show_background: false
                        show_state: true
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.capfensam_temperature
                    name: Fenetre sam
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capfensam_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.capfensam_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.capfensam_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.capfensam_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.capfensam_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    card_layout: large
                    sub_button:
                      - entity: sensor.capfensam_battery
                        show_background: false
                        show_state: true
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_va_salon_temperature
                    name: Va salon
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.esp_va_salon_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.esp_va_salon_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_multi_capteur_temperature
                    name: Esp multi
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.esp_multi_capteur_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.esp_multi_capteur_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lux'
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.lux_sejour
                    icon: mdi:brightness-7
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_multi_capteur_lux
                    icon: mdi:brightness-7
                    scrolling_effect: false
                    name: multi
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_salon_lux
                    icon: mdi:brightness-7
                    scrolling_effect: false
                    name: salon
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_cuisine_lux
                    icon: mdi:brightness-7
                    scrolling_effect: false
                    name: cuisine
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    icon: mdi:brightness-7
                    scrolling_effect: false
                    name: Salon mija
                    entity: sensor.lumisal_illuminance
                    sub_button:
                      - entity: sensor.lumisal_battery
                        show_background: false
                        show_state: true
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-salon'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_salon_1_veilleuse
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_salon_2_stimulation
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_salon_3_attenue
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_salon_4_lumineux
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-sam'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sam_1_veilleuse
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sam_2_stimulation
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sam_3_attenue
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sam_4_lumineux
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
    type: sections
    max_columns: 2
    cards: []
    dense_section_placement: false
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/d0a8ce4fe354f31e2e67458deab93a51/original
    path: sejour
    subview: true
  - type: sections
    max_columns: 2
    title: Cuisine
    path: cuisine
    sections:
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: empty-column
            card_layout: large
            grid_options:
              columns: 6
              rows: 1
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
          - type: custom:bubble-card
            card_type: button
            button_type: state
            entity: sensor.echo_show_cuisine_next_timer
            name: Minuteur
            grid_options:
              columns: 6
              rows: 1
            visibility:
              - condition: state
                entity: sensor.echo_show_cuisine_next_timer
                state_not: unknown
        column_span: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Fenêtres
                icon: mdi:window-closed-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.ouvfenetcuis_contact
                scrolling_effect: false
                show_state: true
                name: Cuisine
                card_layout: large
                sub_button:
                  - entity: sensor.ouvfenetcuis_battery
                    show_background: false
                    show_state: true
                show_attribute: false
                icon: mdi:window-closed-variant
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvfenetcuis_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvfenetcuis_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvfenetcuis_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvfenetcuis_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvfenetcuis_contact'].state ===
                  'on' ? 'mdi:window-open-variant' :
                  'mdi:window-closed-variant')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Portes
                icon: phu:panel-door-close
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: binary_sensor.ouvportfrig_contact
                name: Frigo
                icon: mdi:fridge-industrial
                show_state: true
                show_attribute: false
                attribute: battery
                card_layout: large
                sub_button:
                  - entity: sensor.ouvportfrig_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                styles: >-
                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvportfrig_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvportfrig_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvportfrig_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  .bubble-icon {

                  color:
                  ${hass.states['binary_sensor.ouvportfrig_contact'].state ===
                  'on' ? 'seagreen' : ''} !important;

                  }
                scrolling_effect: false
              - type: custom:bubble-card
                card_type: button
                entity: binary_sensor.ouvportcong_contact
                name: Congel
                icon: mdi:fridge-industrial
                show_state: true
                show_attribute: false
                attribute: battery
                card_layout: large
                sub_button:
                  - entity: sensor.ouvportcong_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                styles: >-
                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvportcong_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvportcong_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvportcong_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  .bubble-icon {

                  color:
                  ${hass.states['binary_sensor.ouvportcong_contact'].state ===
                  'on' ? 'seagreen' : ''} !important;

                  }
                scrolling_effect: false
              - type: custom:bubble-card
                card_type: button
                entity: binary_sensor.ouvportcong2_contact
                name: Petit congel
                icon: mdi:fridge-industrial
                show_state: true
                show_attribute: false
                attribute: battery
                card_layout: large
                sub_button:
                  - entity: sensor.ouvportcong2_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                styles: >-
                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvportcong2_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvportcong2_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvportcong2_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  .bubble-icon {

                  color:
                  ${hass.states['binary_sensor.ouvportcong2_contact'].state ===
                  'on' ? 'seagreen' : ''} !important;

                  }
                scrolling_effect: false
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.capetalon_temperature
                name: Frigo
                scrolling_effect: false
                show_name: true
                show_state: true
                card_layout: large
                sub_button:
                  - entity: sensor.capetalon_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: '#temperature'
                styles: |-
                  .bubble-icon {
                      color: ${hass.states['sensor.capetalon_temperature'].state >= '9' ? 'red' :
                              hass.states['sensor.capetalon_temperature'].state >= '2' ? 'seagreen' : 'blue'
                      } !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.capetalon_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.capetalon_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.capetalon_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }
            columns: 2
      - type: grid
        cards:
          - type: media-control
            visibility:
              - condition: state
                entity: media_player.echo_show_cuisine
                state: playing
            grid_options:
              columns: 12
              rows: auto
            entity: media_player.echo_show_cuisine
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Lumières
                icon: hue:bulb-group
                card_layout: normal
                grid_options:
                  columns: 12
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_cuisine
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: Cuisine
                styles: >-
                  .bubble-sub-button-1 {
                    display: ${hass.states['light.hue_cuisine'].state === 'on' ? '' : 'none'} !important;
                  }

                  .bubble-sub-button-2 {
                    display: ${hass.states['light.hue_cuisine'].state === 'on' ? '' : 'none'} !important;
                  }



                  ${icon.setAttribute("icon",
                  hass.states['light.hue_cuisine'].state === 'on' ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                sub_button:
                  - entity: light.hue_cuisine
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                  - entity: light.hue_cuisine
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                tap_action:
                  action: navigate
                  navigation_path: '#scene-cuisine'
              - type: custom:bubble-card
                card_type: button
                entity: light.ledplancui_cct
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: Plan de travail
                styles: |+
                  .bubble-sub-button-1 {
                    display: ${hass.states['light.ledplancui_cct'].state === 'on' ? '' : 'none'} !important;
                  }
                  .bubble-sub-button-2 {
                    display: ${hass.states['light.ledplancui_cct'].state === 'on' ? '' : 'none'} !important;
                  }


                sub_button:
                  - entity: light.ledplancui_cct
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                  - entity: light.ledplancui_cct
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                icon: mdi:led-strip-variant
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Volets
                icon: mdi:window-shutter-open
                card_layout: normal
                grid_options:
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volcui
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volcui
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: normal
                force_icon: false
                name: Cuisine
                icon_open: mdi:window-shutter
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volcui'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volcui'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.awtrix_ulanzi_matrix
                name: Horloge
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: sensor.awtrix_ulanzi_current_app
                    show_name: false
                    show_state: true
                    show_background: false
                    show_attribute: false
                  - show_attribute: true
                    attribute: brightness
                    show_background: false
                    light_background: false
                    icon: mdi:brightness-percent
                force_icon: false
                attribute: brightness
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
              - type: custom:bubble-card
                card_type: button
                entity: switch.priscafe
                name: Café
                icon: m3rf:coffee
                sub_button: []
                styles: |-
                  .bubble-icon {
                      color: ${hass.states['switch.priscafe'].state == 'on' ? 'seagreen' : ''
                      } !important;
                    }
                    .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }

                  .bubble-icon-container {
                      position: relative;
                      overflow: visible;
                    }

                      /* Bordure animée autour de l'icône */
                   .bubble-icon::after {
                      content: "";
                      position: absolute;
                      top: 50%;
                      left: 50%;
                      transform: translate(-50%, -50%);
                      width: calc(115% + 4px);
                      height: calc(115% + 4px);
                      border: 4px solid transparent;
                      border-radius: 50%;
                      animation: fade 2s linear infinite;
                      visibility: ${hass.states['switch.priscafe'].state == 'on' ? 'visible' : 'hidden'};
                    }

                    @keyframes fade {
                      0% { border-color: red; } /* Rouge vif */
                    20% { border-color: darkred; } /* Rouge foncé */
                    40% { border-color: crimson; } /* Rouge écarlate */
                    60% { border-color: firebrick; } /* Rouge brique */
                    80% { border-color: maroon; } /* Rouge bordeaux */
                    100% { border-color: red; } /* Retour Rouge vif */
                    }

                   .bubble-button-card-container {
                      box-shadow: none;
                    }
              - type: custom:bubble-card
                card_type: button
                entity: light.esp_va_cuisine_esp_va_cuisine
                name: va cuisine
                scrolling_effect: false
                show_state: false
                show_attribute: false
                card_layout: large
                sub_button:
                  - entity: assist_satellite.esp_va_cuisine_satellite_assist
                    show_background: false
                    icon: mdi:account-voice
                    show_state: true
                icon: mdi:led-off
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: vacuum.rockrobock
                name: Suckbot
                scrolling_effect: false
                show_attribute: false
                show_state: true
                show_name: true
                styles: |-
                  .bubble-icon-container::before {
                    content: "";
                    position: absolute;
                    top: -3%;  /* Décalage vers le bas */
                    left: -5%;  /* Décalage vers la gauche */
                    width: 110%;  /* Réduction du rayon */
                    height: 105%;  /* Réduction du rayon */
                    border-radius: 50%;
                    border: 4px solid transparent;
                    box-sizing: border-box;
                    animation: ${hass.states['vacuum.rockrobock'].state === 'cleaning' ? 'comet 4s linear infinite, rotate 1s linear infinite' : ''}; /* Ajout de la rotation */
                  }

                  @keyframes comet {
                    0% { border-top-color: rgb(255, 0, 0); }
                    6.25% { border-top-color: rgb(255, 87, 34); }
                    12.5% { border-top-color: rgb(255, 152, 0); }
                    18.75% { border-top-color: rgb(255, 193, 7); }
                    25% { border-top-color: rgb(255, 235, 59); }
                    31.25% { border-top-color: rgb(205, 220, 57); }
                    37.5% { border-top-color: rgb(139, 195, 74); }
                    43.75% { border-top-color: rgb(76, 175, 80); }
                    50% { border-top-color: rgb(0, 150, 136); }
                    56.25% { border-top-color: rgb(0, 188, 212); }
                    62.5% { border-top-color: rgb(3, 169, 244); }
                    68.75% { border-top-color: rgb(33, 150, 243); }
                    75% { border-top-color: rgb(63, 81, 181); }
                    81.25% { border-top-color: rgb(156, 39, 176); }
                    87.5% { border-top-color: rgb(103, 58, 183); }
                    93.75% { border-top-color: rgb(233, 30, 99); }
                    100% { border-top-color: rgb(255, 0, 0); }
                  }

                  @keyframes rotate {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                  }

                  .bubble-icon {
                      color: ${hass.states['vacuum.rockrobock'].state == 'cleaning' ? 'seagreen' : ''
                      } !important;
                    }

                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'cleaning' ? 'seagreen' : ''} !important;
                    }
            columns: 2
            grid_options:
              columns: 12
              rows: 3
        column_span: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Princesse
                icon: mdi:cat
                sub_button:
                  - entity: sensor.princesse_derniere_mesure_de_poids
                    show_background: false
                    show_state: true
                    icon: fas:weight-scale
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                entity: sensor.esp_pet_scales_eau
                name: eau
                scrolling_effect: false
                show_last_changed: false
                show_state: true
                card_layout: normal
                sub_button:
                  - entity: sensor.esp_pet_scales_eau_poids_gamelle
                    show_background: false
                    show_icon: true
                    show_state: true
                    icon: fas:arrow-up-from-water-pump
                icon: mdi:fountain
                styles: ".bubble-icon {\n    color: ${hass.states['sensor.esp_pet_scales_eau'].state > 30 ? 'mediumslateblue'\n    : hass.states['sensor.esp_pet_scales_eau'].state > 15 ? 'goldenrod' : 'red'} !important;\n  }\n\n:host{\n  --color-ok: slateblue ;\n  --color-warning: goldenrod\t ;\n  --color-alert: sienna ;\n  --color-bar: ${hass.states['sensor.esp_pet_scales_eau'].state >= '100' ? 'var(--color-ok)'\n                : hass.states['sensor.esp_pet_scales_eau'].state >= '30' ? 'var(--color-ok)'\n                : hass.states['sensor.esp_pet_scales_eau'].state >= '15' ? 'var(--color-warning)'\n                : 'var(--color-alert)'} ;\n  --color-background: var(--bubble-button-main-background-color, var(--bubble-main-background-color, var(--background-color-2, var(--secondary-background-color))));\n}\n\n.bubble-button-card-container {\n  background: linear-gradient(\nto right, \nvar(--color-bar) 0%, \nvar(--color-bar) ${Math.round(hass.states['sensor.esp_pet_scales_eau'].state)}%,\nvar(--color-background) ${Math.round(hass.states['sensor.esp_pet_scales_eau'].state)}%,\nvar(--color-background) 100%\n) !important;\n}\n"
                slider_live_update: true
              - type: custom:bubble-card
                card_type: button
                button_type: slider
                name: croquettes
                scrolling_effect: false
                show_last_changed: false
                show_state: true
                card_layout: large-2-rows
                sub_button:
                  - show_background: false
                    show_icon: true
                    show_state: true
                    entity: number.pet_feeder_portion_weight
                    name: portion
                    show_name: false
                    icon: mdi:weight-gram
                  - show_background: false
                    show_state: true
                    icon: m3rf:equal
                    name: portion/jour
                    entity: sensor.pet_feeder_weight_per_day
                  - entity: sensor.poids_total_distribue
                    show_background: false
                    show_state: true
                    show_icon: true
                    name: Total
                  - name: Poid restant
                    show_background: false
                    show_state: true
                    icon: mdi:scale-unbalanced
                    entity: input_number.pet_feeder_stock_estime
                  - entity: sensor.esp_pet_scales_croquettes_poids
                    show_background: false
                    show_state: true
                    name: Poids
                  - entity: sensor.jours_restants_nourriture
                    show_background: false
                    show_state: true
                    name: jours restants
                icon: mdi:food-drumstick
                tap_action:
                  action: perform-action
                  perform_action: select.select_option
                  target:
                    entity_id: select.pet_feeder_feed
                  data:
                    option: START
                styles: ".bubble-icon {\n  color: ${hass.states['sensor.esp_pet_scales_croquettes'].state > 30 ? 'maroon'\n  : hass.states['sensor.esp_pet_scales_croquettes'].state > 15 ? 'goldenrod' : 'red'} !important;\n}\n\n:host{\n--color-ok: maroon ;\n--color-warning: goldenrod\t ;\n--color-alert: sienna ;\n--color-bar: ${hass.states['sensor.esp_pet_scales_croquettes'].state >= '100' ? 'var(--color-ok)'\n              : hass.states['sensor.esp_pet_scales_croquettes'].state >= '30' ? 'var(--color-ok)'\n              : hass.states['sensor.esp_pet_scales_croquettes'].state >= '15' ? 'var(--color-warning)'\n              : 'var(--color-alert)'} ;\n--color-background: var(--bubble-button-main-background-color, var(--bubble-main-background-color, var(--background-color-2, var(--secondary-background-color))));\n}\n\n.bubble-button-card-container {\nbackground: linear-gradient(\nto right, \nvar(--color-bar) 0%, \nvar(--color-bar) ${Math.round(hass.states['sensor.esp_pet_scales_croquettes'].state)}%,\nvar(--color-background) ${Math.round(hass.states['sensor.esp_pet_scales_croquettes'].state)}%,\nvar(--color-background) 100%\n) !important;\n}\n"
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: >-
                      http://192.168.1.184:8123/config/devices/device/6bdf2f1762614bd958ca8352aba6b3b4
                slider_live_update: true
                entity: sensor.esp_pet_scales_croquettes
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.litiere_niveau_litiere
                show_icon: true
                icon: phu:litter-robot
                show_state: true
                name: Litière
                card_layout: large-2-rows
                sub_button:
                  - entity: binary_sensor.litiere_bac_a_dechets_plein
                    state_background: false
                    show_background: false
                    show_icon: true
                    show_state: true
                    icon: phu:litterbox
                    name: Poubelle
                  - icon: phu:litterbox
                    show_background: false
                    show_state: true
                    entity: sensor.litiere_poids_litiere
                    name: Poids restant
                  - entity: sensor.princesse_duree_derniere_utilisation
                    show_background: false
                    icon: mdi:timer
                    show_state: true
                tap_action:
                  action: navigate
                  navigation_path: >-
                    http://192.168.1.184:8123/config/devices/device/1f094f2e16ed9ff2baf7b11b56127144
                styles: ".bubble-icon {\n  color: ${hass.states['sensor.litiere_niveau_litiere'].state > 30 ? 'brown'\n  : hass.states['sensor.litiere_niveau_litiere'].state > 15 ? 'goldenrod' : 'red'} !important;\n}\n\n:host{\n--color-ok: brown ;\n--color-warning: goldenrod\t ;\n--color-alert: sienna ;\n--color-bar: ${hass.states['sensor.litiere_niveau_litiere'].state >= '100' ? 'var(--color-ok)'\n              : hass.states['sensor.litiere_niveau_litiere'].state >= '30' ? 'var(--color-ok)'\n              : hass.states['sensor.litiere_niveau_litiere'].state >= '15' ? 'var(--color-warning)'\n              : 'var(--color-alert)'} ;\n--color-background: var(--bubble-button-main-background-color, var(--bubble-main-background-color, var(--background-color-2, var(--secondary-background-color))));\n}\n\n.bubble-button-card-container {\nbackground: linear-gradient(\nto right, \nvar(--color-bar) 0%, \nvar(--color-bar) ${Math.round(hass.states['sensor.litiere_niveau_litiere'].state)}%,\nvar(--color-background) ${Math.round(hass.states['sensor.litiere_niveau_litiere'].state)}%,\nvar(--color-background) 100%\n) !important;\n}\n"
            columns: 1
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-cuisine'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_cuisine_1_veilleuse
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_cuisine_2_stimulation
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_cuisine_3_attenue
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_cuisine_4_lumineux
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
    background:
      image: /api/image/serve/edb06720963981d9753feb01e18b7692/original
    cards: []
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_cuisine_presence
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_cuisine_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_cuisine'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_cuisine') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_cuisine
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.esp_cuisine_lux
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    subview: true
  - type: sections
    max_columns: 2
    title: Chambre
    path: chambre
    icon: ''
    sections:
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: empty-column
            card_layout: large
            grid_options:
              columns: 6
              rows: 1
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: button
                entity: input_datetime.heure_reveil
                name: Réveil
                scrolling_effect: false
                show_state: false
                card_layout: normal
                sub_button:
                  - entity: input_datetime.heure_reveil
                    show_icon: false
                    state_background: false
                    show_background: false
                    show_state: true
                    name: ''
                    show_name: false
                grid_options:
                  columns: 6
                  rows: 1
              - type: custom:bubble-card
                card_type: button
                entity: input_datetime.heure_reveil_30mn_avant
                name: '-30mn'
                scrolling_effect: false
                show_state: false
                card_layout: normal
                sub_button:
                  - entity: input_datetime.heure_reveil_30mn_avant
                    show_icon: false
                    state_background: false
                    show_background: false
                    show_state: true
                    name: ''
                    show_name: false
                grid_options:
                  columns: 6
                  rows: 1
              - type: custom:bubble-card
                card_type: button
                entity: input_datetime.heure_reveil_03mn_avant
                name: '-03mn'
                scrolling_effect: false
                show_state: false
                card_layout: normal
                sub_button:
                  - entity: input_datetime.heure_reveil_03mn_avant
                    show_icon: false
                    state_background: false
                    show_background: false
                    show_state: true
                    name: ''
                    show_name: false
                grid_options:
                  columns: 6
                  rows: 1
              - type: custom:bubble-card
                card_type: button
                entity: input_datetime.heure_reveil_15mn_apres
                name: +15mn
                scrolling_effect: false
                show_state: false
                card_layout: normal
                sub_button:
                  - entity: input_datetime.heure_reveil_15mn_apres
                    show_icon: false
                    state_background: false
                    show_background: false
                    show_state: true
                    name: ''
                    show_name: false
                grid_options:
                  columns: 6
                  rows: 1
            grid_options:
              columns: 6
              rows: auto
            visibility:
              - condition: state
                entity: input_datetime.heure_reveil
                state_not: '00:00:00'
        column_span: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Lumières
                icon: hue:bulb-group
                card_layout: normal
                grid_options:
                  columns: 12
                  rows: 1
                styles: ''
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_chambre
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: Chambre
                styles: >-
                  .bubble-sub-button-1 {
                    display: ${hass.states['light.hue_chambre'].state === 'on' ? '' : 'none'} !important;
                  }

                  .bubble-sub-button-2 {
                    display: ${hass.states['light.hue_chambre'].state === 'on' ? '' : 'none'} !important;
                  }



                  ${icon.setAttribute("icon",
                  hass.states['light.hue_chambre'].state === 'on' ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                sub_button:
                  - entity: light.hue_chambre
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                  - entity: light.hue_chambre
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                tap_action:
                  action: navigate
                  navigation_path: '#scene-chambre'
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: switch.pristvchamb
                name: Tv
                icon: m3o:tv-gen
                sub_button: []
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                            color: ${hass.states['switch.pristvchamb'].state === 'on' ? 'seagreen' : ''} !important;
                          }
              - type: custom:bubble-card
                card_type: button
                entity: switch.pristelchamb
                icon: mdi:power-socket-fr
                name: Telephone
                scrolling_effect: false
                show_state: false
                card_layout: large-2-rows
                sub_button:
                  - entity: sensor.redmi_note_8_pro_battery_level
                    show_state: true
                    state_background: false
                    show_background: false
                    show_icon: true
                  - entity: sensor.pristelchamb_power
                    state_background: false
                    show_background: false
                    show_icon: true
                    show_state: true
                    visibility:
                      - condition: state
                        entity: binary_sensor.redmi_note_8_pro_is_charging
                        state: 'on'
                      - condition: state
                        entity: switch.pris_telchamb
                        state: 'on'
                force_icon: true
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                            color: ${hass.states['switch.pristelchamb'].state === 'on' ? 'seagreen' : ''} !important;
                          }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.redmi_note_8_pro_battery_level'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }
              - type: custom:bubble-card
                card_type: button
                entity: light.esp_va_chambre_esp_va_chambre
                name: va chambre
                scrolling_effect: false
                show_state: false
                show_attribute: false
                card_layout: large
                sub_button:
                  - entity: assist_satellite.esp_va_chambre_satellite_assist
                    show_background: false
                    icon: mdi:account-voice
                    show_state: true
                icon: mdi:led-off
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
              - type: custom:bubble-card
                card_type: button
                button_type: state
                scrolling_effect: false
                show_name: true
                sub_button: []
                card_layout: large-2-rows
                show_icon: true
                styles: |-
                  .bubble-icon {
                      color: ${hass.states['binary_sensor.esp_bed_occupation_master_bed_occupied'].state === 'on' ? 'seagreen' : ''} !important;
                    }
                entity: binary_sensor.esp_bed_occupation_master_bed_occupied
                show_state: false
                name: Bed occupation
                icon: mdi:bed-empty
            columns: 2
            grid_options:
              columns: 12
              rows: 4
        column_span: 1
      - type: grid
        cards:
          - type: media-control
            visibility:
              - condition: state
                entity: media_player.echo_show_chambre
                state: playing
            grid_options:
              columns: 12
              rows: auto
            entity: media_player.echo_show_chambre
          - type: media-control
            entity: media_player.plex_plex_for_android_tv_chambre
            name: Plex chambre
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_chambre
                state: playing
          - type: media-control
            entity: media_player.kodi_chambre
            visibility:
              - condition: state
                entity: media_player.kodi_chambre
                state: playing
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temp'
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.temperature_chambre
                    name: Chambre (all)
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.temperature_chambre'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.temperature_chambre'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    sub_button: []
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    name: Chambre
                    scrolling_effect: false
                    show_state: true
                    entity: sensor.capcham_temperature
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capcham_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.capcham_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }

                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.capcham_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.capcham_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.capcham_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    sub_button:
                      - entity: sensor.capcham_battery
                        show_background: false
                        show_name: false
                        show_state: true
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_chambre_temperature
                    name: Fenetre salon
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.esp_chambre_temperature'].state >= '23' ? 'red' : '',
                                  hass.states['sensor.esp_chambre_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    card_layout: large
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-chambre'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_chambre_1_veilleuse
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_chambre_2_stimulation
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_chambre_3_attenue
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_chambre_4_lumineux
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
    background:
      image: /api/image/serve/53560c365e77b9b53e5230d473351b1f/original
    cards: []
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_chambre_presence
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_chambre_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_chambre'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_chambre') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_chambre
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.esp_chambre_lux
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    subview: true
  - type: sections
    max_columns: 2
    title: sdb
    path: sdb
    background:
      image: /api/image/serve/937d57973022578603eb046c5fa022db/original
    sections:
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: empty-column
            card_layout: large
            grid_options:
              columns: 6
              rows: 1
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
        column_span: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Fenêtres
                icon: mdi:window-closed-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.ouvfenetsdb_contact
                scrolling_effect: false
                show_state: true
                name: SdB
                card_layout: large
                sub_button:
                  - entity: sensor.ouvfenetsdb_battery
                    show_background: false
                    show_state: true
                show_attribute: false
                icon: mdi:window-closed-variant
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvfenetsdb_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-sub-button-1 > ha-icon {
                      color: ${hass.states['sensor.ouvfenetsdb_battery'].state >= '100' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsdb_battery'].state >= '30' ? 'seagreen'
                            : hass.states['sensor.ouvfenetsdb_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                    }

                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvfenetsdb_contact'].state ===
                  'on' ? 'mdi:window-open-variant' :
                  'mdi:window-closed-variant')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Portes
                icon: phu:panel-door-close
                card_layout: normal
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
              - type: custom:bubble-card
                card_type: button
                entity: binary_sensor.ouvportsdb_contact
                name: Sdb
                icon: ''
                show_state: true
                show_attribute: false
                attribute: battery
                card_layout: large
                sub_button:
                  - entity: sensor.ouvportsdb_battery
                    show_background: false
                    show_icon: true
                    show_state: true
                styles: >-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40,40,40)' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['binary_sensor.ouvportsdb_contact'].state === 'on' ? 'seagreen' : ''} !important;
                    }
                    
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.ouvportsdb_battery'].state >= '100' ? 'seagreen'
                          : hass.states['sensor.ouvportsdb_battery'].state >= '30' ? 'seagreen'
                          : hass.states['sensor.ouvportsdb_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                  }


                  ${icon.setAttribute("icon",
                  hass.states['binary_sensor.ouvportsdb_contact'].state === 'on'
                  ? 'phu:panel-door-open' : 'phu:panel-door-close')}
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: sensor.humiditee_sdb
                name: ''
                scrolling_effect: false
                show_name: false
                show_state: true
                card_layout: large-2-rows
                sub_button: []
                button_action:
                  tap_action:
                    action: navigate
                    navigation_path: '#temperature'
                styles: |-
                  .bubble-icon {
                      color: ${hass.states['sensor.sejour'].state >= '70' ? 'red' : 'blue' } !important;
                    }
                icon: m3o:humidity-percentage
            columns: 2
      - type: grid
        cards:
          - type: media-control
            entity: media_player.echo_sdb
            visibility:
              - condition: state
                entity: media_player.echo_sdb
                state: playing
            grid_options:
              columns: 12
              rows: auto
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Lumières
                icon: hue:bulb-group
                card_layout: normal
                grid_options:
                  columns: 12
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sdb
                scrolling_effect: false
                show_name: true
                show_state: false
                show_attribute: false
                name: SdB
                styles: >-
                  .bubble-sub-button-1 {
                    display: ${hass.states['light.hue_sdb'].state === 'on' ? '' : 'none'} !important;
                  }

                  .bubble-sub-button-2 {
                    display: ${hass.states['light.hue_sdb'].state === 'on' ? '' : 'none'} !important;
                  }


                  ${icon.setAttribute("icon", hass.states['light.hue_sdb'].state
                  === 'on' ? 'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                sub_button:
                  - entity: light.hue_sdb
                    show_attribute: true
                    attribute: brightness
                    show_background: false
                    show_icon: false
                    name: lumi
                    show_name: true
                  - entity: light.hue_sdb
                    show_background: false
                    show_icon: false
                    show_attribute: true
                    attribute: color_temp_kelvin
                    name: Temp
                    show_name: true
                show_last_changed: false
                grid_options:
                  columns: 7
                  rows: 1
                card_layout: large-2-rows
                tap_action:
                  action: navigate
                  navigation_path: '#scene-sdb'
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Volets
                icon: mdi:window-shutter-open
                card_layout: normal
                grid_options:
                  rows: 1
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsdb
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsdb
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: normal
                force_icon: false
                name: SdB
                icon_open: mdi:window-shutter-open
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsdb'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsdb'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Autres
                icon: mdi:shuffle-variant
                card_layout: normal
              - type: custom:bubble-card
                card_type: empty-column
              - type: custom:bubble-card
                card_type: button
                entity: switch.prismal
                icon: mdi:washing-machine
                name: MaL
                scrolling_effect: false
                show_state: false
                card_layout: large-2-rows
                sub_button:
                  - show_state: true
                    state_background: false
                    show_background: false
                    show_icon: true
                    entity: sensor.prismal_energy
                  - entity: sensor.prismal_power
                    state_background: false
                    show_background: false
                    show_icon: true
                    show_state: true
                    visibility:
                      - condition: state
                        entity: switch.prismal
                        state: 'on'
                force_icon: true
                styles: |-
                  .bubble-icon-container::before {
                    content: "";
                    position: absolute;
                    top: -3%;  /* Décalage vers le bas */
                    left: -5%;  /* Décalage vers la gauche */
                    width: 110%;  /* Réduction du rayon */
                    height: 105%;  /* Réduction du rayon */
                    border-radius: 50%;
                    border: 4px solid transparent;
                    box-sizing: border-box;
                    animation: ${hass.states['sensor.prismal_power'].state > 0 ? 'comet 4s linear infinite, rotate 1s linear infinite' : ''}; /* Ajout de la rotation */
                  }

                  @keyframes comet {
                    0% { border-top-color: rgb(255, 0, 0); }
                    6.25% { border-top-color: rgb(255, 87, 34); }
                    12.5% { border-top-color: rgb(255, 152, 0); }
                    18.75% { border-top-color: rgb(255, 193, 7); }
                    25% { border-top-color: rgb(255, 235, 59); }
                    31.25% { border-top-color: rgb(205, 220, 57); }
                    37.5% { border-top-color: rgb(139, 195, 74); }
                    43.75% { border-top-color: rgb(76, 175, 80); }
                    50% { border-top-color: rgb(0, 150, 136); }
                    56.25% { border-top-color: rgb(0, 188, 212); }
                    62.5% { border-top-color: rgb(3, 169, 244); }
                    68.75% { border-top-color: rgb(33, 150, 243); }
                    75% { border-top-color: rgb(63, 81, 181); }
                    81.25% { border-top-color: rgb(156, 39, 176); }
                    87.5% { border-top-color: rgb(103, 58, 183); }
                    93.75% { border-top-color: rgb(233, 30, 99); }
                    100% { border-top-color: rgb(255, 0, 0); }
                  }

                  @keyframes rotate {
                    0% { transform: rotate(0deg); }
                    100% { transform: rotate(360deg); }
                  }

                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'seagreen' : ''} !important;
                    }

                  .bubble-icon {
                      color: ${hass.states['switch.prismal'].state === 'on' ? 'seagreen' : ''} !important;
                    }
              - type: custom:bubble-card
                card_type: button
                button_type: switch
                entity: light.esp_va_sdb_esp_va_sdb
                name: va sdb
                icon: mdi:led-off
                scrolling_effect: false
                show_attribute: false
                attribute: supported_features
                grid_options:
                  columns: 6
                  rows: 1
                button_action:
                  tap_action:
                    action: assist
                use_accent_color: false
                show_state: false
                card_layout: large
                sub_button:
                  - entity: assist_satellite.esp_va_sdb_satellite_assist
                    show_icon: true
                    state_background: false
                    show_background: false
                    icon: mdi:account-voice
                    show_state: true
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
            columns: 2
            grid_options:
              columns: 12
              rows: 3
        column_span: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Thermostat
                icon: phu:thermostat-v2
                grid_options:
                  columns: 12
                  rows: 1
              - type: custom:bubble-card
                card_type: climate
                entity: climate.therm_sdb
                sub_button:
                  - name: HVAC modes menu
                    select_attribute: hvac_modes
                    state_background: false
                    show_arrow: false
                    show_icon: true
                    show_background: false
                    show_attribute: false
                    show_last_changed: false
                    show_state: false
                show_icon: true
                scrolling_effect: false
                force_icon: false
                show_name: false
                show_state: false
                show_attribute: true
                attribute: preset_mode
                state_color: false
                grid_options:
                  columns: 12
                  rows: 1
                card_layout: large
                styles: |-
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'off' ? 'rgb(40, 40, 40)' : 'sienna'} !important;
                    }
                  .bubble-icon {
                      color: ${hass.states['climate.therm_sdb'].attributes.hvac_action === 'heating' ? 'sienna' : 'grey'} !important;
                    }
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: switch.radsdb_l1
                    icon: mdi:radiator
                    name: SdB
                    show_state: false
                    card_layout: large
                    force_icon: false
                    scrolling_effect: false
                    show_attribute: true
                    styles: >
                      .bubble-button-background {
                          opacity: 1 !important;
                          background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : 'sienna'} !important;
                        }
                      .bubble-icon {
                          color: ${hass.states['switch.radsdb_l1'].state === 'on' ? 'grey' : 'sienna'} !important;
                        }
                      ${icon.setAttribute("icon",
                      hass.states['switch.radsdb_l1'].state === 'off' ?
                      'mdi:radiator' : 'mdi:radiator-off')}
                columns: 2
            columns: 1
            grid_options:
              columns: 12
              rows: 3
        visibility:
          - condition: state
            entity: climate.therm_sdb
            state: heat
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature'
                margin_top_mobile: calc(100vh - 400px)
                margin_top_desktop: calc(100vh - 400px
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.temperature_sdb
                    name: SdB
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.temperature_sdb'].state >= '23' ? 'red' :
                                  hass.states['sensor.temperature_sdb'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    sub_button: []
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    name: Fenetre
                    scrolling_effect: false
                    show_state: true
                    entity: sensor.capfensdb_temperature
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capfensdb_temperature'].state >= '23' ? 'red' :
                                  hass.states['sensor.capfensdb_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }

                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.ouvfenetsdb_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.ouvfenetsdb_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.ouvfenetsdb_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    sub_button:
                      - entity: sensor.capfensdb_battery
                        show_background: false
                        show_name: false
                        show_state: true
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.capsdb_temperature
                    name: Porte
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.capsdb_temperature'].state >= '23' ? 'red' :
                                  hass.states['sensor.capsdb_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }

                      .bubble-sub-button-1 > ha-icon {
                          color: ${hass.states['sensor.ouvfenetsdb_battery'].state >= '100' ? 'seagreen'
                                : hass.states['sensor.ouvfenetsdb_battery'].state >= '30' ? 'seagreen'
                                : hass.states['sensor.ouvfenetsdb_battery'].state >= '20' ? 'darkorange' : 'sienna' } !important;
                        }
                    sub_button:
                      - entity: sensor.capfensal_battery
                        show_background: false
                        show_state: true
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.esp_sdb_temperature
                    name: Esp
                    scrolling_effect: false
                    show_state: true
                    styles: |-
                      .bubble-icon {
                          color: ${hass.states['sensor.esp_sdb_temperature'].state >= '23' ? 'red' :
                                  hass.states['sensor.esp_sdb_temperature'].state >= '19' ? 'seagreen' : 'blue'
                          } !important;
                        }
                    card_layout: large
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-sdb'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sdb_1_veilleuse
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sdb_2_stimulation
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sdb_3_attenue
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
              - type: custom:bubble-card
                card_type: button
                entity: scene.hue_sdb_4_lumineux
                scrolling_effect: false
                show_name: true
                show_state: false
                button_action:
                  tap_action:
                    action: call-service
                    target:
                      entity_id: entity
                    service: scene.turn_on
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_sdb_presence
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_sdb_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_sdb'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_sdb') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_sdb
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lux_sdb
        color: ''
        icon: mdi:brightness-7
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    cards: []
    subview: true
    header:
      layout: center
      badges_position: top
      badges_wrap: wrap
  - type: sections
    max_columns: 3
    title: baie info
    path: baie-info
    sections:
      - type: grid
        cards:
          - type: custom:bubble-card
            card_type: button
            button_type: state
            name: Esp
            icon: mdi:chip
            show_icon: true
            tap_action:
              action: navigate
              navigation_path: /Appart/esp
            button_action:
              tap_action:
                action: navigate
                navigation_path: '#esp'
            entity: sensor.esp_connectes
            scrolling_effect: false
            show_attribute: true
            attribute: total_esp
            grid_options:
              columns: 6
              rows: 1
            card_layout: large
            sub_button: []
          - type: custom:bubble-card
            card_type: button
            button_type: state
            entity: sensor.system_monitor_dernier_demarrage
            name: HA
            icon: phu:ha-blue
            scrolling_effect: false
            show_attribute: false
            sub_button:
              - entity: sensor.system_monitor_utilisation_du_disque
                show_background: false
                show_state: true
                icon: m3o:hard-disk
              - entity: sensor.system_monitor_utilisation_de_la_memoire
                icon: phu:ram-memory
                show_background: false
                show_state: true
              - entity: sensor.system_monitor_utilisation_du_processeur
                icon: mdi:cpu-64-bit
                show_background: false
                show_state: true
              - entity: sensor.system_monitor_temperature_du_processeur
                icon: mdi:thermometer
                show_background: false
                show_state: true
            card_layout: large-2-rows
            grid_options:
              columns: 9
              rows: 1
          - type: custom:bubble-card
            card_type: button
            button_type: state
            entity: sensor.omv_system_uptime
            name: OMV
            icon: phu:nas-v2
            scrolling_effect: false
            card_layout: large-2-rows
            grid_options:
              columns: 12
              rows: 1
            sub_button:
              - entity: sensor.omv_system_memory
                show_background: false
                show_state: true
                icon: phu:ram-memory
          - type: custom:bubble-card
            card_type: button
            button_type: state
            entity: sensor.pc_debian_cpu_usage
            card_layout: large-2-rows
            sub_button:
              - entity: sensor.pc_debian_memory_usage
                show_background: false
                show_state: true
            tap_action:
              action: navigate
              navigation_path: '#pc'
        column_span: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Samba backup
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Status
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Local
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                    show_state: false
                    show_attribute: true
                    attribute: backups_local
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Failed
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                    show_state: false
                    show_attribute: true
                    attribute: total_backups_failed
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Remote
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                    show_state: false
                    show_attribute: true
                    attribute: backups_remote
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Succeeded
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                    show_state: false
                    show_attribute: true
                    attribute: total_backups_succeeded
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.samba_backup
                    name: Last
                    scrolling_effect: false
                    icon: ''
                    columns: 1
                    show_state: false
                    show_attribute: true
                    attribute: last_backup
                  - type: custom:bubble-card
                    card_type: button
                    button_type: name
                    name: Run backup
                    scrolling_effect: false
                    button_action:
                      tap_action:
                        action: call-service
                        service: hassio.addon_stdin
                        service_data:
                          addon: 15d21743_samba_backup
                          input: trigger
                        target: {}
                    icon: mdi:database
                    tap_action:
                      action: call-service
                      target: {}
                      service: hassio.addon_stdin
                      service_data:
                        addon: 15d21743_samba_backup
                        input: trigger
                  - type: custom:bubble-card
                    card_type: button
                    button_type: name
                    name: Reset
                    scrolling_effect: false
                    button_action:
                      tap_action:
                        action: call-service
                        target: {}
                        service: hassio.addon_stdin
                        service_data:
                          addon: 15d21743_samba_backup
                          input: reset-counter
                    icon: mdi:database
                    sub_button: []
                columns: 2
            columns: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Multimedia management
                icon: m3of:stock-media
                styles: |-
                  styles: |
                    .bubble-line {
                      background: var(--primary-text-color);
                      opacity: 100; !important
                    }
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.sonarr_queue
                    name: Sonarr
                    icon: phu:sonarr
                    show_icon: true
                    scrolling_effect: false
                    sub_button:
                      - entity: sensor.sonarr_upcoming
                        show_background: false
                        show_state: true
                        show_attribute: true
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.radarr_file_d_attente
                    name: Radarr
                    icon: phu:radarr
                    show_icon: true
                    scrolling_effect: false
                    sub_button:
                      - entity: calendar.radarr
                        show_background: false
                        show_state: true
                        show_attribute: false
                        attribute: message
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.transmission_statut_2
                    name: Transmission
                    icon: phu:transmission-bt
                    show_icon: true
                    scrolling_effect: false
                    sub_button:
                      - entity: sensor.transmission_torrents_demarres_2
                        show_background: false
                        show_state: true
                        show_attribute: false
                        attribute: message
                        icon: mdi:download-box
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.canaplex_2
                    name: Plex
                    icon: phu:plexamp
                    show_icon: true
                    scrolling_effect: false
                    sub_button: []
                    card_layout: large
                    show_attribute: false
                    show_state: true
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.tautulli_en_train_de_regarder
                    name: Tautulli
                    icon: mdi:play
                    show_icon: true
                    scrolling_effect: false
                    sub_button: []
                    card_layout: large
                  - type: custom:bubble-card
                    card_type: button
                    button_type: state
                    entity: sensor.canaplex_library_series_tv_2
                    scrolling_effect: false
                    name: Series
                    show_last_changed: false
                    show_state: false
                    show_attribute: true
                    attribute: last_added_item
                    show_icon: true
                columns: 2
            columns: 1
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - square: false
                type: grid
                cards:
                  - square: false
                    type: grid
                    cards:
                      - type: custom:bubble-card
                        card_type: separator
                        name: Dockarr
                        icon: mdi:docker
                        sub_button:
                          - icon: m3of:drive-shortcut
                            show_background: false
                            tap_action:
                              action: url
                              url_path: >-
                                https://192.168.1.234:9443/#!/2/docker/containers
                      - type: custom:bubble-card
                        card_type: empty-column
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.linuxserver_bazarr_container_status
                        name: Bazarr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.linuxserver_bazarr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.linuxserver_bazarr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.linuxserver_bazarr_container_status'].state === 'running' ? 'seagreen' : 'sienna'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.amir20_dozzle_container_status
                        name: Dozzle
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.amir20_dozzle_update
                            show_background: false
                            show_state: false
                            tap_action:
                              action: url
                              url_path: >-
                                https://192.168.1.234:9443/#!/2/docker/containers
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.amir20_dozzle_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.amir20_dozzle_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.alexfozor_flaresolverr_container_status
                        name: Flaresolverr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.alexfozor_flaresolverr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.alexfozor_flaresolverr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.alexfozor_flaresolverr_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.micrib_mqdockerup_container_status
                        name: Mqdockerup
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.micrib_mqdockerup_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.micrib_mqdockerup_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.micrib_mqdockerup_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.golift_notifiarr_container_status
                        name: Notifiarr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.golift_notifiarr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.golift_notifiarr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.golift_notifiarr_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.linuxserver_prowlarr_container_status
                        name: Prowlarr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.linuxserver_prowlarr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.linuxserver_prowlarr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.linuxserver_prowlarr_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.linuxserver_radarr_container_status
                        name: Radarr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.linuxserver_radarr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.linuxserver_radarr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.linuxserver_radarr_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                      - type: custom:bubble-card
                        card_type: button
                        button_type: state
                        entity: sensor.linuxserver_sonarr_container_status
                        name: Sonarr
                        icon: mdi:docker
                        scrolling_effect: false
                        sub_button:
                          - entity: update.linuxserver_sonarr_update
                            show_background: false
                            show_state: false
                        card_layout: large
                        grid_options:
                          columns: 9
                          rows: 1
                        styles: |-
                          .bubble-sub-button-1 > ha-icon {
                              color: ${hass.states['update.linuxserver_sonarr_update'].state === 'on' ? 'red' : 'seagreen'} !important;
                            }
                          .bubble-icon {
                              color: ${hass.states['sensor.linuxserver_sonarr_container_status'].state === 'running' ? 'seagreen' : 'red'} !important;
                            }
                    columns: 2
                columns: 1
            columns: 1
            grid_options:
              columns: 12
              rows: auto
        column_span: 3
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:bubble-card
                card_type: separator
                name: Proxmox
                icon: phu:proxmox
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.node_proxmox_status
                name: Proxmox
                scrolling_effect: false
                icon: phu:proxmox
                show_state: false
                sub_button:
                  - entity: sensor.node_proxmox_cpu_used
                    show_background: false
                    show_state: true
                  - entity: sensor.node_proxmox_disk_used_percentage
                    show_background: false
                    show_state: true
                  - entity: sensor.node_proxmox_memory_used_percentage
                    show_background: false
                    show_state: true
                  - entity: sensor.node_proxmox_last_boot
                    show_background: false
                    show_state: true
                card_layout: large-2-rows
              - type: custom:bubble-card
                card_type: button
                button_type: state
                entity: binary_sensor.qemu_dockarr_108_status
                name: Dockarr
                scrolling_effect: false
                icon: phu:proxmox
                show_state: false
                sub_button:
                  - entity: sensor.qemu_dockarr_108_cpu_used
                    show_background: false
                    show_state: true
                  - entity: sensor.qemu_dockarr_108_disk_used_percentage
                    show_background: false
                    show_state: true
                  - entity: sensor.qemu_dockarr_108_memory_used_percentage
                    show_background: false
                    show_state: true
                  - entity: sensor.qemu_dockarr_108_last_boot
                    show_background: false
                    show_state: true
                card_layout: large-2-rows
                tap_action:
                  action: navigate
                  navigation_path: '#dockarr'
            columns: 1
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#esp'
                bg_opacity: 25
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-salon
                sub_button:
                  - show_state: true
                    entity: sensor.esp_salon_wifi_signal
                  - show_state: true
                    entity: sensor.esp_salon_tricordeur_rssi
                  - entity: sensor.esp_salon_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                  - entity: binary_sensor.esp_salon_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_salon_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_salon_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_salon_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_salon_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-2 > ha-icon {
                    color: ${hass.states['sensor.esp_salon_tricordeur_rssi'].state <= -86 ? 'red'
                          : hass.states['sensor.esp_salon_tricordeur_rssi'].state <= -80 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_salon_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_salon_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_salon_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_salon_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_salon_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_salon_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_salon_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-sdb
                sub_button:
                  - show_state: true
                    entity: sensor.esp_sdb_wifi_signal
                  - show_state: true
                    entity: sensor.esp_sdb_tricordeur_rssi
                  - entity: sensor.esp_sdb_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                  - entity: binary_sensor.esp_sdb_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_sdb_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_sdb_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_sdb_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_sdb_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-2 > ha-icon {
                    color: ${hass.states['sensor.esp_sdb_tricordeur_rssi'].state <= -86 ? 'red'
                          : hass.states['sensor.esp_sdb_tricordeur_rssi'].state <= -80 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_sdb_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_sdb_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_sdb_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_sdb_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_sdb_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_sdb_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_sdb_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-chambre
                sub_button:
                  - show_state: true
                    entity: sensor.esp_chambre_wifi_signal
                  - show_state: true
                    entity: sensor.esp_chambre_tricordeur_rssi
                  - entity: sensor.esp_chambre_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                  - entity: binary_sensor.esp_chambre_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_chambre_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_chambre_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_chambre_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_chambre_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-2 > ha-icon {
                    color: ${hass.states['sensor.esp_chambre_tricordeur_rssi'].state <= -86 ? 'red'
                          : hass.states['sensor.esp_chambre_tricordeur_rssi'].state <= -80 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_chambre_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_chambre_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_chambre_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_chambre_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_chambre_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_chambre_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_chambre_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-cuisine
                sub_button:
                  - show_state: true
                    entity: sensor.esp_cuisine_wifi_signal
                  - show_state: true
                    entity: sensor.esp_cuisine_tricordeur_rssi
                  - entity: sensor.esp_cuisine_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                  - entity: binary_sensor.esp_cuisine_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_cuisine_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_cuisine_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_cuisine_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_cuisine_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-2 > ha-icon {
                    color: ${hass.states['sensor.esp_cuisine_tricordeur_rssi'].state <= -86 ? 'red'
                          : hass.states['sensor.esp_cuisine_tricordeur_rssi'].state <= -80 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_cuisine_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_cuisine_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_cuisine_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_cuisine_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_cuisine_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_cuisine_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_cuisine_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-multi
                sub_button:
                  - show_state: true
                    entity: sensor.esp_multi_capteur_wifi_signal
                  - show_state: true
                    entity: sensor.esp_multi_capteur_tricordeur_rssi
                  - entity: sensor.esp_multi_capteur_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                  - entity: binary_sensor.esp_multi_capteur_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_multi_capteur_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_multi_capteur_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_multi_capteur_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_multi_capteur_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-2 > ha-icon {
                    color: ${hass.states['sensor.esp_multi_capteur_tricordeur_rssi'].state <= -86 ? 'red'
                          : hass.states['sensor.esp_multi_capteur_tricordeur_rssi'].state <= -80 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_multi_capteur_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_multi_capteur_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_multi_capteur_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_multi_capteur_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_multi_capteur_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_multi_capteur_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_multi_capteur_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: temp-frigo
                sub_button:
                  - show_state: true
                    entity: sensor.esp_temp_frigo_wifi_signal
                  - show_background: false
                    show_icon: false
                    show_name: true
                    show_state: false
                    icon: mdi:ip-network
                    name: ' '
                  - entity: sensor.esp_temp_frigo_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_temp_frigo_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_temp_frigo_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_temp_frigo_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_temp_frigo_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_temp_frigo_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_temp_frigo_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_temp_frigo_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_temp_frigo_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_temp_frigo_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_temp_frigo_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_temp_frigo_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_temp_frigo_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: bed-occupation
                sub_button:
                  - show_state: true
                    entity: sensor.esp_bed_occupation_wifi_signal
                  - show_background: false
                    show_icon: false
                    show_name: true
                    name: ' '
                  - entity: sensor.esp_bed_occupation_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_bed_occupation_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_bed_occupation_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_bed_occupation_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_bed_occupation_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_bed_occupation_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_bed_occupation_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_bed_occupation_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_bed_occupation_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_bed_occupation_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_bed_occupation_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_bed_occupation_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_bed_occupation_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: fontaine
                sub_button:
                  - show_state: true
                    entity: sensor.esp_fontaine_wifi_signal
                  - show_background: false
                    show_icon: false
                    show_name: true
                    show_state: false
                    icon: mdi:ip-network
                    name: ' '
                  - entity: sensor.esp_fontaine_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_fontaine_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_fontaine_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_fontaine_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_fontaine_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_fontaine_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_fontaine_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_fontaine_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_fontaine_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_fontaine_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_fontaine_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_fontaine_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_fontaine_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-va_cuisine
                sub_button:
                  - show_state: true
                    entity: sensor.esp_va_cuisine_wifi_signal
                  - show_background: false
                    show_icon: false
                    name: ' '
                    show_name: true
                  - entity: sensor.esp_va_cuisine_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_va_cuisine_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_va_cuisine_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_va_cuisine_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_va_cuisine_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_va_cuisine_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_va_cuisine_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_va_cuisine_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_va_cuisine_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_va_cuisine_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_va_cuisine_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_va_cuisine_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_va_cuisine_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-va_chambre
                sub_button:
                  - show_state: true
                    entity: sensor.esp_va_chambre_wifi_signal
                  - show_background: false
                    show_icon: false
                    name: ' '
                    show_name: true
                  - entity: sensor.esp_va_chambre_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_va_chambre_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_va_chambre_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_va_chambre_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_va_chambre_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_va_chambre_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_va_chambre_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_va_chambre_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_va_chambre_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_va_chambre_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_va_chambre_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_va_chambre_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_va_chambre_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-va_sdb
                sub_button:
                  - show_state: true
                    entity: sensor.esp_va_sdb_wifi_signal
                  - show_background: false
                    show_icon: false
                    name: ' '
                    show_name: true
                  - entity: sensor.esp_va_sdb_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_va_sdb_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_va_sdb_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_va_sdb_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_va_sdb_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_va_sdb_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_va_sdb_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_va_sdb_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_va_sdb_ip
              - type: custom:bubble-card
                card_type: button
                button_type: state
                card_layout: large-2-rows
                name: esp-va_salon
                sub_button:
                  - show_state: true
                    entity: sensor.esp_va_salon_wifi_signal
                    icon: mdi:wifi
                    show_background: false
                  - show_background: false
                    show_icon: false
                    name: ' '
                    show_name: true
                  - entity: sensor.esp_va_salon_uptime
                    icon: mdi:timer-outline
                    show_state: true
                    show_background: false
                    show_icon: true
                    show_name: false
                  - entity: binary_sensor.esp_va_salon_status
                    icon: mdi:check-network-outline
                    show_background: false
                    name: Status
                    state_color: true
                    show_state: true
                    show_icon: true
                    show_name: false
                    show_last_changed: false
                    show_attribute: false
                  - entity: sensor.esp_va_salon_interntemp
                    show_state: true
                    show_background: false
                  - entity: sensor.esp_va_salon_esp_free_memory
                    show_state: true
                    show_background: false
                styles: |
                  .bubble-button-card-container {
                    background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                    box-shadow: none;
                    border-radius: 50px !important;  # Ajustez la valeur ici
                  }
                  .bubble-sub-button-1 > ha-icon {
                    color: ${hass.states['sensor.esp_va_salon_wifi_signal'].state <= -70 ? 'red'
                          : hass.states['sensor.esp_va_salon_wifi_signal'].state <= -55 ? 'orange'
                          : 'seagreen'} !important;
                  }
                  .bubble-sub-button-3 > ha-icon {
                    color: ${hass.states['sensor.esp_va_salon_uptime'].state === 'on' ? ''
                          : ''} !important;
                  }
                  .bubble-sub-button-4 > ha-icon {
                    color: ${hass.states['binary_sensor.esp_va_salon_status'].state === 'on' ? 'seagreen'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-5 > ha-icon {
                    color: ${hass.states['sensor.esp_va_salon_interntemp'].state >= 65 ? 'red'
                          : hass.states['sensor.esp_va_salon_interntemp'].state >= 50 ? 'orange'
                          : 'seagreen'} !important;
                  }
                    .bubble-sub-button-6 > ha-icon {
                    color: ${hass.states['sensor.esp_va_salon_esp_free_memory'].state >= 160 ? 'seagreen'
                          : hass.states['sensor.esp_va_salon_esp_free_memory'].state >= 80 ? 'orange'
                          : 'red'} !important;
                  }
                  .bubble-sub-button-container {
                    margin-right: -16px;    
                  }  
                show_icon: false
                scrolling_effect: false
                entity: sensor.esp_va_salon_ip
            grid_options:
              columns: 12
              rows: 8
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#dockarr'
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.qemu_dockarr_108_reboot
                    name: Dockarr reboot
                    scrolling_effect: false
                    show_state: false
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.qemu_dockarr_108_shutdown
                    name: Dockarr shutdown
                    scrolling_effect: false
                    show_state: false
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.qemu_dockarr_108_start
                    name: Dockarr start
                    scrolling_effect: false
                    show_state: false
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.qemu_dockarr_108_stop
                    name: Dockarr stop
                    scrolling_effect: false
                    show_state: false
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                show_header: false
                hash: '#pc'
              - square: false
                type: grid
                cards:
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.pc_debian_restart
                    name: Restart
                    scrolling_effect: false
                    show_state: false
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.pc_debian_shutdown
                    name: Stop
                  - type: custom:bubble-card
                    card_type: button
                    entity: button.pc_debian_suspend
                    name: Suspend
                columns: 3
    background:
      image: /api/image/serve/c62d20b443724e841b3f590747a5590a/original
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
    subview: true
  - title: esp
    path: esp
    icon: mdi:chip
    subview: true
    background:
      image: /api/image/serve/42b2c391fc6fa00e0c293b0b336b7cf6/original
    type: sections
    sections:
      - type: grid
        cards:
          - type: heading
            heading: Esp
            heading_style: title
            icon: mdi:chip
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-salon
            sub_button:
              - show_state: true
                entity: sensor.esp_salon_wifi_signal
              - show_state: true
                entity: sensor.esp_salon_tricordeur_rssi
              - entity: sensor.esp_salon_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
              - entity: binary_sensor.esp_salon_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_salon_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_salon_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_salon_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_salon_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-2 > ha-icon {
                color: ${hass.states['sensor.esp_salon_tricordeur_rssi'].state <= -86 ? 'red'
                      : hass.states['sensor.esp_salon_tricordeur_rssi'].state <= -80 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_salon_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_salon_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_salon_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_salon_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_salon_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_salon_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-va_cuisine
            sub_button:
              - show_state: true
                entity: sensor.esp_va_cuisine_wifi_signal
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_cuisine_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_cuisine_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_cuisine_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_cuisine_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_cuisine_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_cuisine_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_cuisine_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_cuisine_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_cuisine_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_cuisine_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_cuisine_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_cuisine_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-sdb
            sub_button:
              - show_state: true
                entity: sensor.esp_sdb_wifi_signal
              - show_state: true
                entity: sensor.esp_sdb_tricordeur_rssi
              - entity: sensor.esp_sdb_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
              - entity: binary_sensor.esp_sdb_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_sdb_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_sdb_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_sdb_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_sdb_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-2 > ha-icon {
                color: ${hass.states['sensor.esp_sdb_tricordeur_rssi'].state <= -86 ? 'red'
                      : hass.states['sensor.esp_sdb_tricordeur_rssi'].state <= -80 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_sdb_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_sdb_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_sdb_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_sdb_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_sdb_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_sdb_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-va_chambre
            sub_button:
              - show_state: true
                entity: sensor.esp_va_chambre_wifi_signal
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_chambre_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_chambre_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_chambre_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_chambre_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_chambre_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_chambre_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_chambre_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_chambre_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_chambre_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_chambre_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_chambre_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_chambre_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-chambre
            sub_button:
              - show_state: true
                entity: sensor.esp_chambre_wifi_signal
              - show_state: true
                entity: sensor.esp_chambre_tricordeur_rssi
              - entity: sensor.esp_chambre_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
              - entity: binary_sensor.esp_chambre_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_chambre_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_chambre_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_chambre_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_chambre_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-2 > ha-icon {
                color: ${hass.states['sensor.esp_chambre_tricordeur_rssi'].state <= -86 ? 'red'
                      : hass.states['sensor.esp_chambre_tricordeur_rssi'].state <= -80 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_chambre_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_chambre_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_chambre_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_chambre_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_chambre_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_chambre_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-va_sdb
            sub_button:
              - show_state: true
                entity: sensor.esp_va_sdb_wifi_signal
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_sdb_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_sdb_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_sdb_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_sdb_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_sdb_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_sdb_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-cuisine
            sub_button:
              - show_state: true
                entity: sensor.esp_cuisine_wifi_signal
              - show_state: true
                entity: sensor.esp_cuisine_tricordeur_rssi
              - entity: sensor.esp_cuisine_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
              - entity: binary_sensor.esp_cuisine_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_cuisine_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_cuisine_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_cuisine_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_cuisine_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-2 > ha-icon {
                color: ${hass.states['sensor.esp_cuisine_tricordeur_rssi'].state <= -86 ? 'red'
                      : hass.states['sensor.esp_cuisine_tricordeur_rssi'].state <= -80 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_cuisine_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_cuisine_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_cuisine_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_cuisine_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_cuisine_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_cuisine_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: temp-frigo
            sub_button:
              - show_state: true
                entity: sensor.esp_va_sdb_wifi_signal
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_sdb_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_sdb_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_sdb_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_sdb_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_sdb_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_sdb_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-multi
            sub_button:
              - show_state: true
                entity: sensor.esp_multi_capteur_wifi_signal
              - show_state: true
                entity: sensor.esp_multi_capteur_tricordeur_rssi
              - entity: sensor.esp_multi_capteur_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
              - entity: binary_sensor.esp_multi_capteur_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_multi_capteur_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_multi_capteur_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_multi_capteur_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_multi_capteur_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-2 > ha-icon {
                color: ${hass.states['sensor.esp_multi_capteur_tricordeur_rssi'].state <= -86 ? 'red'
                      : hass.states['sensor.esp_multi_capteur_tricordeur_rssi'].state <= -80 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_multi_capteur_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_multi_capteur_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_multi_capteur_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_multi_capteur_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_multi_capteur_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_multi_capteur_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: bed-occupation
            sub_button:
              - show_state: true
                entity: sensor.esp_va_sdb_wifi_signal
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_sdb_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_sdb_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_sdb_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_sdb_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_sdb_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_sdb_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_sdb_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_sdb_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
          - type: custom:bubble-card
            card_type: button
            button_type: name
            card_layout: large-2-rows
            name: esp-va_salon
            sub_button:
              - show_state: true
                entity: sensor.esp_va_salon_wifi_signal
                icon: mdi:wifi
                show_background: false
              - show_background: false
                show_icon: true
              - entity: sensor.esp_va_salon_uptime
                icon: mdi:timer-outline
                show_state: true
                show_background: false
                show_icon: true
                show_name: false
              - entity: binary_sensor.esp_va_salon_status
                icon: mdi:check-network-outline
                show_background: false
                name: Status
                state_color: true
                show_state: true
                show_icon: true
                show_name: false
                show_last_changed: false
                show_attribute: false
              - entity: sensor.esp_va_salon_interntemp
                show_state: true
                show_background: false
              - entity: sensor.esp_va_salon_esp_free_memory
                show_state: true
                show_background: false
            styles: |
              .bubble-button-card-container {
                background: rgba(var(--rgb-secondary-text-color), 0.2) !important;
                box-shadow: none;
                border-radius: 15px !important;  # Ajustez la valeur ici
              }
              .bubble-sub-button-1 > ha-icon {
                color: ${hass.states['sensor.esp_va_salon_wifi_signal'].state <= -70 ? 'red'
                      : hass.states['sensor.esp_va_salon_wifi_signal'].state <= -55 ? 'orange'
                      : 'green'} !important;
              }
              .bubble-sub-button-3 > ha-icon {
                color: ${hass.states['sensor.esp_va_salon_uptime'].state === 'on' ? ''
                      : ''} !important;
              }
              .bubble-sub-button-4 > ha-icon {
                color: ${hass.states['binary_sensor.esp_va_salon_status'].state === 'on' ? 'green'
                      : 'red'} !important;
              }
              .bubble-sub-button-5 > ha-icon {
                color: ${hass.states['sensor.esp_va_salon_interntemp'].state >= 65 ? 'red'
                      : hass.states['sensor.esp_va_salon_interntemp'].state >= 50 ? 'orange'
                      : 'green'} !important;
              }
                .bubble-sub-button-6 > ha-icon {
                color: ${hass.states['sensor.esp_va_salon_esp_free_memory'].state >= 160 ? 'green'
                      : hass.states['sensor.esp_va_salon_esp_free_memory'].state >= 80 ? 'orange'
                      : 'red'} !important;
              }
              .bubble-sub-button-container {
                margin-right: -16px;    
              }  
            show_icon: false
            scrolling_effect: false
        column_span: 2
    cards: []
  - type: sections
    max_columns: 3
    title: Multimedia
    path: multimedia
    icon: mdi:multimedia
    subview: true
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: repeat
      attachment: fixed
      image: /api/image/serve/f6bab5563af1a706185d263d4f8fb6fe/original
    sections:
      - type: grid
        cards:
          - type: media-control
            entity: media_player.partout_2
          - type: media-control
            entity: media_player.kodi_salon
          - type: media-control
            entity: media_player.kodi_chambre
          - type: media-control
            entity: media_player.plex_plexkodiconnect_kodi_salon
          - type: media-control
            entity: media_player.plex_plexkodiconnect_kodi_chambre
          - type: media-control
            entity: media_player.plex_plex_for_android_tv_salon
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_salon
                state: playing
      - type: grid
        cards:
          - type: custom:mediarr-card
            media_player_entity: media_player.kodi_salon
            plex_entity: sensor.plex_mediarr
            sonarr_entity: sensor.sonarr_mediarr
            sonarr_label: Sonarr
            radarr_entity: sensor.radarr_mediarr
            radarr_label: Radarr
            seer_entity: sensor.seer_mediarr
        column_span: 1
      - type: grid
        cards: []
      - type: grid
        cards: []
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/home
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  hue:room-living
                {% else %}
                  hue:room-living-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.salon_presence_globale') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.salon_presence_globale
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  hue:room-dining
                {% else %}
                  hue:room-dining-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_cuisine_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_cuisine_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/cuisine
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  hue:room-bedroom
                {% else %}
                  hue:room-bedroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_chambre_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_chambre_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/chambre
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  hue:room-bathroom
                {% else %}
                  hue:room-bathroom-off
                {% endif %} 
        color: |-
          {% set state = states('binary_sensor.esp_sdb_presence') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_sdb_presence
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
