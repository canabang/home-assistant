decluttering_templates:
  mushroom_presence_badge:
    default:
      - color_on: seagreen
      - color_off: gray
    card:
      type: custom:mushroom-template-badge
      content: ''
      icon: |-
        {% set state = states('[[entity]]') %}  
        {% if state == '[[state_on]]' %}
          [[icon_on]]
        {% else %}
          [[icon_off]]
        {% endif %}
      color: |-
        {% set state = states('[[entity]]') %}  
        {% if state == '[[state_on]]' %}
          [[color_on]]
        {% else %}
          [[color_off]]
        {% endif %}
      entity: '[[entity]]'
      tap_action:
        action: navigate
        navigation_path: '[[navigation_path]]'
  mushroom_multimedia_badge:
    card:
      type: custom:mushroom-template-badge
      content: ''
      icon: >
        {% set kodi_playing = states('media_player.kodi_salon') == 'playing' or
        states('media_player.kodi_chambre') == 'playing' %} {% set plex_playing
        = states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
        states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing' %}
        {% set partout_playing = states('media_player.partout_2') == 'playing'
        %} {% if partout_playing %}
          m3of:queue-music
        {% elif kodi_playing %}
          mdi:kodi
        {% elif plex_playing %}
          mdi:plex
        {% else %}
          mdi:multimedia
        {% endif %}
      color: >
        {% set kodi_playing = states('media_player.kodi_salon') == 'playing' or
        states('media_player.kodi_chambre') == 'playing' %} {% set plex_playing
        = states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
        states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing' %}
        {% set partout_playing = states('media_player.partout_2') == 'playing'
        %} {% if partout_playing or kodi_playing or plex_playing %}
          seagreen
        {% else %}
          gray
        {% endif %}
      tap_action:
        action: navigate
        navigation_path: '[[navigation_path]]'
  mushroom_litiere_badge:
    card:
      type: custom:mushroom-template-badge
      content: ''
      icon: mdi:cat
      color: |-
        {% set state = states('binary_sensor.litiere_bac_a_dechets_plein') %}  
        {% if state == 'on' %}
          red
        {% else %}
          seagreen
        {% endif %}
      tap_action:
        action: navigate
        navigation_path: '[[navigation_path]]'
  mushroom_window_card:
    default:
      - icon_open: mdi:window-open-variant
      - icon_closed: mdi:window-closed-variant
      - color_open: seagreen
      - color_closed: grey
      - battery_entity: ''
    card:
      type: custom:mushroom-template-card
      primary: '[[name]]'
      secondary: '{{ ''Ouverte'' if is_state(''[[entity]]'', ''on'') else ''Fermée'' }}'
      icon: |-
        {% if is_state('[[entity]]', 'on') %}
          [[icon_open]]
        {% else %}
          [[icon_closed]]
        {% endif %}
      icon_color: |-
        {% if is_state('[[entity]]', 'on') %}
          [[color_open]]
        {% else %}
          [[color_closed]]
        {% endif %}
      entity: '[[entity]]'
      badge_icon: mdi:battery
      badge_color: |-
        {% set battery = states('[[battery_entity]]') | int %}
        {% if battery >= 100 %}
          green
        {% elif battery >= 30 %}
          seagreen
        {% elif battery >= 20 %}
          orange
        {% else %}
          red
        {% endif %}
      fill_container: false
      layout: horizontal
      tap_action:
        action: more-info
      multiline_secondary: false
      card_mod:
        style: |
          ha-card {
            --ha-card-border-radius: 25px;
            --card-primary-color: {% if is_state('[[entity]]', 'on') %} [[color_open]] {% else %} var(--primary-text-color) {% endif %};
            --card-secondary-color: {% if is_state('[[entity]]', 'on') %} [[color_open]] {% else %} var(--secondary-text-color) {% endif %};
            background: rgba(255, 255, 255, 0.1) !important;
            backdrop-filter: blur(10px) !important;
            border: 1px solid rgba(255, 255, 255, 0.2) !important;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
          }
          mushroom-badge {
            --badge-color: {% set battery = states('[[battery_entity]]') | int %}{% if battery >= 100 %}seagreen{% elif battery >= 30 %}seagreen{% elif battery >= 20 %}orange{% else %}red{% endif %} !important;
          }
          ha-state-icon {
           {% set state = states('[[entity]]') %}
           {% if state == 'on' %}
             color: [[color_open]] !important;
           {% else %}
             color: [[color_closed]] !important;
           {% endif %}  
          }
  mushroom_door_card:
    default:
      - icon_open: phu:panel-door-open
      - icon_closed: phu:panel-door-close
      - color_open: seagreen
      - color_closed: grey
      - battery_entity: ''
    card:
      type: custom:mushroom-template-card
      primary: '[[name]]'
      secondary: '{{ ''Ouverte'' if is_state(''[[entity]]'', ''on'') else ''Fermée'' }}'
      icon: |-
        {% if is_state('[[entity]]', 'on') %}
          [[icon_open]]
        {% else %}
          [[icon_closed]]
        {% endif %}
      icon_color: |-
        {% if is_state('[[entity]]', 'on') %}
          [[color_open]]
        {% else %}
          [[color_closed]]
        {% endif %}
      entity: '[[entity]]'
      badge_icon: mdi:battery
      badge_color: |-
        {% set battery = states('[[battery_entity]]') | int %}
        {% if battery >= 100 %}
          green
        {% elif battery >= 30 %}
          seagreen
        {% elif battery >= 20 %}
          orange
        {% else %}
          red
        {% endif %}
      fill_container: false
      layout: horizontal
      tap_action:
        action: more-info
      card_mod:
        style: |
          ha-card {
            --ha-card-border-radius: 25px;
            --card-primary-color: {% if is_state('[[entity]]', 'on') %} [[color_open]] {% else %} var(--primary-text-color) {% endif %};
            --card-secondary-color: {% if is_state('[[entity]]', 'on') %} [[color_open]] {% else %} var(--secondary-text-color) {% endif %};
            background: rgba(255, 255, 255, 0.1) !important;
            backdrop-filter: blur(10px) !important;
            border: 1px solid rgba(255, 255, 255, 0.2) !important;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
          }
          mushroom-badge {
            --badge-color: {% set battery = states('[[battery_entity]]') | int %}{% if battery >= 100 %}seagreen{% elif battery >= 30 %}seagreen{% elif battery >= 20 %}orange{% else %}red{% endif %} !important;
          }
          ha-state-icon {
           {% set state = states('[[entity]]') %}
           {% if state == 'on' %}
             color: [[color_open]] !important;
           {% else %}
             color: [[color_closed]] !important;
           {% endif %}  
          }
  mushroom_cover_card:
    default:
      - color_open: var(--green-color)
      - color_closed: var(--primary-text-color)
    card:
      type: custom:mushroom-cover-card
      entity: '[[entity]]'
      name: '[[name]]'
      show_position_control: true
      fill_container: false
      tap_action:
        action: more-info
      show_buttons_control: true
      card_mod:
        style: |
          ha-card {
            --ha-card-border-radius: 25px;
            --card-primary-color: {% if is_state('[[entity]]', 'open') %} [[color_open]] {% else %} [[color_closed]] {% endif %};
            --card-secondary-color: {% if is_state('[[entity]]', 'open') %} [[color_open]] {% else %} [[color_closed]] {% endif %};
            background: rgba(255, 255, 255, 0.1) !important;
            backdrop-filter: blur(10px) !important;
            border: 1px solid rgba(255, 255, 255, 0.2) !important;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
          }
          ha-state-icon {
           {% set state = states('[[entity]]') %}
           {% if state == 'open' %}
             color: [[color_open]] !important;
           {% else %}
             color: [[color_closed]] !important;
           {% endif %}  
          }
          mushroom-button {
           {% set state = states('[[entity]]') %}
           {% if state == 'open' %}
             --icon-color: [[color_open]] !important;
           {% else %}
             --icon-color: [[color_closed]] !important;
           {% endif %}  
          }
views:
  - type: sections
    max_columns: 3
    title: Accueil
    path: accueil
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  position: relative;
                  overflow: hidden;
                  background: rgba(40, 40, 40, 0.8);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center;
                  align-items: center;
                  text-align: center;
                  --ha-card-border-radius: 355px;
                  backdrop-filter: blur(10px);
                  border: 1px solid rgba(255, 255, 255, 0.1);
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                }
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-template-card
            primary: '{{ states(''input_text.travail_status'') | title }} '
            secondary: >-
              {% if states('input_datetime.start_travail') != '1970-01-01
              00:00:00' %}
                - Début: {{ states('input_datetime.start_travail') | as_timestamp | timestamp_custom('%d/%m %H:%M') }}
              {% endif %} {% if states('input_datetime.end_travail') !=
              '1970-01-01 00:00:00' %}

              - Fin: {{ states('input_datetime.end_travail') | as_timestamp |
              timestamp_custom('%d/%m %H:%M') }}

              {% endif %}
            icon: m3o:work
            icon_color: |-
              {% if states('input_text.travail_status') == 'repos' %}
                seagreen
              {% elif states('input_text.travail_status') == 'travail' %}
                orange
              {% else %}
                grey
              {% endif %}
            entity: input_text.travail_status
            multiline_secondary: true
            tap_action:
              action: perform-action
              target:
                entity_id: automation.planning
              data:
                skip_condition: true
              perform_action: automation.trigger
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 255px !important;
                  background: rgba(255, 255, 255, 0.1) !important;
                  backdrop-filter: blur(10px) !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                }
                mushroom-state-info {
                  {% if states('input_text.travail_status') == 'repos' %}
                    --card-primary-color: seagreen !important;
                    --card-secondary-color: seagreen !important;
                  {% elif states('input_text.travail_status') == 'travail' %}
                    --card-primary-color: orange !important;
                    --card-secondary-color: orange !important;
                  {% else %}
                    --card-primary-color: var(--primary-text-color) !important;
                    --card-secondary-color: var(--secondary-text-color) !important;
                  {% endif %}
                }
                mushroom-shape-icon {
                  {% if states('input_text.travail_status') == 'repos' %}
                    --shape-color: rgba(0, 128, 0, 0.2) !important;
                  {% elif states('input_text.travail_status') == 'travail' %}
                    --shape-color: rgba(255, 165, 0, 0.2) !important;
                  {% endif %}
                }
        column_span: 3
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Lumières
                secondary: '{{ states(''sensor.lumieres_allumees'') }} allumée(s)'
                icon: |-
                  {% if states('sensor.lumieres_allumees') | int > 0 %}
                    hue:bulb-sultan
                  {% else %}
                    phu:bulb-sultan-v2
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.lumieres_allumees') | int > 0 %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: sensor.lumieres_allumees
                tap_action:
                  action: navigate
                  navigation_path: '#lumieres02'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if states('sensor.lumieres_allumees') | int > 0 %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if states('sensor.lumieres_allumees') | int > 0 %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('sensor.lumieres_allumees') | int %}
                     {% if state > 0 %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Volets
                secondary: '{{ states(''sensor.nombre_volets'') }} ouvert(s)'
                icon: |-
                  {% if states('sensor.nombre_volets') | int > 0 %}
                    mdi:window-shutter-open
                  {% else %}
                    mdi:window-shutter
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.nombre_volets') | int > 0 %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: sensor.nombre_volets
                tap_action:
                  action: navigate
                  navigation_path: '#volets'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if states('sensor.nombre_volets') | int > 0 %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if states('sensor.nombre_volets') | int > 0 %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('sensor.nombre_volets') | int %}
                     {% if state > 0 %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Fenêtres
                secondary: '{{ states(''sensor.nombre_fenetres'') }} ouverte(s)'
                icon: |-
                  {% if states('sensor.nombre_fenetres') | int > 0 %}
                    mdi:window-open-variant
                  {% else %}
                    mdi:window-closed-variant
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.nombre_fenetres') | int > 0 %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: sensor.nombre_fenetres
                tap_action:
                  action: navigate
                  navigation_path: '#fenetres'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if states('sensor.nombre_fenetres') | int > 0 %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if states('sensor.nombre_fenetres') | int > 0 %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('sensor.nombre_fenetres') | int %}
                     {% if state > 0 %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Portes
                secondary: '{{ states(''sensor.nombre_portes'') }} ouverte(s)'
                icon: |-
                  {% if states('sensor.nombre_portes') | int > 0 %}
                    mdi:door-open
                  {% else %}
                    mdi:door
                  {% endif %}
                icon_color: |-
                  {% if states('sensor.nombre_portes') | int > 0 %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: sensor.nombre_portes
                tap_action:
                  action: navigate
                  navigation_path: '#portes'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if states('sensor.nombre_portes') | int > 0 %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if states('sensor.nombre_portes') | int > 0 %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('sensor.nombre_portes') | int %}
                     {% if state > 0 %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Prises
                secondary: '{{ states(''sensor.nombre_prises'') }} allumée(s)'
                icon: mdi:power-socket-eu
                icon_color: |-
                  {% if states('sensor.nombre_prises') | int > 0 %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: sensor.nombre_prises
                tap_action:
                  action: navigate
                  navigation_path: '#prises'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if states('sensor.nombre_prises') | int > 0 %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if states('sensor.nombre_prises') | int > 0 %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('sensor.nombre_prises') | int %}
                     {% if state > 0 %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
            columns: 2
            grid_options:
              columns: 12
              rows: 3
      - type: grid
        cards:
          - type: media-control
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_salon
                state: playing
            entity: media_player.plex_plex_for_android_tv_salon
            card_mod:
              style: |
                ha-card {
                  position: relative;
                  overflow: hidden;
                  background: rgba(40, 40, 40, 0.8);
                  height: 120px;
                  --ha-card-border-radius: 25px;
                  backdrop-filter: blur(10px);
                  border: 1px solid rgba(255, 255, 255, 0.2);
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
                }
          - type: custom:mini-media-player
            entity: media_player.spotifyplus_gael
            artwork: full-cover
            artwork_border: true
            power_color: true
            show_source: true
            group: false
            source: full
            info: scroll
            hide:
              power: false
              repeat: false
              runtime: false
              shuffle: false
              source: false
              volume: false
            visibility:
              - condition: state
                entity: media_player.spotifyplus_gael
                state: playing
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px;
                  background: rgba(255, 255, 255, 0.1) !important;
                  backdrop-filter: blur(10px) !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                }
      - type: grid
        cards:
          - type: custom:mushroom-template-card
            primary: Météo
            secondary: >-
              {{ state_attr('weather.pompey', 'temperature') }}°C {% if
              states('sensor.pompey_wind_speed') | int > 0 %} - Vent {{
              states('sensor.pompey_wind_speed') }} km/h{% endif %} {% if
              states('sensor.pompey_snow_chance') | int > 0 %} - Neige {{
              states('sensor.pompey_snow_chance') }}%{% endif %} {% if
              states('sensor.pompey_freeze_chance') | int > 0 %} - Gel {{
              states('sensor.pompey_freeze_chance') }}%{% endif %}
            icon: >-
              {% set weather_state = states('weather.pompey') %} {% if
              weather_state == 'partlycloudy' %}
                mdi:weather-partly-cloudy
              {% elif weather_state == 'clear-night' %}
                mdi:weather-night
              {% elif weather_state == 'cloudy' %}
                mdi:weather-cloudy
              {% elif weather_state == 'rainy' %}
                mdi:weather-rainy
              {% elif weather_state == 'pouring' %}
                mdi:weather-pouring
              {% elif weather_state == 'sunny' %}
                mdi:weather-sunny
              {% elif weather_state == 'lightning' %}
                mdi:weather-lightning
              {% elif weather_state == 'windy' %}
                mdi:weather-windy
              {% elif weather_state == 'snow' %}
                mdi:weather-snowy
              {% elif weather_state == 'hail' %}
                mdi:weather-hail
              {% elif weather_state == 'fog' %}
                mdi:weather-fog
              {% else %}
                mdi:weather-partly-cloudy
              {% endif %}
            icon_color: >-
              {% set weather_state = states('weather.pompey') %} {% if
              weather_state == 'partlycloudy' %}
                skyblue
              {% elif weather_state == 'clear-night' %}
                purple
              {% elif weather_state == 'cloudy' %}
                skyblue
              {% elif weather_state == 'rainy' %}
                blue
              {% elif weather_state == 'pouring' %}
                red
              {% elif weather_state == 'sunny' %}
                yellow
              {% elif weather_state == 'lightning' %}
                yellow
              {% elif weather_state == 'windy' %}
                red
              {% elif weather_state == 'snow' %}
                white
              {% elif weather_state == 'hail' %}
                red
              {% elif weather_state == 'fog' %}
                grey
              {% else %}
                white
              {% endif %}
            entity: weather.pompey
            badge_icon: mdi:thermometer
            badge_color: >-
              {% set temp = state_attr('weather.pompey', 'temperature') | float
              %} {% if temp > 23 %}
                red
              {% elif temp > 19 %}
                seagreen
              {% else %}
                blue
              {% endif %}
            multiline_secondary: true
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px;
                  --card-primary-color: var(--primary-text-color);
                  --card-secondary-color: var(--secondary-text-color);
                  background: rgba(255, 255, 255, 0.1) !important;
                  backdrop-filter: blur(10px) !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  overflow: hidden;
                }
                ha-state-icon {
                  {% set weather_state = states('weather.pompey') %}
                  {% if weather_state == 'partlycloudy' %}
                    color: skyblue !important;
                    animation: cloudy 10s ease-in-out infinite, sun 2s infinite;
                  {% elif weather_state == 'clear-night' %}
                    color: purple !important;
                    animation: moon 10s linear infinite, stars 5s linear infinite;
                  {% elif weather_state == 'cloudy' %}
                    color: skyblue !important;
                    animation: cloudy 10s ease-in-out infinite;
                  {% elif weather_state == 'rainy' %}
                    color: blue !important;
                    animation: cloudy 10s ease-in-out infinite, rain 1.5s infinite;
                  {% elif weather_state == 'pouring' %}
                    color: red !important;
                    animation: cloudy 10s ease-in-out infinite, pouring 1.5s infinite;
                  {% elif weather_state == 'sunny' %}
                    color: yellow !important;
                    animation: sunny 8s ease-in-out infinite alternate;
                  {% elif weather_state == 'lightning' %}
                    color: yellow !important;
                    animation: cloudy 10s ease-in-out infinite, lightning 4s infinite;
                  {% elif weather_state == 'windy' %}
                    color: red !important;
                    animation: windy 10s ease-in-out infinite;
                  {% elif weather_state == 'snow' %}
                    color: white !important;
                    animation: cloudy 10s ease-in-out infinite, snow 4s infinite;
                  {% elif weather_state == 'hail' %}
                    color: red !important;
                    animation: cloudy 10s ease-in-out infinite, hail 2s infinite;
                  {% elif weather_state == 'fog' %}
                    color: grey !important;
                    animation: cloudy 10s ease-in-out infinite, fog 4s infinite;
                  {% else %}
                    color: white !important;
                    animation: sun 2s infinite;
                  {% endif %}
                }
                mushroom-badge {
                  {% set temp = state_attr('weather.pompey', 'temperature') | float %}
                  {% if temp > 23 %}
                    --badge-color: red !important;
                  {% elif temp > 19 %}
                    --badge-color: seagreen !important;
                  {% else %}
                    --badge-color: blue !important;
                  {% endif %}
                }
                @keyframes sunny { 
                    70% { transform: rotate(360deg) scale(1); }
                    80% { transform: scale(1); }
                    90% { transform: scale(1.15); }
                    100% { transform: scale(1); }
                }
                @keyframes cloudy {
                    0%, 100% { transform: translateX(3px); }
                    30% { transform: translateX(-1px); }
                    45% { transform: translateX(1.5px); }
                    75% { transform: translateX(-3.2px); }
                } 
                @keyframes rain {
                    50% { clip-path: polygon(0 0, 100% 0, 100% 73%, 71% 73%, 50% 39%, 29% 73%, 0 73%); }
                }
                @keyframes pouring {
                    0%, 50%, 100% { clip-path: inset(0 0 0 0); }
                    25% { clip-path: polygon(0 0, 100% 0, 100% 83%, 54% 83%, 62% 47%, 47% 46%, 38% 83%, 0 83%); }
                    75%  { clip-path: polygon(0 0, 100% 0, 100% 70%, 75% 70%, 80% 48%, 63% 48%, 54% 94%, 32% 94%, 46% 46%, 30% 46%, 23% 72%, 0 72%); }
                }
                @keyframes lightning {
                    10%, 15% { clip-path: polygon(0 0, 100% 0, 100% 100%, 47% 100%, 69% 55%, 66% 40%, 48% 39%, 24% 100%, 0 100%); transform: scale(1.1); }
                    10.1%, 15.1% { clip-path: inset(0 0 0 0); transform: scale(1); }
                }
                @keyframes moon {
                    0%, 100% { transform: rotate(12deg); }
                    30% { transform: rotate(-6deg); }
                    45% { transform: rotate(8deg); }
                    75% { transform: rotate(-10deg); }
                }
                @keyframes stars {
                    0%, 3.1%, 14.1% { clip-path: inset(0 0 0 0); }
                    3% { clip-path: polygon(1% 1%, 0% 99%, 99% 100%, 99% 62%, 68% 62%, 62% 44%, 76% 34%, 100% 34%, 99% 0%); }
                    14% { clip-path: polygon(1% 1%, 0% 99%, 99% 100%, 100% 25%, 51% 45%, 38% 34%, 36% 0); }
                }
                @keyframes windy {
                    0%, 100% { transform: scaleX(1.2); }
                    30% { transform: scaleX(0.9); }
                    45% { transform: scaleX(1.1); }
                    75% { transform: scaleX(0.8); }
                }
                @keyframes snow {
                    50% { clip-path: polygon(0 0, 100% 0, 100% 100%, 65% 100%, 76% 73%, 57% 49%, 34% 56%, 26% 79%, 37% 100%, 0 100%); }
                    51% { clip-path: inset(0 0 0 0); }
                }
                @keyframes hail {
                    0%, 26%, 51%, 76%, 100% { clip-path: inset(0 0 0 0); }
                    25% { clip-path: polygon(0 0, 100% 0, 100% 100%, 62% 100%, 47% 69%, 56% 55%, 43% 43%, 31% 58%, 48% 68%, 63% 100%, 0 100%); }
                    50%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 62% 100%, 61% 86%, 74% 74%, 61% 60%, 46% 69%, 60% 87%, 63% 100%, 0 100%); }
                    75%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 47% 100%, 56% 83%, 42% 68%, 27% 81%, 37% 100%, 0 100%); }
                }
                @keyframes fog {
                    0%, 26%, 76%, 100% { clip-path: inset(0 0 0 0); }
                    25% { clip-path: polygon(0 0, 100% 0, 100% 59%, 60% 59%, 60% 74%, 100% 74%, 100% 100%, 0 100%); }
                    75%  { clip-path: polygon(0 0, 100% 0, 100% 100%, 26% 100%, 26% 76%, 0 76%); }
                }
                @keyframes sun {
                    50% { clip-path: polygon(0 67%, 18% 55%, 16% 31%, 41% 12%, 67% 24%, 77% 59%, 100% 64%, 100% 100%, 0 100%); }
                }
      - type: grid
        cards: []
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lumieres'
                show_header: false
                close_on_click: true
                card_layout: normal
                margin_top_desktop: calc(100vh - 600px)
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_salon
                name: Salon
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_salon_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_salon_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_salon'].state === 'on' ?
                  'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
                icon: phu:bulb-flood
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sam
                name: Salle à Manger
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_sam_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_sam_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon", hass.states['light.hue_sam'].state
                  === 'on' ? 'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_cuisine
                name: Cuisine
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_cuisine_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_cuisine_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_cuisine'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.ledplancui_cct
                name: Plan de Travail
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button: []
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.ledplancui_cct'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_chambre
                name: Chambre
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_chambre_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                  - entity: scene.hue_chambre_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                    tap_action:
                      action: call-service
                      target:
                        entity_id: entity
                      service: scene.turn_on
                styles: >-
                  ${icon.setAttribute("icon",
                  hass.states['light.hue_chambre'].state === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
              - type: custom:bubble-card
                card_type: button
                entity: light.hue_sdb
                name: Salle de Bain
                scrolling_effect: false
                use_accent_color: false
                show_state: false
                show_attribute: false
                card_layout: large-2-rows
                sub_button:
                  - entity: scene.hue_sdb_1_veilleuse
                    show_name: true
                    state_background: false
                    show_background: true
                    show_icon: false
                    name: Veilleuse
                  - entity: scene.hue_sdb_2_stimulation
                    name: Stimulation
                    state_background: false
                    show_name: true
                    show_icon: false
                  - entity: scene.hue_sdb_3_attenue
                    name: Attenue
                    state_background: false
                    show_icon: false
                    show_name: true
                  - entity: scene.hue_sdb_4_lumineux
                    name: Lumineux
                    state_background: false
                    show_icon: false
                    show_name: true
                styles: >-
                  ${icon.setAttribute("icon", hass.states['light.hue_sdb'].state
                  === 'on' ?
                    'hue:bulb-sultan' : 'phu:bulb-sultan-v2')}
            grid_options:
              rows: 3
              columns: 9
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#volets'
                close_on_click: true
                show_header: false
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsal
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsal
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: Salon
                icon_open: mdi:window-shutter
                icon_close: shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsal'].state === 'open' ? 'seagreen' : ''} !important;
                      }

                  ${icon.setAttribute("icon", hass.states['cover.volsal'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsam
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsam
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                show_icon: true
                show_name: true
                card_layout: large
                name: Salle à Manger
                icon_open: ''
                icon_up: m3of:keyboard-arrow-up
                icon_down: m3of:keyboard-arrow-down
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsam'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsam'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volcui
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volcui
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: Cuisine
                icon_open: mdi:window-shutter
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volcui'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volcui'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volsdb
                scrolling_effect: false
                grid_options:
                  rows: 1
                  columns: 7
                show_state: true
                show_attribute: false
                attribute: current_position
                sub_button:
                  - entity: cover.volsdb
                    show_attribute: true
                    attribute: current_position
                    show_background: false
                    state_background: false
                    show_icon: false
                    show_state: false
                    show_name: false
                    show_last_changed: false
                    name: 'Position : '
                show_icon: true
                show_name: true
                card_layout: large
                force_icon: false
                name: SdB
                icon_open: mdi:window-shutter-open
                icon_close: mdi:window-shutter
                styles: >
                  .bubble-icon {
                      color: ${hass.states['cover.volsdb'].state === 'open' ? 'seagreen' : ''} !important;
                      }
                  ${icon.setAttribute("icon", hass.states['cover.volsdb'].state
                  === 'open' ? 'mdi:window-shutter-open' :
                  'mdi:window-shutter')}
              - type: custom:bubble-card
                card_type: cover
                entity: cover.volets
                card_layout: large
            grid_options:
              columns: 9
              rows: 3
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#prises'
                show_header: false
              - type: custom:bubble-card
                card_type: button
                entity: switch.pris_tel_sal
                show_state: false
                show_attribute: false
                name: Tél Salon
                icon: hue:plug-eu-group
                styles: |-
                  .bubble-icon {
                        color: ${hass.states['switch.pris_tel_sal'].state == 'on' ? 'seagreen' : ''
                        } !important;
                      }
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
                sub_button:
                  - entity: sensor.pris_tel_sal_power
                    show_background: false
                    show_state: true
              - type: custom:bubble-card
                card_type: button
                entity: switch.priscafe
                show_state: false
                show_attribute: false
                name: Café
                icon: hue:plug-eu-group
                styles: |-
                  .bubble-icon {
                        color: ${hass.states['switch.priscafe'].state == 'on' ? 'seagreen' : ''
                        } !important;
                      }
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
                sub_button:
                  - entity: sensor.priscafe_power
                    show_background: false
                    show_state: true
              - type: custom:bubble-card
                card_type: button
                entity: switch.prismal
                show_state: false
                show_attribute: false
                name: Machine à laver
                icon: hue:plug-eu-group
                styles: |-
                  .bubble-icon {
                        color: ${hass.states['switch.prismal'].state == 'on' ? 'seagreen' : ''
                        } !important;
                      }
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
                sub_button:
                  - entity: sensor.prismal_power
                    show_background: false
                    show_state: true
              - type: custom:bubble-card
                card_type: button
                entity: switch.pristelchamb
                show_state: false
                show_attribute: false
                name: Tél Chambre
                icon: hue:plug-eu-group
                styles: |-
                  .bubble-icon {
                        color: ${hass.states['switch.pristelchamb'].state == 'on' ? 'seagreen' : ''
                        } !important;
                      }
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
                sub_button:
                  - entity: sensor.pristelchamb_power
                    show_background: false
                    show_state: true
              - type: custom:bubble-card
                card_type: button
                entity: switch.pristvchamb
                show_state: false
                show_attribute: false
                name: Tv Chambre
                icon: hue:plug-eu-group
                styles: |-
                  .bubble-icon {
                        color: ${hass.states['switch.pristvchamb'].state == 'on' ? 'seagreen' : ''
                        } !important;
                      }
                  .bubble-button-background {
                      opacity: 1 !important;
                      background-color: ${state === 'on' ? 'rgb(40, 40, 40)' : ''} !important;
                    }
            grid_options:
              columns: 9
              rows: 5
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lumieres02'
                show_header: false
                close_on_click: true
                card_layout: normal
                margin_top_desktop: calc(100vh - 600px)
              - type: custom:mushroom-light-card
                entity: light.hue_salon
                name: Salon
                use_light_color: true
                show_brightness_control: true
                show_color_control: true
                icon: phu:bulb-flood
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Veilleuse
                    secondary: ''
                    icon: mdi:lightbulb-night
                    entity: scene.hue_salon_1_veilleuse
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_salon_1_veilleuse
                    icon_color: blue
                    multiline_secondary: false
                    layout: vertical
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(33, 150, 243, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Stimulation
                    secondary: ''
                    icon: mdi:lightbulb-on
                    entity: scene.hue_salon_2_stimulation
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_salon_2_stimulation
                    icon_color: red
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(244, 67, 54, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Atténué
                    secondary: ''
                    icon: mdi:lightbulb-outline
                    entity: scene.hue_salon_3_attenue
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_salon_3_attenue
                    icon_color: amber
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 193, 7, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Lumineux
                    secondary: ''
                    icon: mdi:lightbulb
                    entity: scene.hue_salon_4_lumineux
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_salon_4_lumineux
                    icon_color: yellow
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 235, 59, 0.1) !important;
                          margin: 2px !important;
                        }
              - type: custom:mushroom-light-card
                entity: light.hue_sam
                name: Salle à Manger
                use_light_color: true
                show_brightness_control: true
                show_color_control: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Veilleuse
                    secondary: ''
                    icon: mdi:lightbulb-night
                    entity: scene.hue_sam_1_veilleuse
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sam_1_veilleuse
                    icon_color: blue
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(33, 150, 243, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Stimulation
                    secondary: ''
                    icon: mdi:lightbulb-on
                    entity: scene.hue_sam_2_stimulation
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sam_2_stimulation
                    icon_color: red
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(244, 67, 54, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Atténué
                    secondary: ''
                    icon: mdi:lightbulb-outline
                    entity: scene.hue_sam_3_attenue
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sam_3_attenue
                    icon_color: amber
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 193, 7, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Lumineux
                    secondary: ''
                    icon: mdi:lightbulb
                    entity: scene.hue_sam_4_lumineux
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sam_4_lumineux
                    icon_color: yellow
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 235, 59, 0.1) !important;
                          margin: 2px !important;
                        }
              - type: custom:mushroom-light-card
                entity: light.hue_cuisine
                name: Cuisine
                use_light_color: true
                show_brightness_control: true
                show_color_control: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Veilleuse
                    secondary: ''
                    icon: mdi:lightbulb-night
                    entity: scene.hue_cuisine_1_veilleuse
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_cuisine_1_veilleuse
                    icon_color: blue
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(33, 150, 243, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Stimulation
                    secondary: ''
                    icon: mdi:lightbulb-on
                    entity: scene.hue_cuisine_2_stimulation
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_cuisine_2_stimulation
                    icon_color: red
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(244, 67, 54, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Atténué
                    secondary: ''
                    icon: mdi:lightbulb-outline
                    entity: scene.hue_cuisine_3_attenue
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_cuisine_3_attenue
                    icon_color: amber
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 193, 7, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Lumineux
                    secondary: ''
                    icon: mdi:lightbulb
                    entity: scene.hue_cuisine_4_lumineux
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_cuisine_4_lumineux
                    icon_color: yellow
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 235, 59, 0.1) !important;
                          margin: 2px !important;
                        }
              - type: custom:mushroom-light-card
                entity: light.ledplancui_cct
                name: Plan de Travail
                use_light_color: true
                show_brightness_control: true
                show_color_control: false
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: custom:mushroom-light-card
                entity: light.hue_chambre
                name: Chambre
                use_light_color: true
                show_brightness_control: true
                show_color_control: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Veilleuse
                    secondary: ''
                    icon: mdi:lightbulb-night
                    entity: scene.hue_chambre_1_veilleuse
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_chambre_1_veilleuse
                    icon_color: blue
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(33, 150, 243, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Stimulation
                    secondary: ''
                    icon: mdi:lightbulb-on
                    entity: scene.hue_chambre_2_stimulation
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_chambre_2_stimulation
                    icon_color: red
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(244, 67, 54, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Atténué
                    secondary: ''
                    icon: mdi:lightbulb-outline
                    entity: scene.hue_chambre_3_attenue
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_chambre_3_attenue
                    icon_color: amber
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 193, 7, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Lumineux
                    secondary: ''
                    icon: mdi:lightbulb
                    entity: scene.hue_chambre_4_lumineux
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_chambre_4_lumineux
                    icon_color: yellow
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 235, 59, 0.1) !important;
                          margin: 2px !important;
                        }
              - type: custom:mushroom-light-card
                entity: light.hue_sdb
                name: Salle de Bain
                use_light_color: true
                show_brightness_control: true
                show_color_control: true
                tap_action:
                  action: toggle
                hold_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 15px !important;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                    }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Veilleuse
                    secondary: ''
                    icon: mdi:lightbulb-night
                    entity: scene.hue_sdb_1_veilleuse
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sdb_1_veilleuse
                    icon_color: blue
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(33, 150, 243, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Stimulation
                    secondary: ''
                    icon: mdi:lightbulb-on
                    entity: scene.hue_sdb_2_stimulation
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sdb_2_stimulation
                    icon_color: red
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(244, 67, 54, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Atténué
                    secondary: ''
                    icon: mdi:lightbulb-outline
                    entity: scene.hue_sdb_3_attenue
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sdb_3_attenue
                    icon_color: amber
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 193, 7, 0.1) !important;
                          margin: 2px !important;
                        }
                  - type: custom:mushroom-template-card
                    primary: Lumineux
                    secondary: ''
                    icon: mdi:lightbulb
                    entity: scene.hue_sdb_4_lumineux
                    tap_action:
                      action: call-service
                      service: scene.turn_on
                      target:
                        entity_id: scene.hue_sdb_4_lumineux
                    icon_color: yellow
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 12px !important;
                          background: rgba(255, 235, 59, 0.1) !important;
                          margin: 2px !important;
                        }
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/468a7538ce1a7001cbb7bcca80027267/original
    badges:
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: person.canabang
          - state_on: home
          - icon_on: mdi:home-outline
          - icon_off: mdi:home-off-outline
          - navigation_path: /salon-mushroom/accueil
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_maison'') | round(2) }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_maison') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_maison
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /dashboard-salon/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: update.home_assistant_core_update
          - state_on: 'on'
          - icon_on: mdi:server
          - icon_off: mdi:server-off
          - navigation_path: /dashboard-salon/baie-info
      - type: custom:decluttering-card
        template: mushroom_multimedia_badge
        variables:
          - navigation_path: /dashboard-salon/multimedia
      - type: custom:decluttering-card
        template: mushroom_litiere_badge
        variables:
          - navigation_path: /salon-mushroom/petscales-v3
    cards: []
    subview: true
  - title: Séjour
    badges:
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_salon_movement') %}  
                {% if state == 'on' %}
                  mdi:motion-sensor
                {% else %}
                  mdi:motion-sensor-off
                {% endif %}
        color: |-
          {% set state = states('binary_sensor.esp_salon_movement') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: binary_sensor.esp_salon_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.sejour'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.sejour') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.sejour
        tap_action:
          action: navigate
          navigation_path: '#temperature'
      - type: custom:mushroom-template-badge
        content: '{{ states(''sensor.humidite_sejour'') }} %'
        icon: m3r:humidity-percentage
        color: blue
        entity: sensor.humidite_sejour
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        color: ''
        entity: sensor.lux_sejour
        icon: mdi:brightness-7
        tap_action:
          action: navigate
          navigation_path: '#lux'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/accueil
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /dashboard-salon/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /dashboard-salon/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}


          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
      - type: custom:mushroom-template-badge
        icon: mdi:cat
        color: >-
          {% set state = states('binary_sensor.litiere_bac_a_dechets_plein')
          %}  
            {% if state == 'on' %}
              red
            {% else %}
              seagreen
            {% endif %}
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/petscales-v3
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center; /* Centers content vertically */
                  align-items: center; /* Centers content horizontally */
                  text-align: center; /* Centers text horizontally */
                  --ha-card-border-radius: 150px;
                }
        column_span: 3
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_window_card
                variables:
                  - name: Salon
                  - entity: binary_sensor.ouvfenetsal_contact
                  - battery_entity: sensor.ouvfenetsal_battery
              - type: custom:decluttering-card
                template: mushroom_window_card
                variables:
                  - name: Salle à Manger
                  - entity: binary_sensor.ouvfenetsam_contact
                  - battery_entity: sensor.ouvfenetsam_battery
            columns: 2
            title: Fenêtres
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_door_card
                variables:
                  - name: Entrée
                  - entity: binary_sensor.ouvportent_contact
                  - battery_entity: sensor.ouvportent_battery
            columns: 2
            title: Porte
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-light-card
                entity: light.hue_salon
                name: Salon
                show_brightness_control: true
                show_color_temp_control: true
                tap_action:
                  action: toggle
                use_light_color: true
                collapsible_controls: true
                double_tap_action:
                  action: more-info
                hold_action:
                  action: navigate
                  navigation_path: '#scene-salon'
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-light-card
                entity: light.hue_sam
                name: Salle à Manger
                show_brightness_control: true
                show_color_temp_control: true
                tap_action:
                  action: navigate
                  navigation_path: '#scene-sam'
                use_light_color: true
                collapsible_controls: true
                double_tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
            title: Lumières
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_cover_card
                variables:
                  - name: Salon
                  - entity: cover.volsal
              - type: custom:decluttering-card
                template: mushroom_cover_card
                variables:
                  - name: Salle à Manger
                  - entity: cover.volsam
            columns: 2
            title: Volets
        columns: 2
      - type: grid
        cards:
          - type: media-control
            entity: media_player.plex_plex_for_android_tv_salon
            name: Plex
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 20px;
                }
            visibility:
              - condition: state
                entity: media_player.plex_plex_for_android_tv_salon
                state: playing
            grid_options:
              columns: 12
              rows: 5
          - type: custom:mini-media-player
            entity: media_player.spotifyplus_gael
            artwork: full-cover
            artwork_border: true
            power_color: true
            show_source: true
            group: false
            source: full
            info: scroll
            hide:
              power: false
              repeat: false
              runtime: false
              shuffle: false
              source: false
              volume: false
            sound_mode: icon
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 20px;
                }
            visibility:
              - condition: state
                entity: media_player.spotifyplus_gael
                state: playing
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Horloge
                secondary: '{{ states(''sensor.awtrix_salon_current_app'') }}'
                icon: mdi:clock-digital
                entity: light.awtrix_salon_matrix
                tap_action:
                  action: toggle
                multiline_secondary: false
                color: |-
                  {% if is_state('light.awtrix_salon_matrix', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                features_position: bottom
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('light.awtrix_salon_matrix', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('light.awtrix_salon_matrix', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('light.awtrix_salon_matrix') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Téléphone
                secondary: >-
                  {{ states('sensor.tricordeur_14_battery_level') }}% - {{
                  states('sensor.pris_tel_sal_power') }}W
                icon: mdi:power-socket-fr
                entity: switch.pris_tel_sal
                tap_action:
                  action: toggle
                color: |-
                  {% if is_state('switch.pris_tel_sal', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                features_position: bottom
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('switch.pris_tel_sal', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('switch.pris_tel_sal', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('switch.pris_tel_sal') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: TV
                secondary: >-
                  {% if is_state('media_player.partout_2', 'playing') and
                  is_state('input_boolean.switch_tv_2', 'on') %}
                    {{ state_attr('media_player.partout_2', 'media_title') }}
                  {% elif is_state('media_player.kodi_salon', 'playing') and
                  is_state('input_boolean.switch_tv_2', 'on') %}
                    {{ state_attr('media_player.kodi_salon', 'media_title') }}
                  {% else %}
                    {{ 'Allumée' if is_state('input_boolean.switch_tv_2', 'on') else 'Éteinte' }}
                  {% endif %}
                icon: mdi:television
                icon_color: |-
                  {% if is_state('input_boolean.switch_tv_2', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: input_boolean.switch_tv_2
                tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('input_boolean.switch_tv_2', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('input_boolean.switch_tv_2', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('input_boolean.switch_tv_2') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: VA Salon
                secondary: '{{ states(''assist_satellite.esp_va_salon_satellite_assist'') }}'
                icon: mdi:account-voice
                icon_color: |-
                  {% if is_state('light.esp_va_salon_lcd_backlight', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: light.esp_va_salon_lcd_backlight
                tap_action:
                  action: assist
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('assist_satellite.esp_va_salon_satellite_assist', 'idle') %} var(--primary-text-color) {% else %} seagreen {% endif %};
                      --card-secondary-color: {% if is_state('assist_satellite.esp_va_salon_satellite_assist', 'idle') %} var(--secondary-text-color) {% else %} seagreen {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('assist_satellite.esp_va_salon_satellite_assist') %}
                     {% if state == 'idle' %}
                       color: grey !important;
                     {% else %}
                       color: seagreen !important;
                     {% endif %}  
                    }
            title: Autres
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-climate-card
                entity: climate.therm_sejour
                show_temperature_control: true
                hvac_modes:
                  - heat
                  - 'off'
                fill_container: false
                tap_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - square: false
                type: grid
                cards:
                  - type: custom:mushroom-template-card
                    primary: Radiateur Salon
                    secondary: >-
                      {{ 'Éteint' if is_state('switch.radsal_l1', 'on') else
                      'Allumé' }}
                    icon: |-
                      {% if is_state('switch.radsal_l1', 'off') %}
                        mdi:radiator
                      {% else %}
                        mdi:radiator-off
                      {% endif %}
                    icon_color: |-
                      {% if is_state('switch.radsal_l1', 'off') %}
                        red
                      {% else %}
                        grey
                      {% endif %}
                    entity: switch.radsal_l1
                    tap_action:
                      action: toggle
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px;
                          --card-primary-color: {% if is_state('switch.radsal_l1', 'off') %} red {% else %} var(--primary-text-color) {% endif %};
                          --card-secondary-color: {% if is_state('switch.radsal_l1', 'off') %} red {% else %} var(--secondary-text-color) {% endif %};
                          background: rgba(255, 255, 255, 0.1) !important;
                          backdrop-filter: blur(10px) !important;
                          border: 1px solid rgba(255, 255, 255, 0.2) !important;
                          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                        }
                        ha-state-icon {
                         {% set state = states('switch.radsal_l1') %}
                         {% if state == 'off' %}
                           color: red !important;
                         {% else %}
                           color: grey !important;
                         {% endif %}  
                        }
                  - type: custom:mushroom-template-card
                    primary: Radiateur Cuisine
                    secondary: >-
                      {{ 'Éteint' if is_state('switch.radcui_l1', 'on') else
                      'Allumé' }}
                    icon: |-
                      {% if is_state('switch.radcui_l1', 'off') %}
                        mdi:radiator
                      {% else %}
                        mdi:radiator-off
                      {% endif %}
                    icon_color: |-
                      {% if is_state('switch.radcui_l1', 'off') %}
                        red
                      {% else %}
                        grey
                      {% endif %}
                    entity: switch.radcui_l1
                    tap_action:
                      action: toggle
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 25px;
                          --card-primary-color: {% if is_state('switch.radcui_l1', 'off') %} red {% else %} var(--primary-text-color) {% endif %};
                          --card-secondary-color: {% if is_state('switch.radcui_l1', 'off') %} red {% else %} var(--secondary-text-color) {% endif %};
                          background: rgba(255, 255, 255, 0.1) !important;
                          backdrop-filter: blur(10px) !important;
                          border: 1px solid rgba(255, 255, 255, 0.2) !important;
                          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                        }
                        ha-state-icon {
                         {% set state = states('switch.radcui_l1') %}
                         {% if state == 'off' %}
                           color: red !important;
                         {% else %}
                           color: grey !important;
                         {% endif %}  
                        }
                columns: 1
            title: Thermostat
            columns: 2
            visibility:
              - condition: state
                entity: climate.therm_sejour
                state: heat
          - show_name: true
            show_icon: true
            type: button
            entity: input_boolean.pause_musique
            show_state: true
        columns: 2
      - type: grid
        cards: []
        columns: 2
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature'
              - type: grid
                cards:
                  - type: custom:mushroom-template-card
                    primary: Séjour
                    secondary: '{{ states(''sensor.sejour'') }}°C'
                    icon: mdi:thermometer
                    icon_color: |-
                      {% set temp = states('sensor.sejour') | float %}
                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.sejour
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                  - type: custom:mushroom-template-card
                    primary: Fenêtre Cuisine
                    secondary: '{{ states(''sensor.capfencui_temperature'') }}°C'
                    icon: mdi:thermometer
                    icon_color: >-
                      {% set temp = states('sensor.capfencui_temperature') |
                      float %}

                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.capfencui_temperature
                    badge_icon: mdi:battery
                    badge_color: >-
                      {% set battery = states('sensor.capfencui_battery') | int
                      %}

                      {% if battery >= 100 %}
                        seagreen
                      {% elif battery >= 30 %}
                        seagreen
                      {% elif battery >= 20 %}
                        orange
                      {% else %}
                        red
                      {% endif %}
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lux'
              - type: grid
                cards:
                  - type: custom:mushroom-template-card
                    primary: Séjour
                    secondary: '{{ states(''sensor.lux_sejour'') }} lx'
                    icon: mdi:brightness-7
                    icon_color: yellow
                    entity: sensor.lux_sejour
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                  - type: custom:mushroom-template-card
                    primary: Multi
                    secondary: '{{ states(''sensor.esp_multi_capteur_lux'') }} lx'
                    icon: mdi:brightness-7
                    icon_color: yellow
                    entity: sensor.esp_multi_capteur_lux
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-salon'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:mushroom-template-card
                primary: Veilleuse
                icon: mdi:lightbulb-night
                icon_color: orange
                entity: scene.hue_salon_1_veilleuse
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_salon_1_veilleuse
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Stimulation
                icon: mdi:lightbulb-on
                icon_color: blue
                entity: scene.hue_salon_2_stimulation
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_salon_2_stimulation
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Atténué
                icon: mdi:lightbulb-variant
                icon_color: yellow
                entity: scene.hue_salon_3_attenue
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_salon_3_attenue
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Lumineux
                icon: mdi:lightbulb-on-outline
                icon_color: white
                entity: scene.hue_salon_4_lumineux
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_salon_4_lumineux
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-sam'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:mushroom-template-card
                primary: Veilleuse
                icon: mdi:lightbulb-night
                icon_color: orange
                entity: scene.hue_sam_1_veilleuse
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sam_1_veilleuse
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Stimulation
                icon: mdi:lightbulb-on
                icon_color: blue
                entity: scene.hue_sam_2_stimulation
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sam_2_stimulation
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Atténué
                icon: mdi:lightbulb-variant
                icon_color: yellow
                entity: scene.hue_sam_3_attenue
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sam_3_attenue
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Lumineux
                icon: mdi:lightbulb-on-outline
                icon_color: white
                entity: scene.hue_sam_4_lumineux
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sam_4_lumineux
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
      - type: grid
        cards: []
        columns: 2
        visibility:
          - condition: state
            entity: climate.therm_sejour
            state: heat
    type: sections
    max_columns: 3
    cards: []
    dense_section_placement: false
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/d0a8ce4fe354f31e2e67458deab93a51/original
    path: sejour
    subview: true
  - title: Cuisine
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_cuisine_presence
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        color: ''
        entity: binary_sensor.esp_cuisine_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_cuisine'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_cuisine') %}  
                {% if state >= '23' %}
                  red
                {% elif state >= '19' %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.temperature_cuisine
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.esp_cuisine_lux
        color: ''
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
        color: ''
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
                {% if state > 23 %}
                  red
                {% elif state > 19 %}
                  seagreen
                {% else %}
                  blue
                {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
        color: ''
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/accueil
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /dashboard-salon/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  mdi:server
                {% else %}
                  mdi:server-off
                {% endif %} 
        color: |-
          {% set state = states('update.home_assistant_core_update') %}  
                {% if state == 'on' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: update.home_assistant_core_update
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/baie-info
      - type: custom:mushroom-template-badge
        content: ''
        icon: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}

          {% if partout_playing %}
            m3of:queue-music
          {% elif kodi_playing %}
            mdi:kodi
          {% elif plex_playing %}
            mdi:plex
          {% else %}
            mdi:multimedia
          {% endif %}
        color: >
          {% set kodi_playing = states('media_player.kodi_salon') == 'playing'
          or states('media_player.kodi_chambre') == 'playing' %}

          {% set plex_playing =
          states('media_player.plex_plexkodiconnect_kodi_salon') == 'playing' or
          states('media_player.plex_plexkodiconnect_kodi_chambre') == 'playing'
          %}

          {% set partout_playing = states('media_player.partout_2') == 'playing'
          %}

          {% if partout_playing or kodi_playing or plex_playing %}
            seagreen
          {% else %}
            gray
          {% endif %}
        tap_action:
          action: navigate
          navigation_path: /dashboard-salon/multimedia
      - type: custom:mushroom-template-badge
        icon: mdi:cat
        color: >-
          {% set state = states('binary_sensor.litiere_bac_a_dechets_plein')
          %}  
            {% if state == 'on' %}
              red
            {% else %}
              seagreen
            {% endif %}
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/petscales-v3
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center;
                  align-items: center;
                  text-align: center;
                  --ha-card-border-radius: 150px;
                }
          - type: custom:mushroom-template-card
            primary: Minuteur
            secondary: '{{ states(''sensor.echo_show_cuisine_next_timer'') }}'
            icon: mdi:timer
            icon_color: orange
            entity: sensor.echo_show_cuisine_next_timer
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px;
                  background: rgba(255, 255, 255, 0.1) !important;
                  backdrop-filter: blur(10px) !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                }
            visibility:
              - condition: state
                entity: sensor.echo_show_cuisine_next_timer
                state_not: unknown
        column_span: 3
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_window_card
                variables:
                  - name: Cuisine
                  - entity: binary_sensor.ouvfenetcuis_contact
                  - battery_entity: sensor.ouvfenetcuis_battery
            title: Fenêtres
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_door_card
                variables:
                  - name: Frigo
                  - entity: binary_sensor.ouvportfrig_contact
                  - battery_entity: sensor.ouvportfrig_battery
                  - icon_open: mdi:fridge-industrial
                  - icon_closed: mdi:fridge-industrial
              - type: custom:decluttering-card
                template: mushroom_door_card
                variables:
                  - name: Congel
                  - entity: binary_sensor.ouvportfrig_contact
                  - battery_entity: sensor.ouvportfrig_battery
                  - icon_open: mdi:fridge-industrial
                  - icon_closed: mdi:fridge-industrial
              - type: custom:decluttering-card
                template: mushroom_door_card
                variables:
                  - name: Petit congel
                  - entity: binary_sensor.ouvportfrig_contact
                  - battery_entity: sensor.ouvportfrig_battery
                  - icon_open: mdi:fridge-industrial
                  - icon_closed: mdi:fridge-industrial
            title: Portes
            columns: 2
        columns: 2
      - type: grid
        cards:
          - type: custom:mini-media-player
            entity: media_player.spotifyplus_gael
            artwork: full-cover
            artwork_border: true
            power_color: true
            show_source: true
            group: false
            source: full
            info: scroll
            hide:
              power: false
              repeat: false
              runtime: false
              shuffle: false
              source: false
              volume: false
            sound_mode: icon
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 20px;
                }
            visibility:
              - condition: state
                entity: media_player.spotifyplus_gael
                state: playing
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-light-card
                entity: light.hue_cuisine
                name: Cuisine
                show_brightness_control: true
                show_color_temp_control: true
                tap_action:
                  action: navigate
                  navigation_path: '#scene-cuisine'
                use_light_color: true
                collapsible_controls: true
                double_tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-light-card
                entity: light.ledplancui_cct
                name: Plan de travail
                show_brightness_control: true
                show_color_temp_control: true
                use_light_color: true
                collapsible_controls: true
                double_tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
            title: Lumières
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_cover_card
                variables:
                  - name: Cuisine
                  - entity: cover.volcui
            title: Volets
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Horloge
                secondary: '{{ states(''sensor.awtrix_ulanzi_current_app'') }}'
                icon: mdi:clock-digital
                icon_color: |-
                  {% if is_state('light.awtrix_ulanzi_matrix', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: light.awtrix_ulanzi_matrix
                tap_action:
                  action: toggle
                multiline_secondary: false
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('light.awtrix_ulanzi_matrix', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('light.awtrix_ulanzi_matrix', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('light.awtrix_ulanzi_matrix') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Café
                secondary: >-
                  {{ 'Allumée' if is_state('switch.priscafe', 'on') else
                  'Éteinte' }}
                icon: m3rf:coffee
                icon_color: |-
                  {% if is_state('switch.priscafe', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: switch.priscafe
                tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('switch.priscafe', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('switch.priscafe', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('switch.priscafe') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                       animation: pulse 2s infinite;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
                    @keyframes pulse {
                      0%, 100% { color: seagreen !important; }
                      50% { color: red !important; }
                    }
              - type: custom:mushroom-template-card
                primary: VA Cuisine
                secondary: >-
                  {{ states('assist_satellite.esp_va_cuisine_satellite_assist')
                  }}
                icon: mdi:account-voice
                icon_color: |-
                  {% if is_state('light.esp_va_cuisine_esp_va_cuisine', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: light.esp_va_cuisine_esp_va_cuisine
                tap_action:
                  action: assist
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('assist_satellite.esp_va_cuisine_satellite_assist', 'idle') %} var(--primary-text-color) {% else %} seagreen {% endif %};
                      --card-secondary-color: {% if is_state('assist_satellite.esp_va_cuisine_satellite_assist', 'idle') %} var(--secondary-text-color) {% else %} seagreen {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('assist_satellite.esp_va_cuisine_satellite_assist') %}
                     {% if state == 'idle' %}
                       color: grey !important;
                     {% else %}
                       color: seagreen !important;
                     {% endif %}  
                    }
              - type: custom:mushroom-template-card
                primary: Suckbot
                secondary: '{{ states(''vacuum.rockrobock'') | title }}'
                icon: mdi:robot-vacuum
                icon_color: |-
                  {% if is_state('vacuum.rockrobock', 'cleaning') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: vacuum.rockrobock
                tap_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('vacuum.rockrobock', 'cleaning') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('vacuum.rockrobock', 'cleaning') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('vacuum.rockrobock') %}
                     {% if state == 'cleaning' %}
                       color: seagreen !important;
                       animation: spin 2s linear infinite;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
                    @keyframes spin {
                      from { transform: rotate(0deg); }
                      to { transform: rotate(360deg); }
                    }
            title: Autres
            columns: 2
        columns: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Eau
                secondary: >-
                  {{ states('sensor.esp_pet_scales_eau') }}% - {{
                  states('sensor.esp_pet_scales_eau_poids_gamelle') }}g
                icon: mdi:fountain
                icon_color: |-
                  {% set level = states('sensor.esp_pet_scales_eau') | float %}
                  {% if level > 30 %}
                    mediumslateblue
                  {% elif level > 15 %}
                    goldenrod
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.esp_pet_scales_eau
                tap_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: linear-gradient(to right, 
                        {% set level = states('sensor.esp_pet_scales_eau') | float %}
                        {% if level > 30 %}mediumslateblue{% elif level > 15 %}goldenrod{% else %}red{% endif %} 0%, 
                        {% if level > 30 %}mediumslateblue{% elif level > 15 %}goldenrod{% else %}red{% endif %} {{ level }}%,
                        rgba(255, 255, 255, 0.1) {{ level }}%,
                        rgba(255, 255, 255, 0.1) 100%) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-template-card
                primary: Croquettes
                secondary: >-
                  {{ states('sensor.esp_pet_scales_croquettes') }}% - {{
                  states('number.pet_feeder_portion_weight') }}g/portion
                icon: mdi:food-drumstick
                icon_color: >-
                  {% set level = states('sensor.esp_pet_scales_croquettes') |
                  float %}

                  {% if level > 30 %}
                    maroon
                  {% elif level > 15 %}
                    goldenrod
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.esp_pet_scales_croquettes
                tap_action:
                  action: perform-action
                  perform_action: select.select_option
                  target:
                    entity_id: select.pet_feeder_feed
                  data:
                    option: START
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: linear-gradient(to right, 
                        {% set level = states('sensor.esp_pet_scales_croquettes') | float %}
                        {% if level > 30 %}maroon{% elif level > 15 %}goldenrod{% else %}red{% endif %} 0%, 
                        {% if level > 30 %}maroon{% elif level > 15 %}goldenrod{% else %}red{% endif %} {{ level }}%,
                        rgba(255, 255, 255, 0.1) {{ level }}%,
                        rgba(255, 255, 255, 0.1) 100%) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-template-card
                primary: Litière
                secondary: >-
                  {{ states('sensor.litiere_niveau_litiere') }}% - {{
                  states('sensor.litiere_poids_litiere') }}g
                icon: phu:litter-robot
                icon_color: >-
                  {% set level = states('sensor.litiere_niveau_litiere') | float
                  %}

                  {% if level > 30 %}
                    brown
                  {% elif level > 15 %}
                    goldenrod
                  {% else %}
                    red
                  {% endif %}
                entity: sensor.litiere_niveau_litiere
                tap_action:
                  action: navigate
                  navigation_path: >-
                    http://192.168.1.184:8123/config/devices/device/1f094f2e16ed9ff2baf7b11b56127144
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: linear-gradient(to right, 
                        {% set level = states('sensor.litiere_niveau_litiere') | float %}
                        {% if level > 30 %}brown{% elif level > 15 %}goldenrod{% else %}red{% endif %} 0%, 
                        {% if level > 30 %}brown{% elif level > 15 %}goldenrod{% else %}red{% endif %} {{ level }}%,
                        rgba(255, 255, 255, 0.1) {{ level }}%,
                        rgba(255, 255, 255, 0.1) 100%) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-template-card
                primary: Princesse
                secondary: >-
                  {{ states('sensor.princesse_derniere_mesure_de_poids') }}g -
                  {{ states('sensor.princesse_duree_derniere_utilisation') }}
                icon: mdi:cat
                icon_color: purple
                entity: sensor.princesse_derniere_mesure_de_poids
                tap_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
            title: Princesse
            columns: 2
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-cuisine'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:mushroom-template-card
                primary: Veilleuse
                icon: mdi:lightbulb-night
                icon_color: orange
                entity: scene.hue_cuisine_1_veilleuse
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_cuisine_1_veilleuse
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Stimulation
                icon: mdi:lightbulb-on
                icon_color: blue
                entity: scene.hue_cuisine_2_stimulation
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_cuisine_2_stimulation
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Atténué
                icon: mdi:lightbulb-variant
                icon_color: yellow
                entity: scene.hue_cuisine_3_attenue
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_cuisine_3_attenue
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Lumineux
                icon: mdi:lightbulb-on-outline
                icon_color: white
                entity: scene.hue_cuisine_4_lumineux
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_cuisine_4_lumineux
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature'
                show_header: false
                close_on_click: true
              - type: custom:mushroom-template-card
                primary: Température Frigo
                secondary: '{{ states(''sensor.capetalon_temperature'') }}°C'
                icon: mdi:thermometer
                icon_color: >-
                  {% set temp = states('sensor.capetalon_temperature') | float
                  %}

                  {% if temp >= 9 %}
                    red
                  {% elif temp >= 2 %}
                    seagreen
                  {% else %}
                    blue
                  {% endif %}
                entity: sensor.capetalon_temperature
                badge_icon: mdi:battery
                badge_color: |-
                  {% set battery = states('sensor.capetalon_battery') | int %}
                  {% if battery >= 100 %}
                    seagreen
                  {% elif battery >= 30 %}
                    seagreen
                  {% elif battery >= 20 %}
                    orange
                  {% else %}
                    red
                  {% endif %}
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
    type: sections
    max_columns: 3
    cards: []
    dense_section_placement: false
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/edb06720963981d9753feb01e18b7692/original
    path: cuisine
    subview: true
  - type: sections
    max_columns: 4
    title: Chambre
    path: chambre
    subview: true
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/42b2c391fc6fa00e0c293b0b336b7cf6/original
    sections:
      - type: grid
        cards:
          - type: heading
            heading: Nouvelle section
    badges:
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.esp_chambre_presence
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: binary_sensor.esp_chambre_presence
        card_mod:
          style: |
            ha-card {
              --ha-card-border-radius: 50% !important;
              width: 50px !important;
              height: 50px !important;
              background: {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} rgba(46, 125, 50, 0.15) {% else %} rgba(128, 128, 128, 0.1) {% endif %} !important;
              backdrop-filter: blur(10px) !important;
              border: 2px solid {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} seagreen {% else %} rgba(128, 128, 128, 0.3) {% endif %} !important;
              box-shadow: {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} 0 0 20px rgba(46, 125, 50, 0.3) {% else %} none {% endif %} !important;
              transition: all 0.3s ease !important;
              padding: 0 !important;
              display: flex !important;
              align-items: center !important;
              justify-content: center !important;
            }
            ha-card .icon {
              color: {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} seagreen {% else %} grey {% endif %} !important;
              width: 24px !important;
              height: 24px !important;
            }
            ha-card ha-state-icon {
              color: {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} seagreen {% else %} grey {% endif %} !important;
              --mdc-icon-size: 24px !important;
            }
            ha-card:hover {
              transform: scale(1.05) !important;
              box-shadow: {% if is_state('binary_sensor.esp_chambre_presence', 'on') %} 0 0 25px rgba(46, 125, 50, 0.5) {% else %} 0 0 10px rgba(128, 128, 128, 0.3) {% endif %} !important;
            }
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
  - type: sections
    max_columns: 3
    title: Salle de Bain
    path: sdb
    subview: true
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/937d57973022578603eb046c5fa022db/original
    badges:
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('binary_sensor.esp_sdb_movement') %}  
          {% if state == 'on' %}
            mdi:motion-sensor
          {% else %}
            mdi:motion-sensor-off
          {% endif %}
        color: |-
          {% set state = states('binary_sensor.esp_sdb_movement') %}  
          {% if state == 'on' %}
            seagreen
          {% else %}
            gray
          {% endif %}
        entity: binary_sensor.esp_sdb_movement
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.temperature_sdb'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.temperature_sdb') %}  
          {% if state >= '23' %}
            red
          {% elif state >= '19' %}
            seagreen
          {% else %}
            blue
          {% endif %}
        entity: sensor.temperature_sdb
        tap_action:
          action: navigate
          navigation_path: '#temperature'
      - type: custom:mushroom-template-badge
        content: '{{ states(''sensor.humiditee_sdb'') }} %'
        icon: m3r:humidity-percentage
        color: blue
        entity: sensor.humiditee_sdb
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: sensor.lux_sdb
        icon: mdi:brightness-7
        tap_action:
          action: navigate
          navigation_path: '#lux'
      - type: entity
        show_name: false
        show_state: true
        show_icon: true
        entity: weather.pompey
      - type: custom:mushroom-template-badge
        content: '{{states(''sensor.pompey_temperature'') }}°C'
        icon: mdi:thermometer
        color: |-
          {% set state = states('sensor.pompey_temperature') | float %}  
          {% if state > 23 %}
            red
          {% elif state > 19 %}
            seagreen
          {% else %}
            blue
          {% endif %}
        entity: sensor.pompey_temperature
        tap_action:
          action: more-info
      - type: entity
        show_name: false
        show_state: false
        show_icon: true
        entity: sun.sun
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: person.canabang
          - state_on: home
          - icon_on: mdi:home-outline
          - icon_off: mdi:home-off-outline
          - navigation_path: /salon-mushroom/accueil
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /salon-mushroom/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: update.home_assistant_core_update
          - state_on: 'on'
          - icon_on: mdi:server
          - icon_off: mdi:server-off
          - navigation_path: /dashboard-salon/baie-info
      - type: custom:decluttering-card
        template: mushroom_multimedia_badge
        variables:
          - navigation_path: /dashboard-salon/multimedia
      - type: custom:decluttering-card
        template: mushroom_litiere_badge
        variables:
          - navigation_path: /salon-mushroom/petscales-v3
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-empty-card
          - type: custom:mushroom-empty-card
          - type: custom:digital-clock
            dateFormat:
              weekday: long
              day: 2-digit
              month: long
            timeFormat:
              hour: 2-digit
              minute: 2-digit
            card_mod:
              style: |
                ha-card {
                  position: relative;
                  overflow: hidden;
                  background: rgb(40, 40, 40);
                  height: 120px;
                  font-size: 19px;
                  display: flex;
                  flex-direction: column;
                  justify-content: center;
                  align-items: center;
                  text-align: center;
                  --ha-card-border-radius: 150px;
                }
        column_span: 3
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_window_card
                variables:
                  - name: Salle de Bain
                  - entity: binary_sensor.ouvfenetsdb_contact
                  - battery_entity: sensor.ouvfenetsdb_battery
            columns: 2
            title: Fenêtres
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_door_card
                variables:
                  - name: Salle de Bain
                  - entity: binary_sensor.ouvportsdb_contact
                  - battery_entity: sensor.ouvportsdb_battery
            columns: 2
            title: Porte
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-light-card
                entity: light.hue_sdb
                name: Salle de Bain
                show_brightness_control: true
                show_color_temp_control: true
                tap_action:
                  action: navigate
                  navigation_path: '#scene-sdb'
                use_light_color: true
                collapsible_controls: true
                double_tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
            title: Lumières
            columns: 2
          - square: false
            type: grid
            cards:
              - type: custom:decluttering-card
                template: mushroom_cover_card
                variables:
                  - name: SdB
                  - entity: cover.volsdb
            columns: 2
            title: Volets
        columns: 2
      - type: grid
        cards:
          - type: media-control
            entity: media_player.echo_sdb
            visibility:
              - condition: state
                entity: media_player.echo_sdb
                state: playing
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px;
                  background: rgba(255, 255, 255, 0.1) !important;
                  backdrop-filter: blur(10px) !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                }
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-template-card
                primary: Machine à Laver
                secondary: >-
                  {{ 'Allumée' if is_state('switch.prismal', 'on') else
                  'Éteinte' }} {% if is_state('switch.prismal', 'on') %} - {{
                  states('sensor.prismal_power') }}W{% endif %}
                icon: mdi:washing-machine
                icon_color: |-
                  {% if is_state('switch.prismal', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: switch.prismal
                tap_action:
                  action: toggle
                badge_icon: |-
                  {% if states('sensor.prismal_power') | float(0) > 0 %}
                    mdi:flash
                  {% else %}
                    mdi:flash-off
                  {% endif %}
                badge_color: |-
                  {% if states('sensor.prismal_power') | float(0) > 0 %}
                    orange
                  {% else %}
                    grey
                  {% endif %}
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('switch.prismal', 'on') %} seagreen {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('switch.prismal', 'on') %} seagreen {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('switch.prismal') %}
                     {% if state == 'on' %}
                       color: seagreen !important;
                       {% if states('sensor.prismal_power') | float(0) > 0 %}
                         animation: spin 2s linear infinite;
                       {% endif %}
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
                    @keyframes spin {
                      from { transform: rotate(0deg); }
                      to { transform: rotate(360deg); }
                    }
              - type: custom:mushroom-template-card
                primary: VA Salle de Bain
                secondary: '{{ states(''assist_satellite.esp_va_sdb_satellite_assist'') }}'
                icon: mdi:account-voice
                icon_color: |-
                  {% if is_state('light.esp_va_sdb_esp_va_sdb', 'on') %}
                    seagreen
                  {% else %}
                    grey
                  {% endif %}
                entity: light.esp_va_sdb_esp_va_sdb
                tap_action:
                  action: assist
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('assist_satellite.esp_va_sdb_satellite_assist', 'idle') %} var(--primary-text-color) {% else %} seagreen {% endif %};
                      --card-secondary-color: {% if is_state('assist_satellite.esp_va_sdb_satellite_assist', 'idle') %} var(--secondary-text-color) {% else %} seagreen {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('assist_satellite.esp_va_sdb_satellite_assist') %}
                     {% if state == 'idle' %}
                       color: grey !important;
                     {% else %}
                       color: seagreen !important;
                     {% endif %}  
                    }
            title: Autres
            columns: 2
        columns: 2
      - type: grid
        cards:
          - square: false
            type: grid
            cards:
              - type: custom:mushroom-climate-card
                entity: climate.therm_sdb
                show_temperature_control: true
                hvac_modes:
                  - heat
                  - 'off'
                fill_container: false
                tap_action:
                  action: more-info
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
              - type: custom:mushroom-template-card
                primary: Radiateur SdB
                secondary: >-
                  {{ 'Éteint' if is_state('switch.radsdb_l1', 'on') else
                  'Allumé' }}
                icon: |-
                  {% if is_state('switch.radsdb_l1', 'off') %}
                    mdi:radiator
                  {% else %}
                    mdi:radiator-off
                  {% endif %}
                icon_color: |-
                  {% if is_state('switch.radsdb_l1', 'off') %}
                    red
                  {% else %}
                    grey
                  {% endif %}
                entity: switch.radsdb_l1
                tap_action:
                  action: toggle
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 25px;
                      --card-primary-color: {% if is_state('switch.radsdb_l1', 'off') %} red {% else %} var(--primary-text-color) {% endif %};
                      --card-secondary-color: {% if is_state('switch.radsdb_l1', 'off') %} red {% else %} var(--secondary-text-color) {% endif %};
                      background: rgba(255, 255, 255, 0.1) !important;
                      backdrop-filter: blur(10px) !important;
                      border: 1px solid rgba(255, 255, 255, 0.2) !important;
                      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                    }
                    ha-state-icon {
                     {% set state = states('switch.radsdb_l1') %}
                     {% if state == 'off' %}
                       color: red !important;
                     {% else %}
                       color: grey !important;
                     {% endif %}  
                    }
            title: Thermostat
            columns: 2
        columns: 2
        visibility:
          - condition: state
            entity: climate.therm_sdb
            state: heat
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#temperature'
                show_header: false
                close_on_click: true
              - type: grid
                cards:
                  - type: custom:mushroom-template-card
                    primary: SdB
                    secondary: '{{ states(''sensor.temperature_sdb'') }}°C'
                    icon: mdi:thermometer
                    icon_color: |-
                      {% set temp = states('sensor.temperature_sdb') | float %}
                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.temperature_sdb
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                  - type: custom:mushroom-template-card
                    primary: Fenêtre
                    secondary: '{{ states(''sensor.capfensdb_temperature'') }}°C'
                    icon: mdi:thermometer
                    icon_color: >-
                      {% set temp = states('sensor.capfensdb_temperature') |
                      float %}

                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.capfensdb_temperature
                    badge_icon: mdi:battery
                    badge_color: >-
                      {% set battery = states('sensor.capfensdb_battery') | int
                      %}

                      {% if battery >= 100 %}
                        seagreen
                      {% elif battery >= 30 %}
                        seagreen
                      {% elif battery >= 20 %}
                        orange
                      {% else %}
                        red
                      {% endif %}
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                  - type: custom:mushroom-template-card
                    primary: Porte
                    secondary: '{{ states(''sensor.capsdb_temperature'') }}°C'
                    icon: mdi:thermometer
                    icon_color: >-
                      {% set temp = states('sensor.capsdb_temperature') | float
                      %}

                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.capsdb_temperature
                    badge_icon: mdi:battery
                    badge_color: |-
                      {% set battery = states('sensor.capsdb_battery') | int %}
                      {% if battery >= 100 %}
                        seagreen
                      {% elif battery >= 30 %}
                        seagreen
                      {% elif battery >= 20 %}
                        orange
                      {% else %}
                        red
                      {% endif %}
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                  - type: custom:mushroom-template-card
                    primary: ESP
                    secondary: '{{ states(''sensor.esp_sdb_temperature'') }}°C'
                    icon: mdi:thermometer
                    icon_color: >-
                      {% set temp = states('sensor.esp_sdb_temperature') | float
                      %}

                      {% if temp >= 23 %}
                        red
                      {% elif temp >= 19 %}
                        seagreen
                      {% else %}
                        blue
                      {% endif %}
                    entity: sensor.esp_sdb_temperature
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                columns: 2
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#lux'
                show_header: false
                close_on_click: true
              - type: grid
                cards:
                  - type: custom:mushroom-template-card
                    primary: Salle de Bain
                    secondary: '{{ states(''sensor.lux_sdb'') }} lx'
                    icon: mdi:brightness-7
                    icon_color: yellow
                    entity: sensor.lux_sdb
                    card_mod:
                      style: |
                        ha-card {
                          --ha-card-border-radius: 20px;
                        }
                columns: 1
          - type: vertical-stack
            cards:
              - type: custom:bubble-card
                card_type: pop-up
                hash: '#scene-sdb'
                show_header: false
                close_on_click: true
                margin_top_desktop: calc(100vh - 400px)
              - type: custom:mushroom-template-card
                primary: Veilleuse
                icon: mdi:lightbulb-night
                icon_color: orange
                entity: scene.hue_sdb_1_veilleuse
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sdb_1_veilleuse
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Stimulation
                icon: mdi:lightbulb-on
                icon_color: blue
                entity: scene.hue_sdb_2_stimulation
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sdb_2_stimulation
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Atténué
                icon: mdi:lightbulb-variant
                icon_color: yellow
                entity: scene.hue_sdb_3_attenue
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sdb_3_attenue
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
              - type: custom:mushroom-template-card
                primary: Lumineux
                icon: mdi:lightbulb-on-outline
                icon_color: white
                entity: scene.hue_sdb_4_lumineux
                tap_action:
                  action: call-service
                  service: scene.turn_on
                  target:
                    entity_id: scene.hue_sdb_4_lumineux
                card_mod:
                  style: |
                    ha-card {
                      --ha-card-border-radius: 20px;
                    }
    cards: []
  - type: sections
    max_columns: 4
    title: Disques_dur
    path: disques-dur
    icon: m3s:hard-drive
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: repeat
      attachment: scroll
      image: /api/image/serve/44ac1361b10128d8e04aeeec676b31f6/original
    sections:
      - type: grid
        cards:
          - type: custom:mushroom-template-card
            primary: NAS-OMV
            secondary: ''
            icon: phu:nas-v2
            badge_icon: >-
              {% set cpu = states('sensor.omv_system_cpu_load_2') | float(0) %} 
              {% set ram = states('sensor.omv_system_memory') | float(0) %}  {%
              if cpu >= 80 or ram >= 90 %}
                mdi:alert-circle
              {% elif cpu >= 60 or ram >= 75 %}
                mdi:alert
              {% else %}
                mdi:check-circle
              {% endif %}
            badge_color: >-
              {% set cpu = states('sensor.omv_system_cpu_load_2') | float(0) %} 
              {% set ram = states('sensor.omv_system_memory') | float(0) %}  {%
              if cpu >= 80 or ram >= 90 %}
                red
              {% elif cpu >= 60 or ram >= 75 %}
                orange
              {% else %}
                green
              {% endif %}
            color: blue
            features_position: bottom
            grid_options:
              columns: 12
              rows: 1
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px !important;
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border-radius: 20px !important;
                  border: 1px solid rgba(255, 255, 255, 0.1) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2) !important;
                  transition: all 0.3s ease !important;
                  
                  /* Variables CSS pour les couleurs */
                  --cpu-color: {% set cpu = states('sensor.omv_system_cpu_load_2') | float(0) %}
                               {% if cpu >= 80 %}#ff4444{% elif cpu >= 60 %}#ff8800{% elif cpu >= 40 %}#ffaa00{% else %}#44aa44{% endif %};
                  --ram-color: {% set ram = states('sensor.omv_system_memory') | float(0) %}
                               {% if ram >= 90 %}#ff4444{% elif ram >= 75 %}#ff8800{% elif ram >= 50 %}#ffaa00{% else %}#44aa44{% endif %};
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
                .container {
                  position: relative !important;
                }
                /* CPU - Premier élément */
                .container::before {
                  content: "🔲 {% set cpu = states('sensor.omv_system_cpu_load_2') | float(0) %}{{ cpu | round(1) }}%";
                  position: absolute !important;
                  right: 140px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--cpu-color) !important;
                }
                /* RAM - Deuxième élément */
                .container::after {
                  content: "💾 {% set ram = states('sensor.omv_system_memory') | float(0) %}{{ ram | round(1) }}%";
                  position: absolute !important;
                  right: 60px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--ram-color) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 12T Séries
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_12t') | float | round(1)
              }}% • {{
                (states('sensor.system_monitor_espace_libre_share_12t') | float / 1024) | round(1)
              }} To / {{
                ((states('sensor.system_monitor_espace_utilise_share_12t') | float + states('sensor.system_monitor_espace_libre_share_12t') | float) / 1024) | round(1)
              }} To
              🌡️ {{ states('sensor.omv_disk_5') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_12t') |
              float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp = states('sensor.omv_disk_5') | int %} {% if temp > 60
              %}
                mdi:thermometer-alert
              {% elif temp > 50 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp = states('sensor.omv_disk_5') | int %} {% if temp > 60
              %}
                red
              {% elif temp > 50 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_12t
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_12t') |
              float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 2T Sata
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_camera') | float | round(1)
              }}% • {{
                (states('sensor.system_monitor_espace_libre_share_camera') | float / 1024) | round(1)
              }} To / {{
                ((states('sensor.system_monitor_espace_utilise_share_camera') | float + states('sensor.system_monitor_espace_libre_share_camera') | float) / 1024) | round(1)
              }} To
              🌡️ {{ states('sensor.omv_disk_4') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_camera')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp = states('sensor.omv_disk_4') | int %} {% if temp > 60
              %}
                mdi:thermometer-alert
              {% elif temp > 50 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp = states('sensor.omv_disk_4') | int %} {% if temp > 60
              %}
                red
              {% elif temp > 50 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_camera
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_camera')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 12T Films
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_12t_02') | float | round(1)
              }}% • {{
                (states('sensor.system_monitor_espace_libre_share_12t_02') | float / 1024) | round(1)
              }} To / {{
                ((states('sensor.system_monitor_espace_utilise_share_12t_02') | float + states('sensor.system_monitor_espace_libre_share_12t_02') | float) / 1024) | round(1)
              }} To
              🌡️ {{ states('sensor.omv_disk_2') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_12t_02')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp = states('sensor.omv_disk_2') | int %} {% if temp > 60
              %}
                mdi:thermometer-alert
              {% elif temp > 50 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp = states('sensor.omv_disk_2') | int %} {% if temp > 60
              %}
                red
              {% elif temp > 50 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_12t_02
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_12t_02')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 2T usb
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_2t_usb') | float | round(1)
              }}% • {{
                (states('sensor.system_monitor_espace_libre_share_2t_usb') | float / 1024) | round(1)
              }} To / {{
                ((states('sensor.system_monitor_espace_utilise_share_2t_usb') | float + states('sensor.system_monitor_espace_libre_share_2t_usb') | float) / 1024) | round(1)
              }} To
              🌡️ {{ states('sensor.omv_disk_7') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_2t_usb')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp = states('sensor.omv_disk_7') | int %} {% if temp > 60
              %}
                mdi:thermometer-alert
              {% elif temp > 50 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp = states('sensor.omv_disk_7') | int %} {% if temp > 60
              %}
                red
              {% elif temp > 50 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_2t_usb
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_2t_usb')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 250Go
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_250go') | float | round(1)
              }}% • {{
                states('sensor.system_monitor_espace_libre_share_250go') | float | round(1)
              }} Go / {{
                (states('sensor.system_monitor_espace_utilise_share_250go') | float + states('sensor.system_monitor_espace_libre_share_250go') | float) | round(1)
              }} Go
              🌡️ {{ states('sensor.omv_disk_3') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_250go')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp = states('sensor.omv_disk_3') | int %} {% if temp > 50
              %}
                mdi:thermometer-alert
              {% elif temp > 40 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp = states('sensor.omv_disk_3') | int %} {% if temp > 50
              %}
                red
              {% elif temp > 40 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_250go
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_250go')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque 128Go
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_128go') | float | round(1)
              }}% • {{
                states('sensor.system_monitor_espace_libre_share_128go') | float | round(1)
              }} Go / {{
                (states('sensor.system_monitor_espace_utilise_share_128go') | float + states('sensor.system_monitor_espace_libre_share_128go') | float) | round(1)
              }} Go
              🌡️ {{ states('sensor.omv_disk_6') | int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_128go')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: |-
              {% set temp = states('sensor.omv_disk_6') | int %}
              {% if temp > 50 %}
                mdi:thermometer-alert
              {% elif temp > 40 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: |-
              {% set temp = states('sensor.omv_disk_6') | int %}
              {% if temp > 50 %}
                red
              {% elif temp > 40 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_128go
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_128go')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
      - type: grid
        cards:
          - type: custom:mushroom-template-card
            primary: Proxmox
            secondary: ''
            icon: whh:servers
            badge_icon: >-
              {% set cpu = states('sensor.node_proxmox_cpu_used') | float(0) %} 
              {% set ram = states('sensor.node_proxmox_memory_used_percentage')
              | float(0) %}  {% if cpu >= 80 or ram >= 90 %}
                mdi:alert-circle
              {% elif cpu >= 60 or ram >= 75 %}
                mdi:alert
              {% else %}
                mdi:check-circle
              {% endif %}
            badge_color: >-
              {% set cpu = states('sensor.node_proxmox_cpu_used') | float(0) %} 
              {% set ram = states('sensor.node_proxmox_memory_used_percentage')
              | float(0) %}  {% if cpu >= 80 or ram >= 90 %}
                red
              {% elif cpu >= 60 or ram >= 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            color: blue
            features_position: bottom
            grid_options:
              columns: 12
              rows: 1
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px !important;
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border-radius: 20px !important;
                  border: 1px solid rgba(255, 255, 255, 0.1) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2) !important;
                  transition: all 0.3s ease !important;
                  
                  /* Variables CSS pour les couleurs */
                  --cpu-color: {% set cpu = states('sensor.node_proxmox_cpu_used') | float(0) %}
                               {% if cpu >= 80 %}#ff4444{% elif cpu >= 60 %}#ff8800{% elif cpu >= 40 %}#ffaa00{% else %}#44aa44{% endif %};
                  --ram-color: {% set ram = states('sensor.node_proxmox_memory_used_percentage') | float(0) %}
                               {% if ram >= 90 %}#ff4444{% elif ram >= 75 %}#ff8800{% elif ram >= 50 %}#ffaa00{% else %}#44aa44{% endif %};
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
                .container {
                  position: relative !important;
                }
                /* CPU - Premier élément */
                .container::before {
                  content: "🔲 {% set cpu = states('sensor.node_proxmox_cpu_used') | float(0) %}{{ cpu | round(1) }}%";
                  position: absolute !important;
                  right: 140px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--cpu-color) !important;
                }
                /* RAM - Deuxième élément */
                .container::after {
                  content: "💾 {% set ram = states('sensor.node_proxmox_memory_used_percentage') | float(0) %}{{ ram | round(1) }}%";
                  position: absolute !important;
                  right: 60px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--ram-color) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque Proxmox
            secondary: >-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_proxmoxryzen') | float | round(1)
              }}% • {{
                states('sensor.system_monitor_espace_libre_share_proxmoxryzen') | float | round(1)
              }} Go / {{
                (states('sensor.system_monitor_espace_utilise_share_proxmoxryzen') | float + states('sensor.system_monitor_espace_libre_share_proxmoxryzen') | float) | round(1)
              }} Go

              🌡️ {{ states('sensor.disk_proxmox_ct1000p3pssd8_temperature') |
              int }}°C
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_proxmoxryzen')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp =
              states('sensor.disk_proxmox_ct1000p3pssd8_temperature') | int %}
              {% if temp > 50 %}
                mdi:thermometer-alert
              {% elif temp > 40 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp =
              states('sensor.disk_proxmox_ct1000p3pssd8_temperature') | int %}
              {% if temp > 50 %}
                red
              {% elif temp > 40 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_proxmoxryzen
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_proxmoxryzen')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque Proxmox LVM
            secondary: >-
              {{
                states('sensor.storage_proxmox_local_lvm_disk_used_percentage') | float | round(1)
              }}% • {{
                states('sensor.storage_proxmox_local_lvm_disk_free') | float | round(1)
              }} Go / {{
                (states('sensor.storage_proxmox_local_lvm_disk_used') | float + states('sensor.storage_proxmox_local_lvm_disk_free') | float) | round(1)
              }} Go

              🌡️ {{ states('sensor.disk_proxmox_ct1000p3pssd8_temperature') |
              int }}°C
            icon: >-
              {% set usage =
              states('sensor.storage_proxmox_local_lvm_disk_used_percentage') |
              float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            badge_icon: >-
              {% set temp =
              states('sensor.disk_proxmox_ct1000p3pssd8_temperature') | int %}
              {% if temp > 50 %}
                mdi:thermometer-alert
              {% elif temp > 40 %}
                mdi:thermometer-high
              {% else %}
                mdi:thermometer
              {% endif %}
            badge_color: >-
              {% set temp =
              states('sensor.disk_proxmox_ct1000p3pssd8_temperature') | int %}
              {% if temp > 50 %}
                red
              {% elif temp > 40 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            entity: sensor.storage_proxmox_local_lvm_disk_used_percentage
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.storage_proxmox_local_lvm_disk_used_percentage') |
              float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
          - type: custom:mushroom-template-card
            primary: Dockarr
            secondary: ''
            icon: fa6-brands:docker
            badge_icon: >-
              {% set cpu = states('sensor.qemu_dockarr_108_cpu_used') | float(0)
              %}  {% set ram =
              states('sensor.qemu_dockarr_108_memory_used_percentage') |
              float(0) %}  {% if cpu >= 80 or ram >= 90 %}
                mdi:alert-circle
              {% elif cpu >= 60 or ram >= 75 %}
                mdi:alert
              {% else %}
                mdi:check-circle
              {% endif %}
            badge_color: >-
              {% set cpu = states('sensor.qemu_dockarr_108_cpu_used') | float(0)
              %}  {% set ram =
              states('sensor.qemu_dockarr_108_memory_used_percentage') |
              float(0) %}  {% if cpu >= 80 or ram >= 90 %}
                red
              {% elif cpu >= 60 or ram >= 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            color: blue
            features_position: bottom
            grid_options:
              columns: 12
              rows: 1
            card_mod:
              style: |
                ha-card {
                  --ha-card-border-radius: 25px !important;
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border-radius: 20px !important;
                  border: 1px solid rgba(255, 255, 255, 0.1) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2) !important;
                  transition: all 0.3s ease !important;
                  
                  /* Variables CSS pour les couleurs */
                  --cpu-color: {% set cpu = states('sensor.qemu_dockarr_108_cpu_used') | float(0) %}
                               {% if cpu >= 80 %}#ff4444{% elif cpu >= 60 %}#ff8800{% elif cpu >= 40 %}#ffaa00{% else %}#44aa44{% endif %};
                  --ram-color: {% set ram = states('sensor.qemu_dockarr_108_memory_used_percentage') | float(0) %}
                               {% if ram >= 90 %}#ff4444{% elif ram >= 75 %}#ff8800{% elif ram >= 50 %}#ffaa00{% else %}#44aa44{% endif %};
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
                .container {
                  position: relative !important;
                }
                /* CPU - Premier élément */
                .container::before {
                  content: "🔲 {% set cpu = states('sensor.qemu_dockarr_108_cpu_used') | float(0) %}{{ cpu | round(1) }}%";
                  position: absolute !important;
                  right: 140px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--cpu-color) !important;
                }
                /* RAM - Deuxième élément */
                .container::after {
                  content: "💾 {% set ram = states('sensor.qemu_dockarr_108_memory_used_percentage') | float(0) %}{{ ram | round(1) }}%";
                  position: absolute !important;
                  right: 60px !important;
                  top: 50% !important;
                  transform: translateY(-50%) !important;
                  font-size: 14px !important;
                  font-weight: 500 !important;
                  color: var(--ram-color) !important;
                }
          - type: custom:mushroom-template-card
            primary: Disque Dockarr
            secondary: |-
              {{
                states('sensor.system_monitor_utilisation_du_disque_share_dockarr') | float | round(1)
              }}% • {{
                states('sensor.system_monitor_espace_libre_share_dockarr') | float | round(1)
              }} Go / {{
                (states('sensor.system_monitor_espace_utilise_share_dockarr') | float + states('sensor.system_monitor_espace_libre_share_dockarr') | float) | round(1)
              }} Go
            icon: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_dockarr')
              | float %} {% if usage > 90 %}
                mdi:harddisk-remove
              {% elif usage > 75 %}
                mdi:harddisk-plus
              {% else %}
                mdi:harddisk
              {% endif %}
            entity: sensor.system_monitor_utilisation_du_disque_share_dockarr
            tap_action:
              action: more-info
            multiline_secondary: true
            color: >-
              {% set usage =
              states('sensor.system_monitor_utilisation_du_disque_share_dockarr')
              | float %} {% if usage > 90 %}
                red
              {% elif usage > 75 %}
                orange
              {% else %}
                seagreen
              {% endif %}
            features_position: bottom
            card_mod:
              style: |
                ha-card {
                  background: transparent !important;
                  backdrop-filter: none !important;
                  border: 1px solid rgba(255, 255, 255, 0.2) !important;
                  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3) !important;
                  border-radius: 20px !important;
                  transition: all 0.3s ease !important;
                }
                ha-card:hover {
                  transform: translateY(-2px) !important;
                  box-shadow: 0 12px 40px rgba(0, 0, 0, 0.3) !important;
                }
    cards: []
    badges:
      - type: custom:mushroom-template-badge
        content: ''
        icon: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  mdi:home-outline
                {% else %}
                  mdi:home-off-outline
                {% endif %} 
        color: |-
          {% set state = states('person.canabang') %}  
                {% if state == 'home' %}
                  seagreen
                {% else %}
                  gray
                {% endif %}
        entity: person.canabang
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/accueil
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /dashboard-salon/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
      - type: custom:mushroom-template-badge
        icon: mdi:cat
        color: >-
          {% set state = states('binary_sensor.litiere_bac_a_dechets_plein')
          %}  
            {% if state == 'on' %}
              red
            {% else %}
              seagreen
            {% endif %}
        tap_action:
          action: navigate
          navigation_path: /salon-mushroom/petscales-v3
  - type: sections
    max_columns: 4
    title: petscales v3
    path: petscales-v3
    sections:
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: 🐱 Surveillance Animaux
                subtitle: Eau & Croquettes
              - type: horizontal-stack
                cards:
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-template-card
                        primary: 🐱 Croquettes
                        secondary: >
                          {% set pct =
                          states('sensor.esp_pet_scales_croquettes') | float(0)
                          %} {% set stock_estime =
                          states('input_number.pet_feeder_stock_estime') |
                          float(0) %} {% set conso_moy =
                          states('sensor.consommation_quotidienne_moyenne') |
                          float(0) %} {% set objectif =
                          states('input_number.pet_feeder_target_daily_weight')
                          | float(85) %} {{ stock_estime | round(0) }}g • {{ pct
                          | round(0) }}% •  {% if conso_moy > 0 %}
                            {{ (stock_estime / conso_moy) | round(1) }}j restants
                          {% elif objectif > 0 %}
                            {{ (stock_estime / objectif) | round(1) }}j restants
                          {% else %}
                            ? jours restants
                          {% endif %}
                        icon: mdi:cat
                        icon_color: >
                          {% set pct =
                          states('sensor.esp_pet_scales_croquettes') | float(0)
                          %} {% if pct > 50 %}green {% elif pct > 20 %}orange {%
                          else %}red {% endif %}
                        badge_icon: >
                          {% set ecart = states('sensor.ecart_stock_vs_balance')
                          | float(0) %} {% if ecart > 100 %}mdi:alert-circle {%
                          else %}mdi:check-circle {% endif %}
                        badge_color: >
                          {% set ecart = states('sensor.ecart_stock_vs_balance')
                          | float(0) %} {% if ecart > 100 %}orange {% else
                          %}green {% endif %}
                        tap_action:
                          action: more-info
                          entity: sensor.esp_pet_scales_croquettes
                        card_mod:
                          style: |
                            ha-card {
                              background: linear-gradient(135deg, rgba(255,152,0,0.1) 0%, rgba(0,0,0,0.3) 100%);
                            }
                      - type: gauge
                        entity: sensor.esp_pet_scales_croquettes
                        name: Niveau
                        min: 0
                        max: 100
                        needle: true
                        severity:
                          green: 50
                          yellow: 20
                          red: 0
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: -8px;
                              background: rgba(0,0,0,0.2);
                            }
                  - type: vertical-stack
                    cards:
                      - type: custom:mushroom-template-card
                        primary: 💧 Fontaine à Eau
                        secondary: >
                          {% set pct = states('sensor.esp_pet_scales_eau') |
                          float(0) %} {% set litres =
                          states('sensor.balance_eau_en_litres') | float(0) %}
                          {% set jours = states('sensor.jours_restants_eau') %}
                          {{ litres | round(2) }}L • {{ pct | round(0) }}% {% if
                          jours not in ['unknown', 'unavailable'] %} • {{ jours
                          }}j restants{% endif %}
                        icon: mdi:water-pump
                        icon_color: >
                          {% set pct = states('sensor.esp_pet_scales_eau') |
                          float(0) %} {% if pct > 50 %}blue {% elif pct > 30
                          %}orange {% else %}red {% endif %}
                        badge_icon: >
                          {% set niveau = states('sensor.esp_pet_scales_eau') |
                          float(0) %} {% if niveau < 30 %}mdi:alert-circle {%
                          else %}mdi:check-circle {% endif %}
                        badge_color: >
                          {% set niveau = states('sensor.esp_pet_scales_eau') |
                          float(0) %} {% if niveau < 30 %}red {% else %}blue {%
                          endif %}
                        tap_action:
                          action: more-info
                          entity: sensor.esp_pet_scales_eau
                        card_mod:
                          style: |
                            ha-card {
                              background: linear-gradient(135deg, rgba(33,150,243,0.1) 0%, rgba(0,0,0,0.3) 100%);
                            }
                      - type: gauge
                        entity: sensor.esp_pet_scales_eau
                        name: Niveau
                        min: 0
                        max: 100
                        needle: true
                        severity:
                          green: 50
                          yellow: 30
                          red: 0
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: -8px;
                              background: rgba(0,0,0,0.2);
                            }
                      - type: custom:mushroom-template-card
                        primary: 🧼 Filtre Restant
                        secondary: >
                          {% set jours =
                          states('sensor.eversweet_3_pro_filtre_restant') |
                          int(0) %} {{ jours }} jour(s) restant(s) • {{
                          states('sensor.eversweet_3_pro_eau_purifiee') | int(0)
                          }}L filtrés au total
                        icon: mdi:air-filter
                        icon_color: >
                          {% set jours =
                          states('sensor.eversweet_3_pro_filtre_restant') |
                          int(0) %} {% if jours > 10 %}green {% elif jours > 5
                          %}orange {% else %}red {% endif %}
                        badge_icon: >
                          {% if
                          is_state('binary_sensor.eversweet_3_pro_remplacer_le_filtre',
                          'on') %}mdi:alert-circle {% else %}mdi:check-circle {%
                          endif %}
                        badge_color: >
                          {% if
                          is_state('binary_sensor.eversweet_3_pro_remplacer_le_filtre',
                          'on') %}red {% else %}green {% endif %}
                        tap_action:
                          action: more-info
                          entity: sensor.eversweet_3_pro_filtre_restant
                        card_mod:
                          style: |
                            ha-card {
                              margin-top: 8px;
                            }
                      - type: entities
                        entities:
                          - entity: button.eversweet_3_pro_reset_filter
                            name: 🔄 Réinitialiser Filtre
                        card_mod:
                          style: |
                            ha-card {
                              background: rgba(33,150,243,0.05);
                              margin-top: 8px;
                            }
              - type: conditional
                conditions:
                  - entity: sensor.esp_pet_scales_croquettes
                    state_not: unavailable
                  - condition: numeric_state
                    entity: sensor.esp_pet_scales_croquettes
                    below: 20
                card:
                  type: custom:mushroom-template-card
                  primary: ⚠️ Stock Croquettes Faible
                  secondary: >
                    {% set stock_estime =
                    states('input_number.pet_feeder_stock_estime') | float(0) %}
                    {% set conso_moy =
                    states('sensor.consommation_quotidienne_moyenne') | float(0)
                    %} {% set objectif =
                    states('input_number.pet_feeder_target_daily_weight') |
                    float(85) %} {% if conso_moy > 0 %}
                      Il reste seulement {{ (stock_estime / conso_moy) | round(1) }} jour(s)
                    {% elif objectif > 0 %}
                      Il reste seulement {{ (stock_estime / objectif) | round(1) }} jour(s)
                    {% else %}
                      Niveau critique - Rechargez rapidement
                    {% endif %}
                  icon: mdi:alert
                  icon_color: red
                  tap_action:
                    action: none
                  card_mod:
                    style: |
                      ha-card {
                        background: rgba(244,67,54,0.1);
                        margin-top: 16px;
                      }
              - type: conditional
                conditions:
                  - entity: sensor.esp_pet_scales_eau
                    state_not: unavailable
                  - condition: numeric_state
                    entity: sensor.esp_pet_scales_eau
                    below: 30
                card:
                  type: custom:mushroom-template-card
                  primary: ⚠️ Niveau Eau Bas
                  secondary: Remplir la fontaine rapidement
                  icon: mdi:water-alert
                  icon_color: red
                  tap_action:
                    action: none
                  card_mod:
                    style: |
                      ha-card {
                        background: rgba(244,67,54,0.1);
                        margin-top: 8px;
                      }
              - type: conditional
                conditions:
                  - entity: sensor.ecart_stock_vs_balance
                    state_not: unavailable
                  - condition: numeric_state
                    entity: sensor.ecart_stock_vs_balance
                    above: 100
                card:
                  type: custom:mushroom-template-card
                  primary: ⚠️ Divergence Détectée
                  secondary: >-
                    Écart balance/estimé de {{
                    states('sensor.ecart_stock_vs_balance') }}g
                  icon: mdi:scale-unbalanced
                  icon_color: orange
                  tap_action:
                    action: call-service
                    service: input_boolean.turn_on
                    target:
                      entity_id: input_boolean.pet_feeder_force_sync_balance
                  card_mod:
                    style: |
                      ha-card {
                        background: rgba(255,152,0,0.1);
                        margin-top: 8px;
                      }
              - type: entities
                title: 🚀 Actions Rapides
                entities:
                  - entity: input_boolean.pet_feeder_force_sync_balance
                    name: 🔄 Synchroniser Balance
                  - entity: input_boolean.pet_feeder_manual_refill_trigger
                    name: 📦 Remplissage Manuel
                card_mod:
                  style: |
                    ha-card {
                      background: rgba(76,175,80,0.05);
                      margin-top: 16px;
                    }
              - type: custom:mushroom-chips-card
                chips:
                  - type: template
                    icon: mdi:scale
                    content: >
                      Balance Croquettes: {{
                      states('sensor.esp_pet_scales_croquettes_etat_capteur') |
                      default('N/A') }}
                    icon_color: >
                      {% if
                      states('sensor.esp_pet_scales_croquettes_etat_capteur') ==
                      'OK' %}
                        green
                      {% else %}
                        red
                      {% endif %}
                    tap_action:
                      action: more-info
                      entity: sensor.esp_pet_scales_croquettes_etat_capteur
                  - type: template
                    icon: mdi:water
                    content: >
                      Balance Eau: {{
                      states('sensor.esp_pet_scales_eau_etat_capteur') |
                      default('N/A') }}
                    icon_color: >
                      {% if states('sensor.esp_pet_scales_eau_etat_capteur') ==
                      'OK' %}
                        blue
                      {% else %}
                        red
                      {% endif %}
                    tap_action:
                      action: more-info
                      entity: sensor.esp_pet_scales_eau_etat_capteur
                card_mod:
                  style: |
                    ha-card {
                      margin-top: 16px;
                    }
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: ⚙️ Contrôles & Paramètres
                subtitle: Configuration du système
              - type: entities
                title: 🐱 Paramètres Croquettes
                entities:
                  - entity: input_number.pet_feeder_target_daily_weight
                    name: 🎯 Objectif Quotidien
                  - entity: number.pet_feeder_portion_weight
                    name: ⚖️ Poids par Portion
                  - entity: input_number.pet_feeder_max_capacity
                    name: 🛢️ Capacité Max Réservoir
                  - entity: input_number.pet_feeder_stock_estime
                    name: 📦 Stock Estimé (manuel)
                  - type: section
                    label: Calibration Balance
                  - entity: button.esp_pet_scales_croquettes_calibrer_plein
                    name: 📏 Calibrer Plein
                  - entity: button.esp_pet_scales_croquettes_tare_vide
                    name: 0️⃣ Tare Vide
                card_mod:
                  style: |
                    ha-card {
                      background: rgba(255,152,0,0.05);
                    }
              - type: entities
                title: 💧 Paramètres Eau
                entities:
                  - entity: input_number.pet_water_max_capacity
                    name: 🚰 Capacité Max Fontaine
                  - type: section
                    label: Calibration Balance
                  - entity: button.esp_pet_scales_eau_calibrer_plein
                    name: 📏 Calibrer Plein
                  - entity: button.esp_pet_scales_eau_tare_vide
                    name: 0️⃣ Tare Vide
                card_mod:
                  style: |
                    ha-card {
                      background: rgba(33,150,243,0.05);
                      margin-top: 16px;
                    }
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: 🐱 Santé Princesse
                subtitle: Suivi du poids et litière
              - type: custom:mushroom-template-card
                primary: Poids Actuel
                secondary: >
                  {{ states('sensor.princesse_derniere_mesure_de_poids') |
                  float(0) | round(2) }} kg
                icon: mdi:weight-kilogram
                icon_color: >
                  {% set poids =
                  states('sensor.princesse_derniere_mesure_de_poids') | float(0)
                  %} {% if poids >= 2.0 and poids <= 2.5 %}green {% elif poids
                  >= 1.8 and poids <= 2.8 %}orange {% else %}red {% endif %}
                tap_action:
                  action: more-info
                  entity: sensor.princesse_derniere_mesure_de_poids
                card_mod:
                  style: |
                    ha-card {
                      background: linear-gradient(135deg, rgba(156,39,176,0.1) 0%, rgba(0,0,0,0.3) 100%);
                    }
              - type: custom:mushroom-template-card
                primary: Dernière Utilisation Litière
                secondary: >
                  {% set date =
                  states('sensor.princesse_date_derniere_utilisation') %} {% if
                  date not in ['unknown', 'unavailable'] %}
                    {{ as_timestamp(date) | timestamp_custom('%d/%m/%Y à %H:%M') }}
                    (il y a {{ relative_time(strptime(date, '%Y-%m-%d %H:%M:%S')) }})
                  {% else %}
                    Aucune donnée
                  {% endif %}
                icon: mdi:clock-outline
                icon_color: purple
                tap_action:
                  action: more-info
                  entity: sensor.princesse_date_derniere_utilisation
              - type: custom:mushroom-template-card
                primary: Durée Dernière Utilisation
                secondary: >
                  {{ states('sensor.princesse_duree_derniere_utilisation') |
                  float(0) | round(1) }} min
                icon: mdi:timer-outline
                icon_color: cyan
                tap_action:
                  action: more-info
                  entity: sensor.princesse_duree_derniere_utilisation
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: 📊 Détails & Diagnostic
                subtitle: Statistiques et historique
              - type: custom:mushroom-template-card
                primary: Progression Quotidienne
                secondary: >
                  {% set distribue =
                  states('input_number.pet_feeder_daily_consumption_counter') |
                  float(0) %} {% set objectif =
                  states('input_number.pet_feeder_target_daily_weight') |
                  float(85) %} {% set pct = ((distribue / objectif) * 100) |
                  round(0) if objectif > 0 else 0 %} {{ distribue | round(0) }}g
                  / {{ objectif | round(0) }}g ({{ pct }}%)
                icon: mdi:chart-line
                icon_color: >
                  {% set distribue =
                  states('input_number.pet_feeder_daily_consumption_counter') |
                  float(0) %} {% set objectif =
                  states('input_number.pet_feeder_target_daily_weight') |
                  float(85) %} {% set pct = ((distribue / objectif) * 100) |
                  round(0) if objectif > 0 else 0 %} {% if pct >= 100 %}green {%
                  elif pct >= 75 %}blue {% else %}orange {% endif %}
              - type: custom:mushroom-template-card
                primary: Consommation Moyenne
                secondary: >
                  {% set conso =
                  states('sensor.consommation_quotidienne_moyenne') %} {% if
                  conso not in ['unknown', 'unavailable'] %}
                    {{ conso }}g/jour 
                    (sur {{ state_attr('sensor.consommation_quotidienne_moyenne', 'jours_mesures') | default('0') }} jours)
                  {% else %}
                    Pas encore de données - Initialisez avec "Remplissage Manuel"
                  {% endif %}
                icon: mdi:chart-bell-curve
                icon_color: purple
              - type: custom:mushroom-template-card
                primary: 📅 Dernier Remplissage
                secondary: >
                  {% set timestamp =
                  states('input_number.pet_feeder_refill_date') | float(0) %} {%
                  if timestamp > 0 %}
                    {% set date = timestamp | timestamp_custom('%d/%m/%Y à %H:%M') %}
                    {{ date }}
                    (il y a {{ ((now().timestamp() - timestamp) / 86400) | round(1) }} jours)
                  {% else %}
                    Jamais initialisé - Cliquez sur "Remplissage Manuel"
                  {% endif %}
                icon: mdi:calendar-clock
                icon_color: cyan
              - type: custom:mushroom-template-card
                primary: Écart Balance vs Estimé
                secondary: >
                  {{ states('sensor.ecart_stock_vs_balance') | round(0) }}g
                  (Balance: {{ states('sensor.balance_croquettes_en_grammes') |
                  round(0) }}g /  Estimé: {{
                  states('input_number.pet_feeder_stock_estime') | round(0) }}g)
                icon: mdi:delta
                icon_color: >
                  {% set ecart = states('sensor.ecart_stock_vs_balance') |
                  float(0) %} {% if ecart < 50 %}green {% elif ecart < 100
                  %}orange {% else %}red {% endif %}
              - type: custom:mushroom-template-card
                primary: Dernière Distribution
                secondary: >
                  {% set poids = states('sensor.dernier_repas_distribue_g') %}
                  {% set portions =
                  state_attr('sensor.dernier_repas_distribue_g', 'portions') %}
                  {% if poids not in ['unknown', 'unavailable'] %}
                    {{ poids }}g
                    {% if portions not in ['unknown', 'unavailable', none] %} ({{ portions }} portions){% endif %}
                  {% else %}
                    Aucune distribution récente
                  {% endif %}
                icon: mdi:clock-check
                icon_color: blue
              - type: custom:mushroom-template-card
                primary: Total Distribué (Vie)
                secondary: >
                  {{ states('sensor.poids_total_distribue') | float(0) |
                  round(0) }}g
                icon: mdi:counter
                icon_color: grey
              - type: custom:mushroom-template-card
                primary: Répartition Quotidienne
                secondary: >
                  {% set matin = state_attr('sensor.total_portions_calculees',
                  'matin') %} {% set midi =
                  state_attr('sensor.total_portions_calculees', 'midi') %} {%
                  set soir = state_attr('sensor.total_portions_calculees',
                  'soir') %} {% if matin and midi and soir %}
                    Matin: {{ matin }} | Midi: {{ midi }} | Soir: {{ soir }}
                  {% else %}
                    Configuration en cours...
                  {% endif %}
                icon: mdi:clock-outline
                icon_color: amber
      - type: grid
        cards:
          - type: vertical-stack
            cards:
              - type: custom:mushroom-title-card
                title: 🚽 Litière Automatique
                subtitle: État et contrôles
              - type: custom:mushroom-template-card
                primary: État Actuel
                secondary: >
                  {% set etat = states('sensor.litiere_etat') %} {% if etat ==
                  'idle' %}Au repos {% elif etat == 'cleaning' %}Nettoyage en
                  cours {% elif etat == 'dumping' %}Vidage en cours {% else %}{{
                  etat }} {% endif %} • {{
                  states('sensor.litiere_dernier_evenement') | replace('_', ' ')
                  | title }}
                icon: >
                  {% set etat = states('sensor.litiere_etat') %} {% if etat ==
                  'idle' %}mdi:checkbox-marked-circle {% elif etat == 'cleaning'
                  %}mdi:broom {% else %}mdi:cog-sync {% endif %}
                icon_color: >
                  {% set etat = states('sensor.litiere_etat') %} {% if etat ==
                  'idle' %}green {% elif etat == 'cleaning' %}blue {% else
                  %}orange {% endif %}
                badge_icon: >
                  {% if is_state('binary_sensor.litiere_bac_a_dechets_plein',
                  'on') %}mdi:alert-circle {% else %}mdi:check-circle {% endif
                  %}
                badge_color: >
                  {% if is_state('binary_sensor.litiere_bac_a_dechets_plein',
                  'on') %}red {% else %}green {% endif %}
                tap_action:
                  action: more-info
                  entity: sensor.litiere_etat
                card_mod:
                  style: |
                    ha-card {
                      background: linear-gradient(135deg, rgba(121,85,72,0.1) 0%, rgba(0,0,0,0.3) 100%);
                    }
              - type: conditional
                conditions:
                  - entity: binary_sensor.litiere_bac_a_dechets_plein
                    state: 'on'
                card:
                  type: custom:mushroom-template-card
                  primary: 🗑️ Bac à Déchets Plein
                  secondary: Vider le bac immédiatement
                  icon: mdi:delete-alert
                  icon_color: red
                  tap_action:
                    action: call-service
                    service: button.press
                    target:
                      entity_id: button.litiere_vider_la_litiere
                  card_mod:
                    style: |
                      ha-card {
                        background: rgba(244,67,54,0.1);
                        margin-top: 8px;
                      }
              - type: horizontal-stack
                cards:
                  - type: custom:mushroom-template-card
                    primary: Aujourd'hui
                    secondary: >
                      {{ states('sensor.litiere_nombre_d_utilisations_2') |
                      int(0) }} utilisations
                    icon: mdi:counter
                    icon_color: blue
                    tap_action:
                      action: more-info
                      entity: sensor.litiere_nombre_d_utilisations_2
                  - type: custom:mushroom-template-card
                    primary: Total
                    secondary: >
                      {{ states('sensor.litiere_utilisation_totale_2') | int(0)
                      }} utilisations
                    icon: mdi:chart-line
                    icon_color: purple
                    tap_action:
                      action: more-info
                      entity: sensor.litiere_utilisation_totale_2
              - type: custom:mushroom-template-card
                primary: 🌸 Désodorisant N50
                secondary: >
                  {{ states('sensor.litiere_odor_eliminator_n50_left_days') |
                  int(0) }} jour(s) restant(s)
                icon: mdi:spray
                icon_color: >
                  {% set jours =
                  states('sensor.litiere_odor_eliminator_n50_left_days') |
                  int(0) %} {% if jours > 7 %}green {% elif jours > 3 %}orange
                  {% else %}red {% endif %}
                tap_action:
                  action: more-info
                  entity: sensor.litiere_odor_eliminator_n50_left_days
              - type: entities
                title: 🎮 Actions
                entities:
                  - entity: button.litiere_nettoyer
                    name: 🧹 Nettoyer Maintenant
                  - entity: button.litiere_vider_la_litiere
                    name: 🗑️ Vider le Bac
                  - type: section
                    label: Maintenance
                  - entity: button.litiere_maintenance_demarrer
                    name: 🔧 Démarrer Maintenance
                  - entity: button.litiere_maintenance_quitter
                    name: ✅ Quitter Maintenance
                  - entity: button.litiere_reset_n50_odor_eliminator
                    name: 🔄 Réinitialiser N50
                card_mod:
                  style: |
                    ha-card {
                      background: rgba(121,85,72,0.05);
                      margin-top: 16px;
                    }
              - type: entities
                title: ⚙️ Paramètres
                entities:
                  - entity: switch.litiere_nettoyage_automatique
                    name: 🤖 Nettoyage Automatique
                  - entity: number.litiere_delai_de_nettoyage
                    name: ⏱️ Délai de Nettoyage
                  - entity: select.litiere_type_de_litiere
                    name: 📦 Type de Litière
                card_mod:
                  style: |
                    ha-card {
                      background: rgba(121,85,72,0.05);
                      margin-top: 8px;
                    }
      - type: grid
        cards: []
    background:
      opacity: 100
      alignment: center
      size: cover
      repeat: no-repeat
      attachment: scroll
      image: /api/image/serve/78aec1b5ecb1e3d64e6a04d799ea9716/original
    cards: []
    subview: true
    badges:
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.salon_presence_globale
          - state_on: 'on'
          - icon_on: hue:room-living
          - icon_off: hue:room-living-off
          - navigation_path: /salon-mushroom/sejour
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_cuisine_presence
          - state_on: 'on'
          - icon_on: hue:room-dining
          - icon_off: hue:room-dining-off
          - navigation_path: /salon-mushroom/cuisine
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_chambre_presence
          - state_on: 'on'
          - icon_on: hue:room-bedroom
          - icon_off: hue:room-bedroom-off
          - navigation_path: /dashboard-salon/chambre
      - type: custom:decluttering-card
        template: mushroom_presence_badge
        variables:
          - entity: binary_sensor.esp_sdb_presence
          - state_on: 'on'
          - icon_on: hue:room-bathroom
          - icon_off: hue:room-bathroom-off
          - navigation_path: /salon-mushroom/sdb
