# =============================================================================
# SYSTÈME D'ÉCLAIRAGE UNIFIÉ
# =============================================================================
# Ce système remplace vos deux automatisations par une approche centralisée
# qui gère à la fois les allumages manuels et automatiques par présence

# =============================================================================
# 1. AUTOMATISATION PRINCIPALE - Gestionnaire d'éclairage unifié
# =============================================================================
alias: "Gestionnaire éclairage unifié"
description: "Gestion centralisée de l'éclairage : présence, manuel, contexte"

triggers:
  # --- ALLUMAGES MANUELS ---
  - entity_id: light.hue_salon
    to: "on"
    trigger: state
    id: manual_salon
  - entity_id: light.hue_sam  
    to: "on"
    trigger: state
    id: manual_sam
  - entity_id: light.hue_chambre
    to: "on" 
    trigger: state
    id: manual_chambre
  - entity_id: light.hue_sdb
    to: "on"
    trigger: state  
    id: manual_sdb
  - entity_id: light.hue_cuisine
    to: "on"
    trigger: state
    id: manual_cuisine

  # --- DÉTECTION DE PRÉSENCE ---
  - entity_id: binary_sensor.esp_sdb_presence
    trigger: state
    id: presence_sdb
    for:
      seconds: 2
  - entity_id: sensor.presence_piece
    to: "Chambre"
    trigger: state
    id: presence_chambre_on
  - entity_id: sensor.presence_piece  
    from: "Chambre"
    trigger: state
    id: presence_chambre_off

  # --- ARRIVÉE À LA MAISON ---
  - entity_id: binary_sensor.ouvportent_contact
    to: "on"
    trigger: state
    id: arrivee_maison

conditions:
  # Présence confirmée OU arrivée récente (pour gérer les délais de synchro)
  - condition: or
    conditions:
      - condition: state
        entity_id: sensor.etat_canabang_et_device_tracker
        state: home
      # Cas spécial : arrivée maison (porte d'entrée)
      - condition: and
        conditions:
          - condition: trigger
            id: arrivee_maison
          - condition: or
            conditions:
              - condition: state
                entity_id: sensor.etat_canabang_et_device_tracker
                state: not_home
              - condition: template
                value_template: >-
                  {{ (as_timestamp(now()) - 
                     as_timestamp(states.sensor.etat_canabang_et_device_tracker.last_changed)) < 300 }}

actions:
  - choose:
      # =========================================================================
      # GESTION DES ALLUMAGES MANUELS
      # =========================================================================
      - conditions:
          - condition: trigger
            id: 
              - manual_salon
              - manual_sam  
              - manual_chambre
              - manual_sdb
              - manual_cuisine
          # Éviter les boucles (ne pas traiter si allumage automatique)
          - condition: template
            value_template: >-
              {{ trigger.to_state.context.user_id is not none }}
          # Uniquement si présence confirmée (pas pour arrivée maison)
          - condition: state
            entity_id: sensor.etat_canabang_et_device_tracker
            state: home
        sequence:
          - action: script.appliquer_scene_contextuelle
            data:
              piece: >-
                {% set room_map = {
                  'manual_salon': 'salon',
                  'manual_sam': 'sam', 
                  'manual_chambre': 'chambre',
                  'manual_sdb': 'sdb',
                  'manual_cuisine': 'cuisine'
                } %}
                {{ room_map[trigger.id] }}
              source: "manual"

      # =========================================================================
      # GESTION ARRIVÉE À LA MAISON
      # =========================================================================
      - conditions:
          - condition: trigger
            id: arrivee_maison
          # Conditions d'éclairage nécessaire
          - condition: numeric_state
            entity_id: sensor.lux_sejour
            below: 2
          # Vérifier que c'est bien une arrivée (pas déjà home ou changement récent)
          - condition: or
            conditions:
              - condition: state
                entity_id: sensor.etat_canabang_et_device_tracker
                state: not_home
              - condition: template
                value_template: >-
                  {{ (as_timestamp(now()) - 
                     as_timestamp(states.sensor.etat_canabang_et_device_tracker.last_changed)) < 300 }}
        sequence:
          - action: scene.turn_on
            target:
              entity_id:
                - scene.hue_salon_3_attenue
                - scene.hue_sam_3_attenue
            alias: "Éclairage d'accueil - Salon et SAM"

      # =========================================================================  
      # GESTION DE LA PRÉSENCE - SALLE DE BAIN
      # =========================================================================
      - conditions:
          - condition: trigger
            id: presence_sdb
          # Conditions de sécurité (éviter conflits avec autres appareils)
          - condition: state
            entity_id: sensor.volsdb_moving
            state: STOP
          - condition: numeric_state
            entity_id: sensor.prismal_power
            below: 5
        sequence:
          - choose:
              # Présence détectée + luminosité faible = allumer
              - conditions:
                  - condition: state
                    entity_id: binary_sensor.esp_sdb_presence  
                    state: "on"
                  - condition: numeric_state
                    entity_id: sensor.lux_sdb
                    below: 2
                  - condition: state
                    entity_id: light.hue_sdb
                    state: "off"
                sequence:
                  - action: script.allumer_et_appliquer_scene
                    data:
                      piece: "sdb"
                      source: "presence"
              
              # Absence détectée = éteindre
              - conditions:
                  - condition: state  
                    entity_id: binary_sensor.esp_sdb_presence
                    state: "off"
                  - condition: state
                    entity_id: light.hue_sdb  
                    state: "on"
                sequence:
                  - action: light.turn_off
                    target:
                      entity_id: light.hue_sdb

      # =========================================================================
      # GESTION DE LA PRÉSENCE - CHAMBRE  
      # =========================================================================
      - conditions:
          - condition: trigger
            id: presence_chambre_on
          # Conditions spécifiques chambre
          - condition: state
            entity_id: binary_sensor.esp_chambre_presence
            state: "on"
          - condition: state  
            entity_id: binary_sensor.esp_bed_occupation_master_bed_occupied
            state: "off"
          - condition: template
            value_template: "{{ states('input_text.jour_nuit') == 'jour' }}"
          - condition: state
            entity_id: light.hue_chambre
            state: "off"
        sequence:
          - action: script.allumer_et_appliquer_scene
            data:
              piece: "chambre"  
              source: "presence"

      - conditions:
          - condition: trigger
            id: presence_chambre_off
          - condition: state
            entity_id: light.hue_chambre
            state: "on"
        sequence:
          - action: light.turn_off
            target:
              entity_id: light.hue_chambre

mode: single

# =============================================================================
# 2. SCRIPT - Allumer et appliquer scène
# =============================================================================  
alias: "Allumer et appliquer scène"
sequence:
  - action: light.turn_on
    target:
      entity_id: "light.hue_{{ piece }}"
  - delay:
      milliseconds: 500
  - action: script.appliquer_scene_contextuelle
    data:
      piece: "{{ piece }}"
      source: "{{ source }}"

fields:
  piece:
    selector:
      text: {}
    required: true
  source:
    selector:
      select:
        options:
          - "manual"  
          - "presence"
    required: true

# =============================================================================
# 3. SCRIPT - Appliquer scène contextuelle (VERSION SIMPLIFIÉE)
# =============================================================================
alias: "Appliquer scène contextuelle"  
sequence:
  - choose:
      # --- PAS À LA MAISON = RIEN ---
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') != 'home' }}
        sequence: []

      # --- NUIT = VEILLEUSE ---  
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'nuit' }}
        sequence:
          - action: scene.turn_on
            data:
              entity_id: "scene.hue_{{ piece }}_1_veilleuse"

      # --- JOUR + TRANSITION RÉCENTE (< 30min) = VEILLEUSE ---
      - conditions:
          - condition: template  
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'jour' and
                 states('input_datetime.dernier_changement_jour_nuit') not in ['unknown', 'unavailable'] and
                 (as_timestamp(now()) - as_timestamp(states.input_datetime.dernier_changement_jour_nuit.state)) < 1800 }}
        sequence:
          - action: scene.turn_on
            data:
              entity_id: "scene.hue_{{ piece }}_1_veilleuse"

      # --- JOUR + SOLEIL BAS = ATTÉNUÉ ---
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'jour' }}
          - condition: state
            entity_id: sun.sun
            state: below_horizon
        sequence:
          - action: scene.turn_on  
            data:
              entity_id: "scene.hue_{{ piece }}_3_attenue"

    # --- DÉFAUT : JOUR + SOLEIL HAUT = STIMULATION ---
    default:
      - condition: template
        value_template: >-
          {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
             states('input_text.jour_nuit') == 'jour' }}
      - action: scene.turn_on
        data:
          entity_id: "scene.hue_{{ piece }}_2_stimulation"

fields:
  piece:
    selector:
      text: {}
    required: true
  source:
    selector:
      select:
        options:
          - "manual"
          - "presence"  
    required: false

# =============================================================================
# 4. AUTOMATISATION - Extinction automatique par timeout (OPTIONNEL)
# ============================================================================= 
alias: "Extinction automatique par timeout"
description: "Éteint les lumières après X minutes sans mouvement"

triggers:
  - entity_id:
      - light.hue_salon
      - light.hue_sam
      - light.hue_chambre  
      - light.hue_sdb
      - light.hue_cuisine
    to: "on"
    trigger: state
    for:
      minutes: 30  # Ajustez selon vos besoins

conditions:
  # Uniquement si pas de mouvement récent
  - condition: template
    value_template: >-
      {% set room_sensors = {
        'light.hue_sdb': 'binary_sensor.esp_sdb_presence',
        'light.hue_chambre': 'binary_sensor.esp_chambre_presence'
      } %}
      {% set sensor = room_sensors.get(trigger.entity_id) %}
      {{ sensor is none or states(sensor) == 'off' }}

actions:
  - action: light.turn_off
    target:
      entity_id: "{{ trigger.entity_id }}"

mode: parallel

# =============================================================================
# CONFIGURATION ADDITIONNELLE RECOMMANDÉE
# =============================================================================

# Ces éléments existent déjà dans votre configuration :
# - sensor.etat_canabang_et_device_tracker (sensor personnalisé)
# - input_text.jour_nuit (helper créé)  
# - input_datetime.dernier_changement_jour_nuit (existant)

# Aucune configuration supplémentaire nécessaire !
