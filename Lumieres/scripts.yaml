# =============================================================================
# 2. SCRIPT - Allumer et appliquer scène
# =============================================================================  
alias: "Allumer et appliquer scène"
sequence:
  - action: light.turn_on
    target:
      entity_id: "light.hue_{{ piece }}"
  - delay:
      milliseconds: 500
  - action: script.appliquer_scene_contextuelle
    data:
      piece: "{{ piece }}"
      source: "{{ source }}"

fields:
  piece:
    selector:
      text: {}
    required: true
  source:
    selector:
      select:
        options:
          - "manual"  
          - "presence"
    required: true

# =============================================================================
# 3. SCRIPT - Appliquer scène contextuelle (VERSION SIMPLIFIÉE)
# =============================================================================
alias: "Appliquer scène contextuelle"  
sequence:
  - choose:
      # --- PAS À LA MAISON = RIEN ---
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') != 'home' }}
        sequence: []

      # --- NUIT = VEILLEUSE ---  
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'nuit' }}
        sequence:
          - action: scene.turn_on
            data:
              entity_id: "scene.hue_{{ piece }}_1_veilleuse"

      # --- JOUR + TRANSITION RÉCENTE (< 30min) = VEILLEUSE ---
      - conditions:
          - condition: template  
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'jour' and
                 states('input_datetime.dernier_changement_jour_nuit') not in ['unknown', 'unavailable'] and
                 (as_timestamp(now()) - as_timestamp(states.input_datetime.dernier_changement_jour_nuit.state)) < 1800 }}
        sequence:
          - action: scene.turn_on
            data:
              entity_id: "scene.hue_{{ piece }}_1_veilleuse"

      # --- JOUR + SOLEIL BAS = ATTÉNUÉ ---
      - conditions:
          - condition: template
            value_template: >-
              {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
                 states('input_text.jour_nuit') == 'jour' }}
          - condition: state
            entity_id: sun.sun
            state: below_horizon
        sequence:
          - action: scene.turn_on  
            data:
              entity_id: "scene.hue_{{ piece }}_3_attenue"

    # --- DÉFAUT : JOUR + SOLEIL HAUT = STIMULATION ---
    default:
      - condition: template
        value_template: >-
          {{ states('sensor.etat_canabang_et_device_tracker') == 'home' and
             states('input_text.jour_nuit') == 'jour' }}
      - action: scene.turn_on
        data:
          entity_id: "scene.hue_{{ piece }}_2_stimulation"

fields:
  piece:
    selector:
      text: {}
    required: true
  source:
    selector:
      select:
        options:
          - "manual"
          - "presence"  
    required: false
