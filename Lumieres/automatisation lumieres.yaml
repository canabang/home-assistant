# AUTOMATISATIONS LUMIÈRES HUE - VERSION OPTIMISÉE
# =================================================

# 1. ALLUMAGES MANUELS DES LUMIERES
# ==================================

- alias: "Lumières - Allumages Manuels"
  trigger:
    - platform: state
      entity_id: light.hue_cuisine
      to: "on"
      id: "cuisine"
    - platform: state
      entity_id: light.hue_salon
      to: "on"
      id: "salon"
    - platform: state
      entity_id: light.hue_sam
      to: "on"
      id: "sam"
    - platform: state
      entity_id: light.hue_chambre
      to: "on"
      id: "chambre"
    - platform: state
      entity_id: light.hue_sdb
      to: "on"
      id: "sdb"
  condition:
    - condition: state
      entity_id: sensor.etat_canabang_et_device_tracker
      state: "home"
    # Vérifier que la lumière vient vraiment de s'allumer
    - condition: template
      value_template: "{{ is_state('light.hue_' ~ trigger.id, 'on') }}"
    # Pour la chambre, ne pas intervenir si la scène dodo vient d'être activée
    - condition: or
      conditions:
        - condition: template
          value_template: "{{ trigger.id != 'chambre' }}"
        - condition: and
          conditions:
            - condition: template
              value_template: "{{ trigger.id == 'chambre' }}"
            - condition: template
              value_template: >
                {% set last_dodo = state_attr('scene.hue_chambre_5_dodo', 'last_triggered') %}
                {% if last_dodo %}
                  {{ (as_timestamp(now()) - as_timestamp(last_dodo)) > 30 }}
                {% else %}
                  true
                {% endif %}
  action:
    - service: script.appliquer_scene_lumiere_contextuelle
      data:
        piece: "{{ trigger.id }}"



# 4. OUVERTURE PORTE D'ENTREE (Salon + Salle à Manger)
# =====================================================

- alias: "Entrée - Allumage Salon et Salle à Manger"
  trigger:
    - platform: state
      entity_id: binary_sensor.ouvportent_contact
      to: "on"
  condition:
    # Vous devez être présent récemment ou absent
    - condition: or
      conditions:
        - condition: state
          entity_id: sensor.etat_canabang_et_device_tracker
          state: "absent"
        - condition: and
          conditions:
            - condition: state
              entity_id: sensor.etat_canabang_et_device_tracker
              state: "home"
            - condition: template
              value_template: >
                {% set last_change = state_attr('sensor.etat_canabang_et_device_tracker', 'last_changed') %}
                {% if last_change %}
                  {% set temps_ecoule = (as_timestamp(now()) - as_timestamp(last_change)) / 60 %}
                  {{ temps_ecoule < 5 }}
                {% else %}
                  false
                {% endif %}
    # Luminosité faible
    - condition: numeric_state
      entity_id: sensor.lux_sejour
      below: 2
    # Tous les volets sont fermés
    - condition: state
      entity_id: cover.volcui
      state: "closed"
    - condition: state
      entity_id: cover.volsal
      state: "closed"
    - condition: state
      entity_id: cover.volsam
      state: "closed"
    # Vérifier que les lumières sont éteintes
    - condition: state
      entity_id: light.hue_salon
      state: "off"
    - condition: state
      entity_id: light.hue_sam
      state: "off"
  action:
    # Allumer les lumières salon et salle à manger
    - service: light.turn_on
      target:
        entity_id: 
          - light.hue_salon
          - light.hue_sam
    # Appliquer les scènes appropriées
    - service: script.appliquer_scene_lumiere_contextuelle
      data:
        piece: "salon"
    - service: script.appliquer_scene_lumiere_contextuelle
      data:
        piece: "sam"

# SOLUTION AVEC HELPERS POUR ÉVITER LES FAUX POSITIFS
# ===================================================

# 2. GESTION INTELLIGENTE PRÉSENCE CHAMBRE
# ========================================

- alias: "Chambre - Analyse Présence"
  description: "Gère la confirmation de présence en chambre avec logique anti-faux-positif"
  trigger:
    # Détection immédiate
    - platform: state
      entity_id: binary_sensor.esp_chambre_presence
      to: "on"
      id: "presence_detectee"
    # Fin de détection
    - platform: state
      entity_id: binary_sensor.esp_chambre_presence
      to: "off"
      for: "00:00:30"
      id: "presence_finie"
    # Fin du timer de confirmation
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.chambre_confirmation
      id: "timer_confirmation_fini"
    # Mise à jour du sensor presence_piece
    - platform: state
      entity_id: sensor.presence_piece
      to: "Chambre"
      id: "presence_piece_confirmee"
  condition:
    - condition: state
      entity_id: sensor.etat_canabang_et_device_tracker
      state: "home"
  action:
    - choose:
        # === PRÉSENCE DÉTECTÉE ===
        - conditions:
            - condition: trigger
              id: "presence_detectee"
          sequence:
            - choose:
                # Confirmation immédiate si conditions évidentes
                - conditions:
                    - condition: or
                      conditions:
                        # Le sensor presence_piece est déjà à jour (rare mais possible)
                        - condition: state
                          entity_id: sensor.presence_piece
                          state: "Chambre"
                        # Logique de proximité : vous venez d'une pièce adjacente
                        - condition: and
                          conditions:
                            - condition: template
                              value_template: >
                                {{ states('sensor.presence_piece') in ['Salon', 'SdB', 'Cuisine'] }}
                            # Pas d'autre détection simultanée
                            - condition: state
                              entity_id: binary_sensor.esp_sdb_presence
                              state: "off"
                            - condition: state
                              entity_id: binary_sensor.esp_salon_presence  
                              state: "off"
                            - condition: state
                              entity_id: binary_sensor.esp_multi_capteur_presence
                              state: "off"
                        # Vous étiez déjà confirmé en chambre récemment
                        - condition: and
                          conditions:
                            - condition: template
                              value_template: >
                                {% set last_off = state_attr('input_boolean.chambre_presence_confirmee', 'last_changed') %}
                                {% if last_off %}
                                  {{ (as_timestamp(now()) - as_timestamp(last_off)) < 300 }}
                                {% else %}
                                  false
                                {% endif %}
                  sequence:
                    - service: input_boolean.turn_on
                      target:
                        entity_id: input_boolean.chambre_presence_confirmee
                    - service: timer.cancel
                      target:
                        entity_id: timer.chambre_confirmation
              # Sinon, démarrer le timer de confirmation
              default:
                - service: timer.start
                  target:
                    entity_id: timer.chambre_confirmation
                    
        # === SENSOR PRESENCE_PIECE MIS À JOUR ===
        - conditions:
            - condition: trigger
              id: "presence_piece_confirmee"
            - condition: state
              entity_id: binary_sensor.esp_chambre_presence
              state: "on"
          sequence:
            - service: input_boolean.turn_on
              target:
                entity_id: input_boolean.chambre_presence_confirmee
            - service: timer.cancel
              target:
                entity_id: timer.chambre_confirmation
                
        # === TIMER DE CONFIRMATION FINI ===
        - conditions:
            - condition: trigger
              id: "timer_confirmation_fini"
            - condition: state
              entity_id: binary_sensor.esp_chambre_presence
              state: "on"
          sequence:
            # Vérification finale avant confirmation
            - if:
                - condition: or
                  conditions:
                    # Le sensor s'est enfin mis à jour
                    - condition: state
                      entity_id: sensor.presence_piece
                      state: "Chambre"
                    # Toujours pas d'autres détections (bonne probabilité)
                    - condition: and
                      conditions:
                        - condition: state
                          entity_id: binary_sensor.esp_sdb_presence
                          state: "off"
                        - condition: state
                          entity_id: binary_sensor.esp_salon_presence
                          state: "off"
                        - condition: state
                          entity_id: binary_sensor.esp_multi_capteur_presence
                          state: "off"
              then:
                - service: input_boolean.turn_on
                  target:
                    entity_id: input_boolean.chambre_presence_confirmee
                    
        # === PRÉSENCE FINIE ===
        - conditions:
            - condition: trigger
              id: "presence_finie"
          sequence:
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.chambre_presence_confirmee
            - service: timer.cancel
              target:
                entity_id: timer.chambre_confirmation

# 3. GESTION INTELLIGENTE PRÉSENCE SALLE DE BAIN
# ===============================================

- alias: "SdB - Analyse Présence"
  description: "Gère la confirmation de présence en SdB avec logique anti-faux-positif renforcée"
  trigger:
    - platform: state
      entity_id: binary_sensor.esp_sdb_presence
      to: "on"
      id: "presence_detectee"
    - platform: state
      entity_id: binary_sensor.esp_sdb_presence
      to: "off"
      for: "00:00:30"
      id: "presence_finie"
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.sdb_confirmation
      id: "timer_confirmation_fini"
    - platform: state
      entity_id: sensor.presence_piece
      to: "SdB"
      id: "presence_piece_confirmee"
  condition:
    - condition: state
      entity_id: sensor.etat_canabang_et_device_tracker
      state: "home"
  action:
    - choose:
        # === PRÉSENCE DÉTECTÉE ===
        - conditions:
            - condition: trigger
              id: "presence_detectee"
          sequence:
            - choose:
                # Conditions strictes pour confirmation immédiate SdB
                - conditions:
                    # Fenêtre fermée ET machine éteinte
                    - condition: state
                      entity_id: binary_sensor.ouvfenetsdb_contact
                      state: "off"
                    - condition: numeric_state
                      entity_id: sensor.prismal_power
                      below: 5
                    # Volet stable
                    - condition: template
                      value_template: >
                        {{ states('cover.volsdb') in ['open', 'closed'] }}
                    # Pas d'autre détection OU sensor presence_piece déjà ok
                    - condition: or
                      conditions:
                        - condition: state
                          entity_id: sensor.presence_piece
                          state: "SdB"
                        - condition: and
                          conditions:
                            - condition: state
                              entity_id: binary_sensor.esp_chambre_presence
                              state: "off"
                            - condition: template
                              value_template: >
                                {{ states('sensor.presence_piece') in ['Chambre', 'Salon', 'Cuisine'] }}
                  sequence:
                    - service: input_boolean.turn_on
                      target:
                        entity_id: input_boolean.sdb_presence_confirmee
                    - service: timer.cancel
                      target:
                        entity_id: timer.sdb_confirmation
              # Sinon, conditions défavorables = démarrer timer plus long
              default:
                - service: timer.start
                  target:
                    entity_id: timer.sdb_confirmation
                    
        # === SENSOR PRESENCE_PIECE MIS À JOUR ===
        - conditions:
            - condition: trigger
              id: "presence_piece_confirmee"
            - condition: state
              entity_id: binary_sensor.esp_sdb_presence
              state: "on"
            # Conditions de sécurité pour la SdB
            - condition: state
              entity_id: binary_sensor.ouvfenetsdb_contact
              state: "off"
            - condition: numeric_state
              entity_id: sensor.prismal_power
              below: 5
          sequence:
            - service: input_boolean.turn_on
              target:
                entity_id: input_boolean.sdb_presence_confirmee
            - service: timer.cancel
              target:
                entity_id: timer.sdb_confirmation
                
        # === TIMER DE CONFIRMATION FINI ===
        - conditions:
            - condition: trigger
              id: "timer_confirmation_fini"
            - condition: state
              entity_id: binary_sensor.esp_sdb_presence
              state: "on"
            # Vérifications finales strictes pour SdB
            - condition: state
              entity_id: binary_sensor.ouvfenetsdb_contact
              state: "off"
            - condition: numeric_state
              entity_id: sensor.prismal_power
              below: 5
          sequence:
            - if:
                - condition: or
                  conditions:
                    - condition: state
                      entity_id: sensor.presence_piece
                      state: "SdB"
                    # Même si le sensor n'est pas à jour, si pas d'autre détection = probablement bon
                    - condition: template
                      value_template: >
                        {{ state_attr('sensor.presence_piece', 'nombre_pieces_occupees') | int <= 1 }}
              then:
                - service: input_boolean.turn_on
                  target:
                    entity_id: input_boolean.sdb_presence_confirmee
                    
        # === PRÉSENCE FINIE ===
        - conditions:
            - condition: trigger
              id: "presence_finie"
          sequence:
            - service: input_boolean.turn_off
              target:
                entity_id: input_boolean.sdb_presence_confirmee
            - service: timer.cancel
              target:
                entity_id: timer.sdb_confirmation

# 4. CONTRÔLE DES LUMIÈRES BASÉ SUR LES HELPERS
# =============================================

- alias: "Chambre - Gestion Lumière Confirmée"
  description: "Allume/éteint la lumière chambre basé sur la présence confirmée"
  trigger:
    - platform: state
      entity_id: input_boolean.chambre_presence_confirmee
      to: "on"
      id: "presence_confirmee"
    - platform: state
      entity_id: input_boolean.chambre_presence_confirmee
      to: "off"
      id: "absence_confirmee"
  condition:
    - condition: state
      entity_id: sensor.etat_canabang_et_device_tracker
      state: "home"
  action:
    - choose:
        - conditions:
            - condition: trigger
              id: "presence_confirmee"
            - condition: state
              entity_id: light.hue_chambre
              state: "off"
            # Ne pas allumer automatiquement la nuit
            - condition: not
              conditions:
                - condition: state
                  entity_id: input_text.jour_nuit
                  state: "nuit"
            # Vérifier que la scène dodo n'a pas été activée récemment
            - condition: template
              value_template: >
                {% set last_dodo = state_attr('scene.hue_chambre_5_dodo', 'last_triggered') %}
                {% if last_dodo %}
                  {{ (as_timestamp(now()) - as_timestamp(last_dodo)) > 30 }}
                {% else %}
                  true
                {% endif %}
          sequence:
            - service: script.appliquer_scene_lumiere_contextuelle
              data:
                piece: "chambre"
        - conditions:
            - condition: trigger
              id: "absence_confirmee"
            - condition: state
              entity_id: light.hue_chambre
              state: "on"
          sequence:
            - service: light.turn_off
              target:
                entity_id: light.hue_chambre

- alias: "SdB - Gestion Lumière Confirmée"
  description: "Allume/éteint la lumière SdB basé sur la présence confirmée"
  trigger:
    - platform: state
      entity_id: input_boolean.sdb_presence_confirmee
      to: "on"
      id: "presence_confirmee"
    - platform: state
      entity_id: input_boolean.sdb_presence_confirmee
      to: "off"
      id: "absence_confirmee"
  condition:
    - condition: state
      entity_id: sensor.etat_canabang_et_device_tracker
      state: "home"
  action:
    - choose:
        - conditions:
            - condition: trigger
              id: "presence_confirmee"
            - condition: state
              entity_id: light.hue_sdb
              state: "off"
          sequence:
            - service: script.appliquer_scene_lumiere_contextuelle
              data:
                piece: "sdb"
        - conditions:
            - condition: trigger
              id: "absence_confirmee"
            - condition: state
              entity_id: light.hue_sdb
              state: "on"
          sequence:
            - service: light.turn_off
              target:
                entity_id: light.hue_sdb
